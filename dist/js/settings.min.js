if(angular.module("pascalprecht.translate",["ng"]).run(["$translate",function(e){var a=e.storageKey(),t=e.storage(),n=function(){var n=e.preferredLanguage();angular.isString(n)?e.use(n):t.put(a,e.use())};t?t.get(a)?e.use(t.get(a))["catch"](n):n():angular.isString(e.preferredLanguage())&&e.use(e.preferredLanguage())}]),angular.module("pascalprecht.translate").provider("$translate",["$STORAGE_KEY",function(e){var a,t,n,o,i,r,s,d,l,c,m,u,f,h,p,g={},b=[],v=e,y=[],w=!1,S="translate-cloak",A=!1,k=".",C="2.5.2",T=function(){var e,a,t=window.navigator,n=["language","browserLanguage","systemLanguage","userLanguage"];if(angular.isArray(t.languages))for(e=0;e<t.languages.length;e++)if(a=t.languages[e],a&&a.length)return a;for(e=0;e<n.length;e++)if(a=t[n[e]],a&&a.length)return a;return null};T.displayName="angular-translate/service: getFirstBrowserLanguage";var M=function(){return(T()||"").split("-").join("_")};M.displayName="angular-translate/service: getLocale";var N=function(e,a){for(var t=0,n=e.length;n>t;t++)if(e[t]===a)return t;return-1},x=function(){return this.replace(/^\s+|\s+$/g,"")},E=function(e){for(var a=[],n=angular.lowercase(e),o=0,i=b.length;i>o;o++)a.push(angular.lowercase(b[o]));if(N(a,n)>-1)return e;if(t){var r;for(var s in t){var d=!1,l=Object.prototype.hasOwnProperty.call(t,s)&&angular.lowercase(s)===angular.lowercase(e);if("*"===s.slice(-1)&&(d=s.slice(0,-1)===e.slice(0,s.length-1)),(l||d)&&(r=t[s],N(a,angular.lowercase(r))>-1))return r}}var c=e.split("_");return c.length>1&&N(a,angular.lowercase(c[0]))>-1?c[0]:e},B=function(e,a){if(!e&&!a)return g;if(e&&!a){if(angular.isString(e))return g[e]}else angular.isObject(g[e])||(g[e]={}),angular.extend(g[e],L(a));return this};this.translations=B,this.cloakClassName=function(e){return e?(S=e,this):S};var L=function(e,a,t,n){var o,i,r,s;a||(a=[]),t||(t={});for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&(s=e[o],angular.isObject(s)?L(s,a.concat(o),t,o):(i=a.length?""+a.join(k)+k+o:o,a.length&&o===n&&(r=""+a.join(k),t[r]="@:"+i),t[i]=s));return t};this.addInterpolation=function(e){return y.push(e),this},this.useMessageFormatInterpolation=function(){return this.useInterpolation("$translateMessageFormatInterpolation")},this.useInterpolation=function(e){return c=e,this},this.useSanitizeValueStrategy=function(e){return w=e,this},this.preferredLanguage=function(e){return R(e),this};var R=function(e){return e&&(a=e),a};this.translationNotFoundIndicator=function(e){return this.translationNotFoundIndicatorLeft(e),this.translationNotFoundIndicatorRight(e),this},this.translationNotFoundIndicatorLeft=function(e){return e?(f=e,this):f},this.translationNotFoundIndicatorRight=function(e){return e?(h=e,this):h},this.fallbackLanguage=function(e){return P(e),this};var P=function(e){return e?(angular.isString(e)?(o=!0,n=[e]):angular.isArray(e)&&(o=!1,n=e),angular.isString(a)&&N(n,a)<0&&n.push(a),this):o?n[0]:n};this.use=function(e){if(e){if(!g[e]&&!m)throw new Error("$translateProvider couldn't find translationTable for langKey: '"+e+"'");return i=e,this}return i};var D=function(e){return e?(v=e,void 0):d?d+v:v};this.storageKey=D,this.useUrlLoader=function(e,a){return this.useLoader("$translateUrlLoader",angular.extend({url:e},a))},this.useStaticFilesLoader=function(e){return this.useLoader("$translateStaticFilesLoader",e)},this.useLoader=function(e,a){return m=e,u=a||{},this},this.useLocalStorage=function(){return this.useStorage("$translateLocalStorage")},this.useCookieStorage=function(){return this.useStorage("$translateCookieStorage")},this.useStorage=function(e){return s=e,this},this.storagePrefix=function(e){return e?(d=e,this):e},this.useMissingTranslationHandlerLog=function(){return this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")},this.useMissingTranslationHandler=function(e){return l=e,this},this.usePostCompiling=function(e){return A=!!e,this},this.determinePreferredLanguage=function(e){var t=e&&angular.isFunction(e)?e():M();return a=b.length?E(t):t,this},this.registerAvailableLanguageKeys=function(e,a){return e?(b=e,a&&(t=a),this):b},this.useLoaderCache=function(e){return e===!1?p=void 0:e===!0?p=!0:"undefined"==typeof e?p="$translationCache":e&&(p=e),this},this.$get=["$log","$injector","$rootScope","$q",function(e,t,d,b){var k,T,M,O=t.get(c||"$translateDefaultInterpolation"),I=!1,$={},H={},K=function(e,t,o){if(angular.isArray(e)){var r=function(e){for(var a={},n=[],i=function(e){var n=b.defer(),i=function(t){a[e]=t,n.resolve([e,t])};return K(e,t,o).then(i,i),n.promise},r=0,s=e.length;s>r;r++)n.push(i(e[r]));return b.all(n).then(function(){return a})};return r(e)}var d=b.defer();e&&(e=x.apply(e));var l=function(){var e=a?H[a]:H[i];if(T=0,s&&!e){var t=k.get(v);if(e=H[t],n&&n.length){var o=N(n,t);T=0===o?1:0,N(n,a)<0&&n.push(a)}}return e}();return l?l.then(function(){q(e,t,o).then(d.resolve,d.reject)},d.reject):q(e,t,o).then(d.resolve,d.reject),d.promise},G=function(e){return f&&(e=[f,e].join(" ")),h&&(e=[e,h].join(" ")),e},F=function(e){i=e,d.$emit("$translateChangeSuccess",{language:e}),s&&k.put(K.storageKey(),i),O.setLocale(i),angular.forEach($,function(e,a){$[a].setLocale(i)}),d.$emit("$translateChangeEnd",{language:e})},U=function(e){if(!e)throw"No language key specified for loading.";var a=b.defer();d.$emit("$translateLoadingStart",{language:e}),I=!0;var n=p;"string"==typeof n&&(n=t.get(n));var o=angular.extend({},u,{key:e,$http:angular.extend({},{cache:n},u.$http)});return t.get(m)(o).then(function(t){var n={};d.$emit("$translateLoadingSuccess",{language:e}),angular.isArray(t)?angular.forEach(t,function(e){angular.extend(n,L(e))}):angular.extend(n,L(t)),I=!1,a.resolve({key:e,table:n}),d.$emit("$translateLoadingEnd",{language:e})},function(e){d.$emit("$translateLoadingError",{language:e}),a.reject(e),d.$emit("$translateLoadingEnd",{language:e})}),a.promise};if(s&&(k=t.get(s),!k.get||!k.put))throw new Error("Couldn't use storage '"+s+"', missing get() or put() method!");angular.isFunction(O.useSanitizeValueStrategy)&&O.useSanitizeValueStrategy(w),y.length&&angular.forEach(y,function(e){var n=t.get(e);n.setLocale(a||i),angular.isFunction(n.useSanitizeValueStrategy)&&n.useSanitizeValueStrategy(w),$[n.getInterpolationIdentifier()]=n});var V=function(e){var a=b.defer();return Object.prototype.hasOwnProperty.call(g,e)?a.resolve(g[e]):H[e]?H[e].then(function(e){B(e.key,e.table),a.resolve(e.table)},a.reject):a.reject(),a.promise},_=function(e,a,t,n){var o=b.defer();return V(e).then(function(r){Object.prototype.hasOwnProperty.call(r,a)?(n.setLocale(e),o.resolve(n.interpolate(r[a],t)),n.setLocale(i)):o.reject()},o.reject),o.promise},z=function(e,a,t,n){var o,r=g[e];return r&&Object.prototype.hasOwnProperty.call(r,a)&&(n.setLocale(e),o=n.interpolate(r[a],t),n.setLocale(i)),o},j=function(e){if(l){var a=t.get(l)(e,i);return void 0!==a?a:e}return e},W=function(e,a,t,o){var i=b.defer();if(e<n.length){var r=n[e];_(r,a,t,o).then(i.resolve,function(){W(e+1,a,t,o).then(i.resolve)})}else i.resolve(j(a));return i.promise},Y=function(e,a,t,o){var i;if(e<n.length){var r=n[e];i=z(r,a,t,o),i||(i=Y(e+1,a,t,o))}return i},J=function(e,a,t){return W(M>0?M:T,e,a,t)},Z=function(e,a,t){return Y(M>0?M:T,e,a,t)},q=function(e,a,t){var o=b.defer(),r=i?g[i]:g,s=t?$[t]:O;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];"@:"===d.substr(0,2)?K(d.substr(2),a,t).then(o.resolve,o.reject):o.resolve(s.interpolate(d,a))}else{var c;l&&!I&&(c=j(e)),i&&n&&n.length?J(e,a,s).then(function(e){o.resolve(e)},function(e){o.reject(G(e))}):l&&!I&&c?o.resolve(c):o.reject(G(e))}return o.promise},Q=function(e,a,t){var o,r=i?g[i]:g,s=t?$[t]:O;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];o="@:"===d.substr(0,2)?Q(d.substr(2),a,t):s.interpolate(d,a)}else{var c;l&&!I&&(c=j(e)),i&&n&&n.length?(T=0,o=Z(e,a,s)):o=l&&!I&&c?c:G(e)}return o};if(K.preferredLanguage=function(e){return e&&R(e),a},K.cloakClassName=function(){return S},K.fallbackLanguage=function(e){if(void 0!==e&&null!==e){if(P(e),m&&n&&n.length)for(var a=0,t=n.length;t>a;a++)H[n[a]]||(H[n[a]]=U(n[a]));K.use(K.use())}return o?n[0]:n},K.useFallbackLanguage=function(e){if(void 0!==e&&null!==e)if(e){var a=N(n,e);a>-1&&(M=a)}else M=0},K.proposedLanguage=function(){return r},K.storage=function(){return k},K.use=function(e){if(!e)return i;var a=b.defer();d.$emit("$translateChangeStart",{language:e});var t=E(e);return t&&(e=t),g[e]||!m||H[e]?(a.resolve(e),F(e)):(r=e,H[e]=U(e).then(function(t){return B(t.key,t.table),a.resolve(t.key),F(t.key),r===e&&(r=void 0),t},function(e){r===e&&(r=void 0),d.$emit("$translateChangeError",{language:e}),a.reject(e),d.$emit("$translateChangeEnd",{language:e})})),a.promise},K.storageKey=function(){return D()},K.isPostCompilingEnabled=function(){return A},K.refresh=function(e){function a(){o.resolve(),d.$emit("$translateRefreshEnd",{language:e})}function t(){o.reject(),d.$emit("$translateRefreshEnd",{language:e})}if(!m)throw new Error("Couldn't refresh translation table, no loader registered!");var o=b.defer();if(d.$emit("$translateRefreshStart",{language:e}),e)g[e]?U(e).then(function(t){B(t.key,t.table),e===i&&F(i),a()},t):t();else{var r=[],s={};if(n&&n.length)for(var l=0,c=n.length;c>l;l++)r.push(U(n[l])),s[n[l]]=!0;i&&!s[i]&&r.push(U(i)),b.all(r).then(function(e){angular.forEach(e,function(e){g[e.key]&&delete g[e.key],B(e.key,e.table)}),i&&F(i),a()})}return o.promise},K.instant=function(e,t,o){if(null===e||angular.isUndefined(e))return e;if(angular.isArray(e)){for(var r={},s=0,d=e.length;d>s;s++)r[e[s]]=K.instant(e[s],t,o);return r}if(angular.isString(e)&&e.length<1)return e;e&&(e=x.apply(e));var c,m=[];a&&m.push(a),i&&m.push(i),n&&n.length&&(m=m.concat(n));for(var u=0,f=m.length;f>u;u++){var h=m[u];if(g[h]&&"undefined"!=typeof g[h][e]&&(c=Q(e,t,o)),"undefined"!=typeof c)break}return c||""===c||(c=O.interpolate(e,t),l&&!I&&(c=j(e))),c},K.versionInfo=function(){return C},K.loaderCache=function(){return p},m&&(angular.equals(g,{})&&K.use(K.use()),n&&n.length))for(var X=function(e){return B(e.key,e.table),d.$emit("$translateChangeEnd",{language:e.key}),e},ea=0,aa=n.length;aa>ea;ea++)H[n[ea]]=U(n[ea]).then(X);return K}]}]),angular.module("pascalprecht.translate").factory("$translateDefaultInterpolation",["$interpolate",function(e){var a,t={},n="default",o=null,i={escaped:function(e){var a={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=angular.element("<div></div>").text(e[t]).html());return a}},r=function(e){var a;return a=angular.isFunction(i[o])?i[o](e):e};return t.setLocale=function(e){a=e},t.getInterpolationIdentifier=function(){return n},t.useSanitizeValueStrategy=function(e){return o=e,this},t.interpolate=function(a,t){return o&&(t=r(t)),e(a)(t||{})},t}]),angular.module("pascalprecht.translate").constant("$STORAGE_KEY","NG_TRANSLATE_LANG_KEY"),angular.module("pascalprecht.translate").directive("translate",["$translate","$q","$interpolate","$compile","$parse","$rootScope",function(e,a,t,n,o,i){return{restrict:"AE",scope:!0,compile:function(a,r){var s=r.translateValues?r.translateValues:void 0,d=r.translateInterpolation?r.translateInterpolation:void 0,l=a[0].outerHTML.match(/translate-value-+/i),c="^(.*)("+t.startSymbol()+".*"+t.endSymbol()+")(.*)",m="^(.*)"+t.startSymbol()+"(.*)"+t.endSymbol()+"(.*)";return function(a,u,f){a.interpolateParams={},a.preText="",a.postText="";var h={},p=function(e){if(angular.equals(e,"")||!angular.isDefined(e)){var n=u.text().match(c);angular.isArray(n)?(a.preText=n[1],a.postText=n[3],h.translate=t(n[2])(a.$parent),watcherMatches=u.text().match(m),angular.isArray(watcherMatches)&&watcherMatches[2]&&watcherMatches[2].length&&a.$watch(watcherMatches[2],function(e){h.translate=e,w()})):h.translate=u.text().replace(/^\s+|\s+$/g,"")}else h.translate=e;w()},g=function(e){f.$observe(e,function(a){h[e]=a,w()})};f.$observe("translate",function(e){p(e)});for(var b in f)f.hasOwnProperty(b)&&"translateAttr"===b.substr(0,13)&&g(b);if(f.$observe("translateDefault",function(e){a.defaultText=e}),s&&f.$observe("translateValues",function(e){e&&a.$parent.$watch(function(){angular.extend(a.interpolateParams,o(e)(a.$parent))})}),l){var v=function(e){f.$observe(e,function(t){var n=angular.lowercase(e.substr(14,1))+e.substr(15);a.interpolateParams[n]=t})};for(var y in f)Object.prototype.hasOwnProperty.call(f,y)&&"translateValue"===y.substr(0,14)&&"translateValues"!==y&&v(y)}var w=function(){for(var e in h)h.hasOwnProperty(e)&&h[e]&&S(e,h[e],a,a.interpolateParams)},S=function(a,t,n,o){e(t,o,d).then(function(e){A(e,n,!0,a)},function(e){A(e,n,!1,a)})},A=function(a,t,o,i){if("translate"===i){o||"undefined"==typeof t.defaultText||(a=t.defaultText),u.html(t.preText+a+t.postText);var s=e.isPostCompilingEnabled(),d="undefined"!=typeof r.translateCompile,l=d&&"false"!==r.translateCompile;(s&&!d||l)&&n(u.contents())(t)}else{o||"undefined"==typeof t.defaultText||(a=t.defaultText);var c=f.$attr[i].substr(15);u.attr(c,a)}};a.$watch("interpolateParams",w,!0);var k=i.$on("$translateChangeSuccess",w);u.text().length&&p(""),w(),a.$on("$destroy",k)}}}}]),angular.module("pascalprecht.translate").directive("translateCloak",["$rootScope","$translate",function(e,a){return{compile:function(t){var n=function(){t.addClass(a.cloakClassName())},o=function(){t.removeClass(a.cloakClassName())},i=e.$on("$translateChangeEnd",function(){o(),i(),i=null});return n(),function(e,t,i){i.translateCloak&&i.translateCloak.length&&i.$observe("translateCloak",function(e){a(e).then(o,n)})}}}}]),angular.module("pascalprecht.translate").filter("translate",["$parse","$translate",function(e,a){var t=function(t,n,o){return angular.isObject(n)||(n=e(n)(this)),a.instant(t,n,o)};return t.$stateful=!0,t}]),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){return function(t){if(!t||!angular.isString(t.prefix)||!angular.isString(t.suffix))throw new Error("Couldn't load static files, no prefix or suffix specified!");var n=e.defer();return a(angular.extend({url:[t.prefix,t.key,t.suffix].join(""),method:"GET",params:""},t.$http)).success(function(e){n.resolve(e)}).error(function(){n.reject(t.key)}),n.promise}}]),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){function t(e,n){a(angular.extend({url:[e.prefix,e.key.toLowerCase(),e.suffix].join(""),method:"GET",params:""},e.$http)).success(function(e){n.resolve(e)}).error(function(){if(e.key.indexOf("_")>=0){var a=e.key.substr(0,e.key.lastIndexOf("_")),o=angular.extend({},e,{key:a});t(o,n)}else n.resolve("{}")})}return function(a){if(!a||!angular.isString(a.prefix)||!angular.isString(a.suffix))throw new Error('Couldn"t load static files, no prefix or suffix specified!');var n=e.defer();return t(a,n),n.promise}}]),angular.module("risevision.common.i18n",["pascalprecht.translate","risevision.common.i18n.config"]).config(["$translateProvider","LOCALES_PREFIX","LOCALES_SUFIX",function(e,a,t){e.useStaticFilesLoader({prefix:a,suffix:t}),e.determinePreferredLanguage().fallbackLanguage("en")}]),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.affix"),i="object"==typeof a&&a;o||n.data("bs.affix",o=new t(this,i)),"string"==typeof a&&o[a]()})}var t=function(a,n){this.options=e.extend({},t.DEFAULTS,n),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(a),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};t.VERSION="3.2.0",t.RESET="affix affix-top affix-bottom",t.DEFAULTS={offset:0,target:window},t.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(t.RESET).addClass("affix");var e=this.$target.scrollTop(),a=this.$element.offset();return this.pinnedOffset=a.top-e},t.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},t.prototype.checkPosition=function(){if(this.$element.is(":visible")){var a=e(document).height(),n=this.$target.scrollTop(),o=this.$element.offset(),i=this.options.offset,r=i.top,s=i.bottom;"object"!=typeof i&&(s=r=i),"function"==typeof r&&(r=i.top(this.$element)),"function"==typeof s&&(s=i.bottom(this.$element));var d=null!=this.unpin&&n+this.unpin<=o.top?!1:null!=s&&o.top+this.$element.height()>=a-s?"bottom":null!=r&&r>=n?"top":!1;if(this.affixed!==d){null!=this.unpin&&this.$element.css("top","");var l="affix"+(d?"-"+d:""),c=e.Event(l+".bs.affix");this.$element.trigger(c),c.isDefaultPrevented()||(this.affixed=d,this.unpin="bottom"==d?this.getPinnedOffset():null,this.$element.removeClass(t.RESET).addClass(l).trigger(e.Event(l.replace("affix","affixed"))),"bottom"==d&&this.$element.offset({top:a-this.$element.height()-s}))}}};var n=e.fn.affix;e.fn.affix=a,e.fn.affix.Constructor=t,e.fn.affix.noConflict=function(){return e.fn.affix=n,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),a.call(t,n)})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.alert");o||t.data("bs.alert",o=new n(this)),"string"==typeof a&&o[a].call(t)})}var t='[data-dismiss="alert"]',n=function(a){e(a).on("click",t,this.close)};n.VERSION="3.2.0",n.prototype.close=function(a){function t(){i.detach().trigger("closed.bs.alert").remove()}var n=e(this),o=n.attr("data-target");o||(o=n.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var i=e(o);a&&a.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(a=e.Event("close.bs.alert")),a.isDefaultPrevented()||(i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.one("bsTransitionEnd",t).emulateTransitionEnd(150):t())};var o=e.fn.alert;e.fn.alert=a,e.fn.alert.Constructor=n,e.fn.alert.noConflict=function(){return e.fn.alert=o,this},e(document).on("click.bs.alert.data-api",t,n.prototype.close)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.button"),i="object"==typeof a&&a;o||n.data("bs.button",o=new t(this,i)),"toggle"==a?o.toggle():a&&o.setState(a)})}var t=function(a,n){this.$element=e(a),this.options=e.extend({},t.DEFAULTS,n),this.isLoading=!1};t.VERSION="3.2.0",t.DEFAULTS={loadingText:"loading..."},t.prototype.setState=function(a){var t="disabled",n=this.$element,o=n.is("input")?"val":"html",i=n.data();a+="Text",null==i.resetText&&n.data("resetText",n[o]()),n[o](null==i[a]?this.options[a]:i[a]),setTimeout(e.proxy(function(){"loadingText"==a?(this.isLoading=!0,n.addClass(t).attr(t,t)):this.isLoading&&(this.isLoading=!1,n.removeClass(t).removeAttr(t))},this),0)},t.prototype.toggle=function(){var e=!0,a=this.$element.closest('[data-toggle="buttons"]');if(a.length){var t=this.$element.find("input");"radio"==t.prop("type")&&(t.prop("checked")&&this.$element.hasClass("active")?e=!1:a.find(".active").removeClass("active")),e&&t.prop("checked",!this.$element.hasClass("active")).trigger("change")}e&&this.$element.toggleClass("active")};var n=e.fn.button;e.fn.button=a,e.fn.button.Constructor=t,e.fn.button.noConflict=function(){return e.fn.button=n,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),a.call(n,"toggle"),t.preventDefault()})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.carousel"),i=e.extend({},t.DEFAULTS,n.data(),"object"==typeof a&&a),r="string"==typeof a?a:i.slide;o||n.data("bs.carousel",o=new t(this,i)),"number"==typeof a?o.to(a):r?o[r]():i.interval&&o.pause().cycle()})}var t=function(a,t){this.$element=e(a).on("keydown.bs.carousel",e.proxy(this.keydown,this)),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};t.VERSION="3.2.0",t.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},t.prototype.keydown=function(e){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()},t.prototype.cycle=function(a){return a||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},t.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},t.prototype.to=function(a){var t=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(a)}):n==a?this.pause().cycle():this.slide(a>n?"next":"prev",e(this.$items[a]))},t.prototype.pause=function(a){return a||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},t.prototype.next=function(){return this.sliding?void 0:this.slide("next")},t.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},t.prototype.slide=function(a,t){var n=this.$element.find(".item.active"),o=t||n[a](),i=this.interval,r="next"==a?"left":"right",s="next"==a?"first":"last",d=this;if(!o.length){if(!this.options.wrap)return;o=this.$element.find(".item")[s]()}if(o.hasClass("active"))return this.sliding=!1;var l=o[0],c=e.Event("slide.bs.carousel",{relatedTarget:l,direction:r});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,i&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var m=e(this.$indicators.children()[this.getItemIndex(o)]);m&&m.addClass("active")}var u=e.Event("slid.bs.carousel",{relatedTarget:l,direction:r});return e.support.transition&&this.$element.hasClass("slide")?(o.addClass(a),o[0].offsetWidth,n.addClass(r),o.addClass(r),n.one("bsTransitionEnd",function(){o.removeClass([a,r].join(" ")).addClass("active"),n.removeClass(["active",r].join(" ")),d.sliding=!1,setTimeout(function(){d.$element.trigger(u)},0)}).emulateTransitionEnd(1e3*n.css("transition-duration").slice(0,-1))):(n.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(u)),i&&this.cycle(),this}};var n=e.fn.carousel;e.fn.carousel=a,e.fn.carousel.Constructor=t,e.fn.carousel.noConflict=function(){return e.fn.carousel=n,this},e(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(t){var n,o=e(this),i=e(o.attr("data-target")||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""));if(i.hasClass("carousel")){var r=e.extend({},i.data(),o.data()),s=o.attr("data-slide-to");s&&(r.interval=!1),a.call(i,r),s&&i.data("bs.carousel").to(s),t.preventDefault()}}),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var t=e(this);a.call(t,t.data())})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.collapse"),i=e.extend({},t.DEFAULTS,n.data(),"object"==typeof a&&a);!o&&i.toggle&&"show"==a&&(a=!a),o||n.data("bs.collapse",o=new t(this,i)),"string"==typeof a&&o[a]()})}var t=function(a,n){this.$element=e(a),this.options=e.extend({},t.DEFAULTS,n),this.transitioning=null,this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.VERSION="3.2.0",t.DEFAULTS={toggle:!0},t.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},t.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t=e.Event("show.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var n=this.$parent&&this.$parent.find("> .panel > .in");if(n&&n.length){var o=n.data("bs.collapse");if(o&&o.transitioning)return;a.call(n,"hide"),o||n.data("bs.collapse",null)}var i=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[i](0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[i](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return r.call(this);var s=e.camelCase(["scroll",i].join("-"));this.$element.one("bsTransitionEnd",e.proxy(r,this)).emulateTransitionEnd(350)[i](this.$element[0][s])}}},t.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var a=e.Event("hide.bs.collapse");if(this.$element.trigger(a),!a.isDefaultPrevented()){var t=this.dimension();this.$element[t](this.$element[t]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return e.support.transition?(this.$element[t](0).one("bsTransitionEnd",e.proxy(n,this)).emulateTransitionEnd(350),void 0):n.call(this)}}},t.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var n=e.fn.collapse;e.fn.collapse=a,e.fn.collapse.Constructor=t,e.fn.collapse.noConflict=function(){return e.fn.collapse=n,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){var n,o=e(this),i=o.attr("data-target")||t.preventDefault()||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""),r=e(i),s=r.data("bs.collapse"),d=s?"toggle":o.data(),l=o.attr("data-parent"),c=l&&e(l);s&&s.transitioning||(c&&c.find('[data-toggle="collapse"][data-parent="'+l+'"]').not(o).addClass("collapsed"),o[r.hasClass("in")?"addClass":"removeClass"]("collapsed")),a.call(r,d)})}(jQuery),+function(e){"use strict";function a(a){a&&3===a.which||(e(o).remove(),e(i).each(function(){var n=t(e(this)),o={relatedTarget:this};n.hasClass("open")&&(n.trigger(a=e.Event("hide.bs.dropdown",o)),a.isDefaultPrevented()||n.removeClass("open").trigger("hidden.bs.dropdown",o))}))}function t(a){var t=a.attr("data-target");t||(t=a.attr("href"),t=t&&/#[A-Za-z]/.test(t)&&t.replace(/.*(?=#[^\s]*$)/,""));var n=t&&e(t);return n&&n.length?n:a.parent()}function n(a){return this.each(function(){var t=e(this),n=t.data("bs.dropdown");n||t.data("bs.dropdown",n=new r(this)),"string"==typeof a&&n[a].call(t)})}var o=".dropdown-backdrop",i='[data-toggle="dropdown"]',r=function(a){e(a).on("click.bs.dropdown",this.toggle)};r.VERSION="3.2.0",r.prototype.toggle=function(n){var o=e(this);if(!o.is(".disabled, :disabled")){var i=t(o),r=i.hasClass("open");if(a(),!r){"ontouchstart"in document.documentElement&&!i.closest(".navbar-nav").length&&e('<div class="dropdown-backdrop"/>').insertAfter(e(this)).on("click",a);var s={relatedTarget:this};if(i.trigger(n=e.Event("show.bs.dropdown",s)),n.isDefaultPrevented())return;o.trigger("focus"),i.toggleClass("open").trigger("shown.bs.dropdown",s)}return!1}},r.prototype.keydown=function(a){if(/(38|40|27)/.test(a.keyCode)){var n=e(this);if(a.preventDefault(),a.stopPropagation(),!n.is(".disabled, :disabled")){var o=t(n),r=o.hasClass("open");if(!r||r&&27==a.keyCode)return 27==a.which&&o.find(i).trigger("focus"),n.trigger("click");var s=" li:not(.divider):visible a",d=o.find('[role="menu"]'+s+', [role="listbox"]'+s);if(d.length){var l=d.index(d.filter(":focus"));38==a.keyCode&&l>0&&l--,40==a.keyCode&&l<d.length-1&&l++,~l||(l=0),d.eq(l).trigger("focus")}}}};var s=e.fn.dropdown;e.fn.dropdown=n,e.fn.dropdown.Constructor=r,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=s,this},e(document).on("click.bs.dropdown.data-api",a).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",i,r.prototype.toggle).on("keydown.bs.dropdown.data-api",i+', [role="menu"], [role="listbox"]',r.prototype.keydown)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.tab");o||n.data("bs.tab",o=new t(this)),"string"==typeof a&&o[a]()})}var t=function(a){this.element=e(a)};t.VERSION="3.2.0",t.prototype.show=function(){var a=this.element,t=a.closest("ul:not(.dropdown-menu)"),n=a.data("target");if(n||(n=a.attr("href"),n=n&&n.replace(/.*(?=#[^\s]*$)/,"")),!a.parent("li").hasClass("active")){var o=t.find(".active:last a")[0],i=e.Event("show.bs.tab",{relatedTarget:o});if(a.trigger(i),!i.isDefaultPrevented()){var r=e(n);this.activate(a.closest("li"),t),this.activate(r,r.parent(),function(){a.trigger({type:"shown.bs.tab",relatedTarget:o})})}}},t.prototype.activate=function(a,t,n){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),a.addClass("active"),r?(a[0].offsetWidth,a.addClass("in")):a.removeClass("fade"),a.parent(".dropdown-menu")&&a.closest("li.dropdown").addClass("active"),n&&n()}var i=t.find("> .active"),r=n&&e.support.transition&&i.hasClass("fade");r?i.one("bsTransitionEnd",o).emulateTransitionEnd(150):o(),i.removeClass("in")};var n=e.fn.tab;e.fn.tab=a,e.fn.tab.Constructor=t,e.fn.tab.noConflict=function(){return e.fn.tab=n,this},e(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),a.call(e(this),"show")})}(jQuery),+function(e){"use strict";function a(){var e=document.createElement("bootstrap"),a={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var t in a)if(void 0!==e.style[t])return{end:a[t]};return!1}e.fn.emulateTransitionEnd=function(a){var t=!1,n=this;e(this).one("bsTransitionEnd",function(){t=!0});var o=function(){t||e(n).trigger(e.support.transition.end)};return setTimeout(o,a),this},e(function(){e.support.transition=a(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(a){return e(a.target).is(this)?a.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(e){"use strict";function a(t,n){var o=e.proxy(this.process,this);this.$body=e("body"),this.$scrollElement=e(t).is("body")?e(window):e(t),this.options=e.extend({},a.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",o),this.refresh(),this.process()}function t(t){return this.each(function(){var n=e(this),o=n.data("bs.scrollspy"),i="object"==typeof t&&t;o||n.data("bs.scrollspy",o=new a(this,i)),"string"==typeof t&&o[t]()})}a.VERSION="3.2.0",a.DEFAULTS={offset:10},a.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},a.prototype.refresh=function(){var a="offset",t=0;e.isWindow(this.$scrollElement[0])||(a="position",t=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var n=this;this.$body.find(this.selector).map(function(){var n=e(this),o=n.data("target")||n.attr("href"),i=/^#./.test(o)&&e(o);return i&&i.length&&i.is(":visible")&&[[i[a]().top+t,o]]||null}).sort(function(e,a){return e[0]-a[0]}).each(function(){n.offsets.push(this[0]),n.targets.push(this[1])})},a.prototype.process=function(){var e,a=this.$scrollElement.scrollTop()+this.options.offset,t=this.getScrollHeight(),n=this.options.offset+t-this.$scrollElement.height(),o=this.offsets,i=this.targets,r=this.activeTarget;if(this.scrollHeight!=t&&this.refresh(),a>=n)return r!=(e=i[i.length-1])&&this.activate(e);if(r&&a<=o[0])return r!=(e=i[0])&&this.activate(e);for(e=o.length;e--;)r!=i[e]&&a>=o[e]&&(!o[e+1]||a<=o[e+1])&&this.activate(i[e])},a.prototype.activate=function(a){this.activeTarget=a,e(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var t=this.selector+'[data-target="'+a+'"],'+this.selector+'[href="'+a+'"]',n=e(t).parents("li").addClass("active");
n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate.bs.scrollspy")};var n=e.fn.scrollspy;e.fn.scrollspy=t,e.fn.scrollspy.Constructor=a,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=n,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var a=e(this);t.call(a,a.data())})})}(jQuery),+function(e){"use strict";function a(a,n){return this.each(function(){var o=e(this),i=o.data("bs.modal"),r=e.extend({},t.DEFAULTS,o.data(),"object"==typeof a&&a);i||o.data("bs.modal",i=new t(this,r)),"string"==typeof a?i[a](n):r.show&&i.show(n)})}var t=function(a,t){this.options=t,this.$body=e(document.body),this.$element=e(a),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};t.VERSION="3.2.0",t.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},t.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},t.prototype.show=function(a){var t=this,n=e.Event("show.bs.modal",{relatedTarget:a});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass("modal-open"),this.setScrollbar(),this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(t.$body),t.$element.show().scrollTop(0),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1),t.enforceFocus();var o=e.Event("shown.bs.modal",{relatedTarget:a});n?t.$element.find(".modal-dialog").one("bsTransitionEnd",function(){t.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(300):t.$element.trigger("focus").trigger(o)}))},t.prototype.hide=function(a){a&&a.preventDefault(),a=e.Event("hide.bs.modal"),this.$element.trigger(a),this.isShown&&!a.isDefaultPrevented()&&(this.isShown=!1,this.$body.removeClass("modal-open"),this.resetScrollbar(),this.escape(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},t.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},t.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},t.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$element.trigger("hidden.bs.modal")})},t.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},t.prototype.backdrop=function(a){var t=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=e.support.transition&&n;if(this.$backdrop=e('<div class="modal-backdrop '+n+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!a)return;o?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(150):a()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var i=function(){t.removeBackdrop(),a&&a()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",i).emulateTransitionEnd(150):i()}else a&&a()},t.prototype.checkScrollbar=function(){document.body.clientWidth>=window.innerWidth||(this.scrollbarWidth=this.scrollbarWidth||this.measureScrollbar())},t.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",e+this.scrollbarWidth)},t.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},t.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var a=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),a};var n=e.fn.modal;e.fn.modal=a,e.fn.modal.Constructor=t,e.fn.modal.noConflict=function(){return e.fn.modal=n,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),o=n.attr("href"),i=e(n.attr("data-target")||o&&o.replace(/.*(?=#[^\s]+$)/,"")),r=i.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(o)&&o},i.data(),n.data());n.is("a")&&t.preventDefault(),i.one("show.bs.modal",function(e){e.isDefaultPrevented()||i.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),a.call(i,r,this)})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.tooltip"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||n.data("bs.tooltip",o=new t(this,i)),"string"==typeof a&&o[a]())})}var t=function(e,a){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",e,a)};t.VERSION="3.2.0",t.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},t.prototype.init=function(a,t,n){this.enabled=!0,this.type=a,this.$element=e(t),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&e(this.options.viewport.selector||this.options.viewport);for(var o=this.options.trigger.split(" "),i=o.length;i--;){var r=o[i];if("click"==r)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=r){var s="hover"==r?"mouseenter":"focusin",d="hover"==r?"mouseleave":"focusout";this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(d+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},t.prototype.getDefaults=function(){return t.DEFAULTS},t.prototype.getOptions=function(a){return a=e.extend({},this.getDefaults(),this.$element.data(),a),a.delay&&"number"==typeof a.delay&&(a.delay={show:a.delay,hide:a.delay}),a},t.prototype.getDelegateOptions=function(){var a={},t=this.getDefaults();return this._options&&e.each(this._options,function(e,n){t[e]!=n&&(a[e]=n)}),a},t.prototype.enter=function(a){var t=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t)),clearTimeout(t.timeout),t.hoverState="in",t.options.delay&&t.options.delay.show?(t.timeout=setTimeout(function(){"in"==t.hoverState&&t.show()},t.options.delay.show),void 0):t.show()},t.prototype.leave=function(a){var t=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t)),clearTimeout(t.timeout),t.hoverState="out",t.options.delay&&t.options.delay.hide?(t.timeout=setTimeout(function(){"out"==t.hoverState&&t.hide()},t.options.delay.hide),void 0):t.hide()},t.prototype.show=function(){var a=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(a);var t=e.contains(document.documentElement,this.$element[0]);if(a.isDefaultPrevented()||!t)return;var n=this,o=this.tip(),i=this.getUID(this.type);this.setContent(),o.attr("id",i),this.$element.attr("aria-describedby",i),this.options.animation&&o.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,s=/\s?auto?\s?/i,d=s.test(r);d&&(r=r.replace(s,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var l=this.getPosition(),c=o[0].offsetWidth,m=o[0].offsetHeight;if(d){var u=r,f=this.$element.parent(),h=this.getPosition(f);r="bottom"==r&&l.top+l.height+m-h.scroll>h.height?"top":"top"==r&&l.top-h.scroll-m<0?"bottom":"right"==r&&l.right+c>h.width?"left":"left"==r&&l.left-c<h.left?"right":r,o.removeClass(u).addClass(r)}var p=this.getCalculatedOffset(r,l,c,m);this.applyPlacement(p,r);var g=function(){n.$element.trigger("shown.bs."+n.type),n.hoverState=null};e.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(150):g()}},t.prototype.applyPlacement=function(a,t){var n=this.tip(),o=n[0].offsetWidth,i=n[0].offsetHeight,r=parseInt(n.css("margin-top"),10),s=parseInt(n.css("margin-left"),10);isNaN(r)&&(r=0),isNaN(s)&&(s=0),a.top=a.top+r,a.left=a.left+s,e.offset.setOffset(n[0],e.extend({using:function(e){n.css({top:Math.round(e.top),left:Math.round(e.left)})}},a),0),n.addClass("in");var d=n[0].offsetWidth,l=n[0].offsetHeight;"top"==t&&l!=i&&(a.top=a.top+i-l);var c=this.getViewportAdjustedDelta(t,a,d,l);c.left?a.left+=c.left:a.top+=c.top;var m=c.left?2*c.left-o+d:2*c.top-i+l,u=c.left?"left":"top",f=c.left?"offsetWidth":"offsetHeight";n.offset(a),this.replaceArrow(m,n[0][f],u)},t.prototype.replaceArrow=function(e,a,t){this.arrow().css(t,e?50*(1-e/a)+"%":"")},t.prototype.setContent=function(){var e=this.tip(),a=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](a),e.removeClass("fade in top bottom left right")},t.prototype.hide=function(){function a(){"in"!=t.hoverState&&n.detach(),t.$element.trigger("hidden.bs."+t.type)}var t=this,n=this.tip(),o=e.Event("hide.bs."+this.type);return this.$element.removeAttr("aria-describedby"),this.$element.trigger(o),o.isDefaultPrevented()?void 0:(n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?n.one("bsTransitionEnd",a).emulateTransitionEnd(150):a(),this.hoverState=null,this)},t.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},t.prototype.hasContent=function(){return this.getTitle()},t.prototype.getPosition=function(a){a=a||this.$element;var t=a[0],n="BODY"==t.tagName;return e.extend({},"function"==typeof t.getBoundingClientRect?t.getBoundingClientRect():null,{scroll:n?document.documentElement.scrollTop||document.body.scrollTop:a.scrollTop(),width:n?e(window).width():a.outerWidth(),height:n?e(window).height():a.outerHeight()},n?{top:0,left:0}:a.offset())},t.prototype.getCalculatedOffset=function(e,a,t,n){return"bottom"==e?{top:a.top+a.height,left:a.left+a.width/2-t/2}:"top"==e?{top:a.top-n,left:a.left+a.width/2-t/2}:"left"==e?{top:a.top+a.height/2-n/2,left:a.left-t}:{top:a.top+a.height/2-n/2,left:a.left+a.width}},t.prototype.getViewportAdjustedDelta=function(e,a,t,n){var o={top:0,left:0};if(!this.$viewport)return o;var i=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);if(/right|left/.test(e)){var s=a.top-i-r.scroll,d=a.top+i-r.scroll+n;s<r.top?o.top=r.top-s:d>r.top+r.height&&(o.top=r.top+r.height-d)}else{var l=a.left-i,c=a.left+i+t;l<r.left?o.left=r.left-l:c>r.width&&(o.left=r.left+r.width-c)}return o},t.prototype.getTitle=function(){var e,a=this.$element,t=this.options;return e=a.attr("data-original-title")||("function"==typeof t.title?t.title.call(a[0]):t.title)},t.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},t.prototype.tip=function(){return this.$tip=this.$tip||e(this.options.template)},t.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},t.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},t.prototype.enable=function(){this.enabled=!0},t.prototype.disable=function(){this.enabled=!1},t.prototype.toggleEnabled=function(){this.enabled=!this.enabled},t.prototype.toggle=function(a){var t=this;a&&(t=e(a.currentTarget).data("bs."+this.type),t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t))),t.tip().hasClass("in")?t.leave(t):t.enter(t)},t.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var n=e.fn.tooltip;e.fn.tooltip=a,e.fn.tooltip.Constructor=t,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=n,this}}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.popover"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||n.data("bs.popover",o=new t(this,i)),"string"==typeof a&&o[a]())})}var t=function(e,a){this.init("popover",e,a)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");t.VERSION="3.2.0",t.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),t.prototype.constructor=t,t.prototype.getDefaults=function(){return t.DEFAULTS},t.prototype.setContent=function(){var e=this.tip(),a=this.getTitle(),t=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](a),e.find(".popover-content").empty()[this.options.html?"string"==typeof t?"html":"append":"text"](t),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},t.prototype.hasContent=function(){return this.getTitle()||this.getContent()},t.prototype.getContent=function(){var e=this.$element,a=this.options;return e.attr("data-content")||("function"==typeof a.content?a.content.call(e[0]):a.content)},t.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},t.prototype.tip=function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip};var n=e.fn.popover;e.fn.popover=a,e.fn.popover.Constructor=t,e.fn.popover.noConflict=function(){return e.fn.popover=n,this}}(jQuery),angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.transition","ui.bootstrap.collapse","ui.bootstrap.accordion","ui.bootstrap.alert","ui.bootstrap.bindHtml","ui.bootstrap.buttons","ui.bootstrap.carousel","ui.bootstrap.dateparser","ui.bootstrap.position","ui.bootstrap.datepicker","ui.bootstrap.dropdown","ui.bootstrap.modal","ui.bootstrap.pagination","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.progressbar","ui.bootstrap.rating","ui.bootstrap.tabs","ui.bootstrap.timepicker","ui.bootstrap.typeahead"]),angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html","template/alert/alert.html","template/carousel/carousel.html","template/carousel/slide.html","template/datepicker/datepicker.html","template/datepicker/day.html","template/datepicker/month.html","template/datepicker/popup.html","template/datepicker/year.html","template/modal/backdrop.html","template/modal/window.html","template/pagination/pager.html","template/pagination/pagination.html","template/tooltip/tooltip-html-unsafe-popup.html","template/tooltip/tooltip-popup.html","template/popover/popover.html","template/progressbar/bar.html","template/progressbar/progress.html","template/progressbar/progressbar.html","template/rating/rating.html","template/tabs/tab.html","template/tabs/tabset.html","template/timepicker/timepicker.html","template/typeahead/typeahead-match.html","template/typeahead/typeahead-popup.html"]),angular.module("ui.bootstrap.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function(e,a,t){function n(e){for(var a in e)if(void 0!==i.style[a])return e[a]}var o=function(n,i,r){r=r||{};var s=e.defer(),d=o[r.animation?"animationEndEventName":"transitionEndEventName"],l=function(){t.$apply(function(){n.unbind(d,l),s.resolve(n)})};return d&&n.bind(d,l),a(function(){angular.isString(i)?n.addClass(i):angular.isFunction(i)?i(n):angular.isObject(i)&&n.css(i),d||s.resolve(n)}),s.promise.cancel=function(){d&&n.unbind(d,l),s.reject("Transition cancelled")},s.promise},i=document.createElement("trans"),r={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},s={WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"};return o.transitionEndEventName=n(r),o.animationEndEventName=n(s),o}]),angular.module("ui.bootstrap.collapse",["ui.bootstrap.transition"]).directive("collapse",["$transition",function(e){return{link:function(a,t,n){function o(a){function n(){l===o&&(l=void 0)}var o=e(t,a);return l&&l.cancel(),l=o,o.then(n,n),o}function i(){c?(c=!1,r()):(t.removeClass("collapse").addClass("collapsing"),o({height:t[0].scrollHeight+"px"}).then(r))}function r(){t.removeClass("collapsing"),t.addClass("collapse in"),t.css({height:"auto"})}function s(){if(c)c=!1,d(),t.css({height:0});else{t.css({height:t[0].scrollHeight+"px"});{t[0].offsetWidth}t.removeClass("collapse in").addClass("collapsing"),o({height:0}).then(d)}}function d(){t.removeClass("collapsing"),t.addClass("collapse")}var l,c=!0;a.$watch(n.collapse,function(e){e?s():i()})}}}]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(e,a,t){this.groups=[],this.closeOthers=function(n){var o=angular.isDefined(a.closeOthers)?e.$eval(a.closeOthers):t.closeOthers;o&&angular.forEach(this.groups,function(e){e!==n&&(e.isOpen=!1)})},this.addGroup=function(e){var a=this;this.groups.push(e),e.$on("$destroy",function(){a.removeGroup(e)})},this.removeGroup=function(e){var a=this.groups.indexOf(e);-1!==a&&this.groups.splice(a,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:!0,replace:!1,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(e){this.heading=e}},link:function(e,a,t,n){n.addGroup(e),e.$watch("isOpen",function(a){a&&n.closeOthers(e)}),e.toggleOpen=function(){e.isDisabled||(e.isOpen=!e.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",link:function(e,a,t,n,o){n.setHeading(o(e,function(){}))}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(e,a,t,n){e.$watch(function(){return n[t.accordionTransclude]},function(e){e&&(a.html(""),a.append(e))})}}}),angular.module("ui.bootstrap.alert",[]).controller("AlertController",["$scope","$attrs",function(e,a){e.closeable="close"in a}]).directive("alert",function(){return{restrict:"EA",controller:"AlertController",templateUrl:"template/alert/alert.html",transclude:!0,replace:!0,scope:{type:"@",close:"&"}}}),angular.module("ui.bootstrap.bindHtml",[]).directive("bindHtmlUnsafe",function(){return function(e,a,t){a.addClass("ng-binding").data("$binding",t.bindHtmlUnsafe),e.$watch(t.bindHtmlUnsafe,function(e){a.html(e||"")})}}),angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(e){this.activeClass=e.activeClass||"active",this.toggleEvent=e.toggleEvent||"click"}]).directive("btnRadio",function(){return{require:["btnRadio","ngModel"],controller:"ButtonsController",link:function(e,a,t,n){var o=n[0],i=n[1];i.$render=function(){a.toggleClass(o.activeClass,angular.equals(i.$modelValue,e.$eval(t.btnRadio)))},a.bind(o.toggleEvent,function(){var n=a.hasClass(o.activeClass);(!n||angular.isDefined(t.uncheckable))&&e.$apply(function(){i.$setViewValue(n?null:e.$eval(t.btnRadio)),i.$render()})})}}}).directive("btnCheckbox",function(){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",link:function(e,a,t,n){function o(){return r(t.btnCheckboxTrue,!0)}function i(){return r(t.btnCheckboxFalse,!1)}function r(a,t){var n=e.$eval(a);return angular.isDefined(n)?n:t}var s=n[0],d=n[1];d.$render=function(){a.toggleClass(s.activeClass,angular.equals(d.$modelValue,o()))},a.bind(s.toggleEvent,function(){e.$apply(function(){d.$setViewValue(a.hasClass(s.activeClass)?i():o()),d.$render()})})}}}),angular.module("ui.bootstrap.carousel",["ui.bootstrap.transition"]).controller("CarouselController",["$scope","$timeout","$transition",function(e,a,t){function n(){o();var t=+e.interval;!isNaN(t)&&t>=0&&(r=a(i,t))}function o(){r&&(a.cancel(r),r=null)}function i(){s?(e.next(),n()):e.pause()}var r,s,d=this,l=d.slides=e.slides=[],c=-1;d.currentSlide=null;var m=!1;d.select=e.select=function(o,i){function r(){if(!m){if(d.currentSlide&&angular.isString(i)&&!e.noTransition&&o.$element){o.$element.addClass(i);{o.$element[0].offsetWidth}angular.forEach(l,function(e){angular.extend(e,{direction:"",entering:!1,leaving:!1,active:!1})}),angular.extend(o,{direction:i,active:!0,entering:!0}),angular.extend(d.currentSlide||{},{direction:i,leaving:!0}),e.$currentTransition=t(o.$element,{}),function(a,t){e.$currentTransition.then(function(){s(a,t)},function(){s(a,t)})}(o,d.currentSlide)}else s(o,d.currentSlide);d.currentSlide=o,c=u,n()}}function s(a,t){angular.extend(a,{direction:"",active:!0,leaving:!1,entering:!1}),angular.extend(t||{},{direction:"",active:!1,leaving:!1,entering:!1}),e.$currentTransition=null}var u=l.indexOf(o);void 0===i&&(i=u>c?"next":"prev"),o&&o!==d.currentSlide&&(e.$currentTransition?(e.$currentTransition.cancel(),a(r)):r())},e.$on("$destroy",function(){m=!0}),d.indexOfSlide=function(e){return l.indexOf(e)},e.next=function(){var a=(c+1)%l.length;return e.$currentTransition?void 0:d.select(l[a],"next")},e.prev=function(){var a=0>c-1?l.length-1:c-1;return e.$currentTransition?void 0:d.select(l[a],"prev")},e.isActive=function(e){return d.currentSlide===e},e.$watch("interval",n),e.$on("$destroy",o),e.play=function(){s||(s=!0,n())},e.pause=function(){e.noPause||(s=!1,o())},d.addSlide=function(a,t){a.$element=t,l.push(a),1===l.length||a.active?(d.select(l[l.length-1]),1==l.length&&e.play()):a.active=!1},d.removeSlide=function(e){var a=l.indexOf(e);l.splice(a,1),l.length>0&&e.active?a>=l.length?d.select(l[a-1]):d.select(l[a]):c>a&&c--}}]).directive("carousel",[function(){return{restrict:"EA",transclude:!0,replace:!0,controller:"CarouselController",require:"carousel",templateUrl:"template/carousel/carousel.html",scope:{interval:"=",noTransition:"=",noPause:"="}}}]).directive("slide",function(){return{require:"^carousel",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/carousel/slide.html",scope:{active:"=?"},link:function(e,a,t,n){n.addSlide(e,a),e.$on("$destroy",function(){n.removeSlide(e)}),e.$watch("active",function(a){a&&n.select(e)})}}}),angular.module("ui.bootstrap.dateparser",[]).service("dateParser",["$locale","orderByFilter",function(e,a){function t(e){var t=[],n=e.split("");return angular.forEach(o,function(a,o){var i=e.indexOf(o);if(i>-1){e=e.split(""),n[i]="("+a.regex+")",e[i]="$";for(var r=i+1,s=i+o.length;s>r;r++)n[r]="",e[r]="$";e=e.join(""),t.push({index:i,apply:a.apply})}}),{regex:new RegExp("^"+n.join("")+"$"),map:a(t,"index")}}function n(e,a,t){return 1===a&&t>28?29===t&&(e%4===0&&e%100!==0||e%400===0):3===a||5===a||8===a||10===a?31>t:!0}this.parsers={};var o={yyyy:{regex:"\\d{4}",apply:function(e){this.year=+e}},yy:{regex:"\\d{2}",apply:function(e){this.year=+e+2e3}},y:{regex:"\\d{1,4}",apply:function(e){this.year=+e}},MMMM:{regex:e.DATETIME_FORMATS.MONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.MONTH.indexOf(a)}},MMM:{regex:e.DATETIME_FORMATS.SHORTMONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.SHORTMONTH.indexOf(a)}},MM:{regex:"0[1-9]|1[0-2]",apply:function(e){this.month=e-1}},M:{regex:"[1-9]|1[0-2]",apply:function(e){this.month=e-1}},dd:{regex:"[0-2][0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},d:{regex:"[1-2]?[0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},EEEE:{regex:e.DATETIME_FORMATS.DAY.join("|")},EEE:{regex:e.DATETIME_FORMATS.SHORTDAY.join("|")}};this.parse=function(a,o){if(!angular.isString(a)||!o)return a;o=e.DATETIME_FORMATS[o]||o,this.parsers[o]||(this.parsers[o]=t(o));var i=this.parsers[o],r=i.regex,s=i.map,d=a.match(r);if(d&&d.length){for(var l,c={year:1900,month:0,date:1,hours:0},m=1,u=d.length;u>m;m++){var f=s[m-1];f.apply&&f.apply.call(c,d[m])}return n(c.year,c.month,c.date)&&(l=new Date(c.year,c.month,c.date,c.hours)),l}}}]),angular.module("ui.bootstrap.position",[]).factory("$position",["$document","$window",function(e,a){function t(e,t){return e.currentStyle?e.currentStyle[t]:a.getComputedStyle?a.getComputedStyle(e)[t]:e.style[t]}function n(e){return"static"===(t(e,"position")||"static")}var o=function(a){for(var t=e[0],o=a.offsetParent||t;o&&o!==t&&n(o);)o=o.offsetParent;return o||t};return{position:function(a){var t=this.offset(a),n={top:0,left:0},i=o(a[0]);i!=e[0]&&(n=this.offset(angular.element(i)),n.top+=i.clientTop-i.scrollTop,n.left+=i.clientLeft-i.scrollLeft);var r=a[0].getBoundingClientRect();return{width:r.width||a.prop("offsetWidth"),height:r.height||a.prop("offsetHeight"),top:t.top-n.top,left:t.left-n.left}},offset:function(t){var n=t[0].getBoundingClientRect();return{width:n.width||t.prop("offsetWidth"),height:n.height||t.prop("offsetHeight"),top:n.top+(a.pageYOffset||e[0].documentElement.scrollTop),left:n.left+(a.pageXOffset||e[0].documentElement.scrollLeft)}},positionElements:function(e,a,t,n){var o,i,r,s,d=t.split("-"),l=d[0],c=d[1]||"center";o=n?this.offset(e):this.position(e),i=a.prop("offsetWidth"),r=a.prop("offsetHeight");var m={center:function(){return o.left+o.width/2-i/2},left:function(){return o.left},right:function(){return o.left+o.width}},u={center:function(){return o.top+o.height/2-r/2},top:function(){return o.top},bottom:function(){return o.top+o.height}};switch(l){case"right":s={top:u[c](),left:m[l]()};break;case"left":s={top:u[c](),left:o.left-i};break;case"bottom":s={top:u[l](),left:m[c]()};break;default:s={top:o.top-r,left:m[c]()}}return s}}}]),angular.module("ui.bootstrap.datepicker",["ui.bootstrap.dateparser","ui.bootstrap.position"]).constant("datepickerConfig",{formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",datepickerMode:"day",minMode:"day",maxMode:"year",showWeeks:!0,startingDay:0,yearRange:20,minDate:null,maxDate:null}).controller("DatepickerController",["$scope","$attrs","$parse","$interpolate","$timeout","$log","dateFilter","datepickerConfig",function(e,a,t,n,o,i,r,s){var d=this,l={$setViewValue:angular.noop};this.modes=["day","month","year"],angular.forEach(["formatDay","formatMonth","formatYear","formatDayHeader","formatDayTitle","formatMonthTitle","minMode","maxMode","showWeeks","startingDay","yearRange"],function(t,o){d[t]=angular.isDefined(a[t])?8>o?n(a[t])(e.$parent):e.$parent.$eval(a[t]):s[t]}),angular.forEach(["minDate","maxDate"],function(n){a[n]?e.$parent.$watch(t(a[n]),function(e){d[n]=e?new Date(e):null,d.refreshView()}):d[n]=s[n]?new Date(s[n]):null}),e.datepickerMode=e.datepickerMode||s.datepickerMode,e.uniqueId="datepicker-"+e.$id+"-"+Math.floor(1e4*Math.random()),this.activeDate=angular.isDefined(a.initDate)?e.$parent.$eval(a.initDate):new Date,e.isActive=function(a){return 0===d.compare(a.date,d.activeDate)?(e.activeDateId=a.uid,!0):!1},this.init=function(e){l=e,l.$render=function(){d.render()}},this.render=function(){if(l.$modelValue){var e=new Date(l.$modelValue),a=!isNaN(e);a?this.activeDate=e:i.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'),l.$setValidity("date",a)}this.refreshView()},this.refreshView=function(){if(this.element){this._refreshView();var e=l.$modelValue?new Date(l.$modelValue):null;l.$setValidity("date-disabled",!e||this.element&&!this.isDisabled(e))}},this.createDateObject=function(e,a){var t=l.$modelValue?new Date(l.$modelValue):null;return{date:e,label:r(e,a),selected:t&&0===this.compare(e,t),disabled:this.isDisabled(e),current:0===this.compare(e,new Date)}},this.isDisabled=function(t){return this.minDate&&this.compare(t,this.minDate)<0||this.maxDate&&this.compare(t,this.maxDate)>0||a.dateDisabled&&e.dateDisabled({date:t,mode:e.datepickerMode})},this.split=function(e,a){for(var t=[];e.length>0;)t.push(e.splice(0,a));return t},e.select=function(a){if(e.datepickerMode===d.minMode){var t=l.$modelValue?new Date(l.$modelValue):new Date(0,0,0,0,0,0,0);t.setFullYear(a.getFullYear(),a.getMonth(),a.getDate()),l.$setViewValue(t),l.$render()}else d.activeDate=a,e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)-1]},e.move=function(e){var a=d.activeDate.getFullYear()+e*(d.step.years||0),t=d.activeDate.getMonth()+e*(d.step.months||0);d.activeDate.setFullYear(a,t,1),d.refreshView()},e.toggleMode=function(a){a=a||1,e.datepickerMode===d.maxMode&&1===a||e.datepickerMode===d.minMode&&-1===a||(e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)+a])},e.keys={13:"enter",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down"};var c=function(){o(function(){d.element[0].focus()},0,!1)};e.$on("datepicker.focus",c),e.keydown=function(a){var t=e.keys[a.which];if(t&&!a.shiftKey&&!a.altKey)if(a.preventDefault(),a.stopPropagation(),"enter"===t||"space"===t){if(d.isDisabled(d.activeDate))return;e.select(d.activeDate),c()}else!a.ctrlKey||"up"!==t&&"down"!==t?(d.handleKeyDown(t,a),d.refreshView()):(e.toggleMode("up"===t?1:-1),c())}}]).directive("datepicker",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/datepicker.html",scope:{datepickerMode:"=?",dateDisabled:"&"},require:["datepicker","?^ngModel"],controller:"DatepickerController",link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i)}}}).directive("daypicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/day.html",require:"^datepicker",link:function(a,t,n,o){function i(e,a){return 1!==a||e%4!==0||e%100===0&&e%400!==0?d[a]:29}function r(e,a){var t=new Array(a),n=new Date(e),o=0;for(n.setHours(12);a>o;)t[o++]=new Date(n),n.setDate(n.getDate()+1);return t}function s(e){var a=new Date(e);a.setDate(a.getDate()+4-(a.getDay()||7));var t=a.getTime();return a.setMonth(0),a.setDate(1),Math.floor(Math.round((t-a)/864e5)/7)+1}a.showWeeks=o.showWeeks,o.step={months:1},o.element=t;var d=[31,28,31,30,31,30,31,31,30,31,30,31];o._refreshView=function(){var t=o.activeDate.getFullYear(),n=o.activeDate.getMonth(),i=new Date(t,n,1),d=o.startingDay-i.getDay(),l=d>0?7-d:-d,c=new Date(i);l>0&&c.setDate(-l+1);for(var m=r(c,42),u=0;42>u;u++)m[u]=angular.extend(o.createDateObject(m[u],o.formatDay),{secondary:m[u].getMonth()!==n,uid:a.uniqueId+"-"+u});a.labels=new Array(7);for(var f=0;7>f;f++)a.labels[f]={abbr:e(m[f].date,o.formatDayHeader),full:e(m[f].date,"EEEE")};if(a.title=e(o.activeDate,o.formatDayTitle),a.rows=o.split(m,7),a.showWeeks){a.weekNumbers=[];for(var h=s(a.rows[0][0].date),p=a.rows.length;a.weekNumbers.push(h++)<p;);}},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate())-new Date(a.getFullYear(),a.getMonth(),a.getDate())},o.handleKeyDown=function(e){var a=o.activeDate.getDate();
if("left"===e)a-=1;else if("up"===e)a-=7;else if("right"===e)a+=1;else if("down"===e)a+=7;else if("pageup"===e||"pagedown"===e){var t=o.activeDate.getMonth()+("pageup"===e?-1:1);o.activeDate.setMonth(t,1),a=Math.min(i(o.activeDate.getFullYear(),o.activeDate.getMonth()),a)}else"home"===e?a=1:"end"===e&&(a=i(o.activeDate.getFullYear(),o.activeDate.getMonth()));o.activeDate.setDate(a)},o.refreshView()}}}]).directive("monthpicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/month.html",require:"^datepicker",link:function(a,t,n,o){o.step={years:1},o.element=t,o._refreshView=function(){for(var t=new Array(12),n=o.activeDate.getFullYear(),i=0;12>i;i++)t[i]=angular.extend(o.createDateObject(new Date(n,i,1),o.formatMonth),{uid:a.uniqueId+"-"+i});a.title=e(o.activeDate,o.formatMonthTitle),a.rows=o.split(t,3)},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth())-new Date(a.getFullYear(),a.getMonth())},o.handleKeyDown=function(e){var a=o.activeDate.getMonth();if("left"===e)a-=1;else if("up"===e)a-=3;else if("right"===e)a+=1;else if("down"===e)a+=3;else if("pageup"===e||"pagedown"===e){var t=o.activeDate.getFullYear()+("pageup"===e?-1:1);o.activeDate.setFullYear(t)}else"home"===e?a=0:"end"===e&&(a=11);o.activeDate.setMonth(a)},o.refreshView()}}}]).directive("yearpicker",["dateFilter",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/year.html",require:"^datepicker",link:function(e,a,t,n){function o(e){return parseInt((e-1)/i,10)*i+1}var i=n.yearRange;n.step={years:i},n.element=a,n._refreshView=function(){for(var a=new Array(i),t=0,r=o(n.activeDate.getFullYear());i>t;t++)a[t]=angular.extend(n.createDateObject(new Date(r+t,0,1),n.formatYear),{uid:e.uniqueId+"-"+t});e.title=[a[0].label,a[i-1].label].join(" - "),e.rows=n.split(a,5)},n.compare=function(e,a){return e.getFullYear()-a.getFullYear()},n.handleKeyDown=function(e){var a=n.activeDate.getFullYear();"left"===e?a-=1:"up"===e?a-=5:"right"===e?a+=1:"down"===e?a+=5:"pageup"===e||"pagedown"===e?a+=("pageup"===e?-1:1)*n.step.years:"home"===e?a=o(n.activeDate.getFullYear()):"end"===e&&(a=o(n.activeDate.getFullYear())+i-1),n.activeDate.setFullYear(a)},n.refreshView()}}}]).constant("datepickerPopupConfig",{datepickerPopup:"yyyy-MM-dd",currentText:"Today",clearText:"Clear",closeText:"Done",closeOnDateSelection:!0,appendToBody:!1,showButtonBar:!0}).directive("datepickerPopup",["$compile","$parse","$document","$position","dateFilter","dateParser","datepickerPopupConfig",function(e,a,t,n,o,i,r){return{restrict:"EA",require:"ngModel",scope:{isOpen:"=?",currentText:"@",clearText:"@",closeText:"@",dateDisabled:"&"},link:function(s,d,l,c){function m(e){return e.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}function u(e){if(e){if(angular.isDate(e)&&!isNaN(e))return c.$setValidity("date",!0),e;if(angular.isString(e)){var a=i.parse(e,f)||new Date(e);return isNaN(a)?(c.$setValidity("date",!1),void 0):(c.$setValidity("date",!0),a)}return c.$setValidity("date",!1),void 0}return c.$setValidity("date",!0),null}var f,h=angular.isDefined(l.closeOnDateSelection)?s.$parent.$eval(l.closeOnDateSelection):r.closeOnDateSelection,p=angular.isDefined(l.datepickerAppendToBody)?s.$parent.$eval(l.datepickerAppendToBody):r.appendToBody;s.showButtonBar=angular.isDefined(l.showButtonBar)?s.$parent.$eval(l.showButtonBar):r.showButtonBar,s.getText=function(e){return s[e+"Text"]||r[e+"Text"]},l.$observe("datepickerPopup",function(e){f=e||r.datepickerPopup,c.$render()});var g=angular.element("<div datepicker-popup-wrap><div datepicker></div></div>");g.attr({"ng-model":"date","ng-change":"dateSelection()"});var b=angular.element(g.children()[0]);l.datepickerOptions&&angular.forEach(s.$parent.$eval(l.datepickerOptions),function(e,a){b.attr(m(a),e)}),s.watchData={},angular.forEach(["minDate","maxDate","datepickerMode"],function(e){if(l[e]){var t=a(l[e]);if(s.$parent.$watch(t,function(a){s.watchData[e]=a}),b.attr(m(e),"watchData."+e),"datepickerMode"===e){var n=t.assign;s.$watch("watchData."+e,function(e,a){e!==a&&n(s.$parent,e)})}}}),l.dateDisabled&&b.attr("date-disabled","dateDisabled({ date: date, mode: mode })"),c.$parsers.unshift(u),s.dateSelection=function(e){angular.isDefined(e)&&(s.date=e),c.$setViewValue(s.date),c.$render(),h&&(s.isOpen=!1,d[0].focus())},d.bind("input change keyup",function(){s.$apply(function(){s.date=c.$modelValue})}),c.$render=function(){var e=c.$viewValue?o(c.$viewValue,f):"";d.val(e),s.date=u(c.$modelValue)};var v=function(e){s.isOpen&&e.target!==d[0]&&s.$apply(function(){s.isOpen=!1})},y=function(e){s.keydown(e)};d.bind("keydown",y),s.keydown=function(e){27===e.which?(e.preventDefault(),e.stopPropagation(),s.close()):40!==e.which||s.isOpen||(s.isOpen=!0)},s.$watch("isOpen",function(e){e?(s.$broadcast("datepicker.focus"),s.position=p?n.offset(d):n.position(d),s.position.top=s.position.top+d.prop("offsetHeight"),t.bind("click",v)):t.unbind("click",v)}),s.select=function(e){if("today"===e){var a=new Date;angular.isDate(c.$modelValue)?(e=new Date(c.$modelValue),e.setFullYear(a.getFullYear(),a.getMonth(),a.getDate())):e=new Date(a.setHours(0,0,0,0))}s.dateSelection(e)},s.close=function(){s.isOpen=!1,d[0].focus()};var w=e(g)(s);g.remove(),p?t.find("body").append(w):d.after(w),s.$on("$destroy",function(){w.remove(),d.unbind("keydown",y),t.unbind("click",v)})}}}]).directive("datepickerPopupWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"template/datepicker/popup.html",link:function(e,a){a.bind("click",function(e){e.preventDefault(),e.stopPropagation()})}}}),angular.module("ui.bootstrap.dropdown",[]).constant("dropdownConfig",{openClass:"open"}).service("dropdownService",["$document",function(e){var a=null;this.open=function(o){a||(e.bind("click",t),e.bind("keydown",n)),a&&a!==o&&(a.isOpen=!1),a=o},this.close=function(o){a===o&&(a=null,e.unbind("click",t),e.unbind("keydown",n))};var t=function(e){var t=a.getToggleElement();e&&t&&t[0].contains(e.target)||a.$apply(function(){a.isOpen=!1})},n=function(e){27===e.which&&(a.focusToggleElement(),t())}}]).controller("DropdownController",["$scope","$attrs","$parse","dropdownConfig","dropdownService","$animate",function(e,a,t,n,o,i){var r,s=this,d=e.$new(),l=n.openClass,c=angular.noop,m=a.onToggle?t(a.onToggle):angular.noop;this.init=function(n){s.$element=n,a.isOpen&&(r=t(a.isOpen),c=r.assign,e.$watch(r,function(e){d.isOpen=!!e}))},this.toggle=function(e){return d.isOpen=arguments.length?!!e:!d.isOpen},this.isOpen=function(){return d.isOpen},d.getToggleElement=function(){return s.toggleElement},d.focusToggleElement=function(){s.toggleElement&&s.toggleElement[0].focus()},d.$watch("isOpen",function(a,t){i[a?"addClass":"removeClass"](s.$element,l),a?(d.focusToggleElement(),o.open(d)):o.close(d),c(e,a),angular.isDefined(a)&&a!==t&&m(e,{open:!!a})}),e.$on("$locationChangeSuccess",function(){d.isOpen=!1}),e.$on("$destroy",function(){d.$destroy()})}]).directive("dropdown",function(){return{restrict:"CA",controller:"DropdownController",link:function(e,a,t,n){n.init(a)}}}).directive("dropdownToggle",function(){return{restrict:"CA",require:"?^dropdown",link:function(e,a,t,n){if(n){n.toggleElement=a;var o=function(o){o.preventDefault(),a.hasClass("disabled")||t.disabled||e.$apply(function(){n.toggle()})};a.bind("click",o),a.attr({"aria-haspopup":!0,"aria-expanded":!1}),e.$watch(n.isOpen,function(e){a.attr("aria-expanded",!!e)}),e.$on("$destroy",function(){a.unbind("click",o)})}}}}),angular.module("ui.bootstrap.modal",["ui.bootstrap.transition"]).factory("$$stackedMap",function(){return{createNew:function(){var e=[];return{add:function(a,t){e.push({key:a,value:t})},get:function(a){for(var t=0;t<e.length;t++)if(a==e[t].key)return e[t]},keys:function(){for(var a=[],t=0;t<e.length;t++)a.push(e[t].key);return a},top:function(){return e[e.length-1]},remove:function(a){for(var t=-1,n=0;n<e.length;n++)if(a==e[n].key){t=n;break}return e.splice(t,1)[0]},removeTop:function(){return e.splice(e.length-1,1)[0]},length:function(){return e.length}}}}}).directive("modalBackdrop",["$timeout",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/modal/backdrop.html",link:function(a,t,n){a.backdropClass=n.backdropClass||"",a.animate=!1,e(function(){a.animate=!0})}}}]).directive("modalWindow",["$modalStack","$timeout",function(e,a){return{restrict:"EA",scope:{index:"@",animate:"="},replace:!0,transclude:!0,templateUrl:function(e,a){return a.templateUrl||"template/modal/window.html"},link:function(t,n,o){n.addClass(o.windowClass||""),t.size=o.size,a(function(){t.animate=!0,n[0].querySelectorAll("[autofocus]").length||n[0].focus()}),t.close=function(a){var t=e.getTop();t&&t.value.backdrop&&"static"!=t.value.backdrop&&a.target===a.currentTarget&&(a.preventDefault(),a.stopPropagation(),e.dismiss(t.key,"backdrop click"))}}}}]).directive("modalTransclude",function(){return{link:function(e,a,t,n,o){o(e.$parent,function(e){a.empty(),a.append(e)})}}}).factory("$modalStack",["$transition","$timeout","$document","$compile","$rootScope","$$stackedMap",function(e,a,t,n,o,i){function r(){for(var e=-1,a=f.keys(),t=0;t<a.length;t++)f.get(a[t]).value.backdrop&&(e=t);return e}function s(e){var a=t.find("body").eq(0),n=f.get(e).value;f.remove(e),l(n.modalDomEl,n.modalScope,300,function(){n.modalScope.$destroy(),a.toggleClass(u,f.length()>0),d()})}function d(){if(c&&-1==r()){var e=m;l(c,m,150,function(){e.$destroy(),e=null}),c=void 0,m=void 0}}function l(t,n,o,i){function r(){r.done||(r.done=!0,t.remove(),i&&i())}n.animate=!1;var s=e.transitionEndEventName;if(s){var d=a(r,o);t.bind(s,function(){a.cancel(d),r(),n.$apply()})}else a(r)}var c,m,u="modal-open",f=i.createNew(),h={};return o.$watch(r,function(e){m&&(m.index=e)}),t.bind("keydown",function(e){var a;27===e.which&&(a=f.top(),a&&a.value.keyboard&&(e.preventDefault(),o.$apply(function(){h.dismiss(a.key,"escape key press")})))}),h.open=function(e,a){f.add(e,{deferred:a.deferred,modalScope:a.scope,backdrop:a.backdrop,keyboard:a.keyboard});var i=t.find("body").eq(0),s=r();if(s>=0&&!c){m=o.$new(!0),m.index=s;var d=angular.element("<div modal-backdrop></div>");d.attr("backdrop-class",a.backdropClass),c=n(d)(m),i.append(c)}var l=angular.element("<div modal-window></div>");l.attr({"template-url":a.windowTemplateUrl,"window-class":a.windowClass,size:a.size,index:f.length()-1,animate:"animate"}).html(a.content);var h=n(l)(a.scope);f.top().value.modalDomEl=h,i.append(h),i.addClass(u)},h.close=function(e,a){var t=f.get(e);t&&(t.value.deferred.resolve(a),s(e))},h.dismiss=function(e,a){var t=f.get(e);t&&(t.value.deferred.reject(a),s(e))},h.dismissAll=function(e){for(var a=this.getTop();a;)this.dismiss(a.key,e),a=this.getTop()},h.getTop=function(){return f.top()},h}]).provider("$modal",function(){var e={options:{backdrop:!0,keyboard:!0},$get:["$injector","$rootScope","$q","$http","$templateCache","$controller","$modalStack",function(a,t,n,o,i,r,s){function d(e){return e.template?n.when(e.template):o.get(angular.isFunction(e.templateUrl)?e.templateUrl():e.templateUrl,{cache:i}).then(function(e){return e.data})}function l(e){var t=[];return angular.forEach(e,function(e){(angular.isFunction(e)||angular.isArray(e))&&t.push(n.when(a.invoke(e)))}),t}var c={};return c.open=function(a){var o=n.defer(),i=n.defer(),c={result:o.promise,opened:i.promise,close:function(e){s.close(c,e)},dismiss:function(e){s.dismiss(c,e)}};if(a=angular.extend({},e.options,a),a.resolve=a.resolve||{},!a.template&&!a.templateUrl)throw new Error("One of template or templateUrl options is required.");var m=n.all([d(a)].concat(l(a.resolve)));return m.then(function(e){var n=(a.scope||t).$new();n.$close=c.close,n.$dismiss=c.dismiss;var i,d={},l=1;a.controller&&(d.$scope=n,d.$modalInstance=c,angular.forEach(a.resolve,function(a,t){d[t]=e[l++]}),i=r(a.controller,d),a.controllerAs&&(n[a.controllerAs]=i)),s.open(c,{scope:n,deferred:o,content:e[0],backdrop:a.backdrop,keyboard:a.keyboard,backdropClass:a.backdropClass,windowClass:a.windowClass,windowTemplateUrl:a.windowTemplateUrl,size:a.size})},function(e){o.reject(e)}),m.then(function(){i.resolve(!0)},function(){i.reject(!1)}),c},c}]};return e}),angular.module("ui.bootstrap.pagination",[]).controller("PaginationController",["$scope","$attrs","$parse",function(e,a,t){var n=this,o={$setViewValue:angular.noop},i=a.numPages?t(a.numPages).assign:angular.noop;this.init=function(i,r){o=i,this.config=r,o.$render=function(){n.render()},a.itemsPerPage?e.$parent.$watch(t(a.itemsPerPage),function(a){n.itemsPerPage=parseInt(a,10),e.totalPages=n.calculateTotalPages()}):this.itemsPerPage=r.itemsPerPage},this.calculateTotalPages=function(){var a=this.itemsPerPage<1?1:Math.ceil(e.totalItems/this.itemsPerPage);return Math.max(a||0,1)},this.render=function(){e.page=parseInt(o.$viewValue,10)||1},e.selectPage=function(a){e.page!==a&&a>0&&a<=e.totalPages&&(o.$setViewValue(a),o.$render())},e.getText=function(a){return e[a+"Text"]||n.config[a+"Text"]},e.noPrevious=function(){return 1===e.page},e.noNext=function(){return e.page===e.totalPages},e.$watch("totalItems",function(){e.totalPages=n.calculateTotalPages()}),e.$watch("totalPages",function(a){i(e.$parent,a),e.page>a?e.selectPage(a):o.$render()})}]).constant("paginationConfig",{itemsPerPage:10,boundaryLinks:!1,directionLinks:!0,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last",rotate:!0}).directive("pagination",["$parse","paginationConfig",function(e,a){return{restrict:"EA",scope:{totalItems:"=",firstText:"@",previousText:"@",nextText:"@",lastText:"@"},require:["pagination","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pagination.html",replace:!0,link:function(t,n,o,i){function r(e,a,t){return{number:e,text:a,active:t}}function s(e,a){var t=[],n=1,o=a,i=angular.isDefined(c)&&a>c;i&&(m?(n=Math.max(e-Math.floor(c/2),1),o=n+c-1,o>a&&(o=a,n=o-c+1)):(n=(Math.ceil(e/c)-1)*c+1,o=Math.min(n+c-1,a)));for(var s=n;o>=s;s++){var d=r(s,s,s===e);t.push(d)}if(i&&!m){if(n>1){var l=r(n-1,"...",!1);t.unshift(l)}if(a>o){var u=r(o+1,"...",!1);t.push(u)}}return t}var d=i[0],l=i[1];if(l){var c=angular.isDefined(o.maxSize)?t.$parent.$eval(o.maxSize):a.maxSize,m=angular.isDefined(o.rotate)?t.$parent.$eval(o.rotate):a.rotate;t.boundaryLinks=angular.isDefined(o.boundaryLinks)?t.$parent.$eval(o.boundaryLinks):a.boundaryLinks,t.directionLinks=angular.isDefined(o.directionLinks)?t.$parent.$eval(o.directionLinks):a.directionLinks,d.init(l,a),o.maxSize&&t.$parent.$watch(e(o.maxSize),function(e){c=parseInt(e,10),d.render()});var u=d.render;d.render=function(){u(),t.page>0&&t.page<=t.totalPages&&(t.pages=s(t.page,t.totalPages))}}}}}]).constant("pagerConfig",{itemsPerPage:10,previousText:"« Previous",nextText:"Next »",align:!0}).directive("pager",["pagerConfig",function(e){return{restrict:"EA",scope:{totalItems:"=",previousText:"@",nextText:"@"},require:["pager","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pager.html",replace:!0,link:function(a,t,n,o){var i=o[0],r=o[1];r&&(a.align=angular.isDefined(n.align)?a.$parent.$eval(n.align):e.align,i.init(r,e))}}}]),angular.module("ui.bootstrap.tooltip",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).provider("$tooltip",function(){function e(e){var a=/[A-Z]/g,t="-";return e.replace(a,function(e,a){return(a?t:"")+e.toLowerCase()})}var a={placement:"top",animation:!0,popupDelay:0},t={mouseenter:"mouseleave",click:"click",focus:"blur"},n={};this.options=function(e){angular.extend(n,e)},this.setTriggers=function(e){angular.extend(t,e)},this.$get=["$window","$compile","$timeout","$parse","$document","$position","$interpolate",function(o,i,r,s,d,l,c){return function(o,m,u){function f(e){var a=e||h.trigger||u,n=t[a]||a;return{show:a,hide:n}}var h=angular.extend({},a,n),p=e(o),g=c.startSymbol(),b=c.endSymbol(),v="<div "+p+'-popup title="'+g+"tt_title"+b+'" content="'+g+"tt_content"+b+'" placement="'+g+"tt_placement"+b+'" animation="tt_animation" is-open="tt_isOpen"></div>';return{restrict:"EA",scope:!0,compile:function(){var e=i(v);return function(a,t,n){function i(){a.tt_isOpen?u():c()}function c(){(!C||a.$eval(n[m+"Enable"]))&&(a.tt_popupDelay?S||(S=r(p,a.tt_popupDelay,!1),S.then(function(e){e()})):p()())}function u(){a.$apply(function(){g()})}function p(){return S=null,w&&(r.cancel(w),w=null),a.tt_content?(b(),y.css({top:0,left:0,display:"block"}),A?d.find("body").append(y):t.after(y),T(),a.tt_isOpen=!0,a.$digest(),T):angular.noop}function g(){a.tt_isOpen=!1,r.cancel(S),S=null,a.tt_animation?w||(w=r(v,500)):v()}function b(){y&&v(),y=e(a,function(){}),a.$digest()}function v(){w=null,y&&(y.remove(),y=null)}var y,w,S,A=angular.isDefined(h.appendToBody)?h.appendToBody:!1,k=f(void 0),C=angular.isDefined(n[m+"Enable"]),T=function(){var e=l.positionElements(t,y,a.tt_placement,A);e.top+="px",e.left+="px",y.css(e)};a.tt_isOpen=!1,n.$observe(o,function(e){a.tt_content=e,!e&&a.tt_isOpen&&g()}),n.$observe(m+"Title",function(e){a.tt_title=e}),n.$observe(m+"Placement",function(e){a.tt_placement=angular.isDefined(e)?e:h.placement}),n.$observe(m+"PopupDelay",function(e){var t=parseInt(e,10);a.tt_popupDelay=isNaN(t)?h.popupDelay:t});var M=function(){t.unbind(k.show,c),t.unbind(k.hide,u)};n.$observe(m+"Trigger",function(e){M(),k=f(e),k.show===k.hide?t.bind(k.show,i):(t.bind(k.show,c),t.bind(k.hide,u))});var N=a.$eval(n[m+"Animation"]);a.tt_animation=angular.isDefined(N)?!!N:h.animation,n.$observe(m+"AppendToBody",function(e){A=angular.isDefined(e)?s(e)(a):A}),A&&a.$on("$locationChangeSuccess",function(){a.tt_isOpen&&g()}),a.$on("$destroy",function(){r.cancel(w),r.cancel(S),M(),v()})}}}}}]}).directive("tooltipPopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-popup.html"}}).directive("tooltip",["$tooltip",function(e){return e("tooltip","tooltip","mouseenter")}]).directive("tooltipHtmlUnsafePopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-html-unsafe-popup.html"}}).directive("tooltipHtmlUnsafe",["$tooltip",function(e){return e("tooltipHtmlUnsafe","tooltip","mouseenter")}]),angular.module("ui.bootstrap.popover",["ui.bootstrap.tooltip"]).directive("popoverPopup",function(){return{restrict:"EA",replace:!0,scope:{title:"@",content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/popover/popover.html"}}).directive("popover",["$tooltip",function(e){return e("popover","popover","click")}]),angular.module("ui.bootstrap.progressbar",[]).constant("progressConfig",{animate:!0,max:100}).controller("ProgressController",["$scope","$attrs","progressConfig",function(e,a,t){var n=this,o=angular.isDefined(a.animate)?e.$parent.$eval(a.animate):t.animate;this.bars=[],e.max=angular.isDefined(a.max)?e.$parent.$eval(a.max):t.max,this.addBar=function(a,t){o||t.css({transition:"none"}),this.bars.push(a),a.$watch("value",function(t){a.percent=+(100*t/e.max).toFixed(2)}),a.$on("$destroy",function(){t=null,n.removeBar(a)})},this.removeBar=function(e){this.bars.splice(this.bars.indexOf(e),1)}}]).directive("progress",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",require:"progress",scope:{},templateUrl:"template/progressbar/progress.html"}}).directive("bar",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^progress",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/bar.html",link:function(e,a,t,n){n.addBar(e,a)}}}).directive("progressbar",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/progressbar.html",link:function(e,a,t,n){n.addBar(e,angular.element(a.children()[0]))}}}),angular.module("ui.bootstrap.rating",[]).constant("ratingConfig",{max:5,stateOn:null,stateOff:null}).controller("RatingController",["$scope","$attrs","ratingConfig",function(e,a,t){var n={$setViewValue:angular.noop};this.init=function(o){n=o,n.$render=this.render,this.stateOn=angular.isDefined(a.stateOn)?e.$parent.$eval(a.stateOn):t.stateOn,this.stateOff=angular.isDefined(a.stateOff)?e.$parent.$eval(a.stateOff):t.stateOff;var i=angular.isDefined(a.ratingStates)?e.$parent.$eval(a.ratingStates):new Array(angular.isDefined(a.max)?e.$parent.$eval(a.max):t.max);e.range=this.buildTemplateObjects(i)},this.buildTemplateObjects=function(e){for(var a=0,t=e.length;t>a;a++)e[a]=angular.extend({index:a},{stateOn:this.stateOn,stateOff:this.stateOff},e[a]);return e},e.rate=function(a){!e.readonly&&a>=0&&a<=e.range.length&&(n.$setViewValue(a),n.$render())},e.enter=function(a){e.readonly||(e.value=a),e.onHover({value:a})},e.reset=function(){e.value=n.$viewValue,e.onLeave()},e.onKeydown=function(a){/(37|38|39|40)/.test(a.which)&&(a.preventDefault(),a.stopPropagation(),e.rate(e.value+(38===a.which||39===a.which?1:-1)))},this.render=function(){e.value=n.$viewValue}}]).directive("rating",function(){return{restrict:"EA",require:["rating","ngModel"],scope:{readonly:"=?",onHover:"&",onLeave:"&"},controller:"RatingController",templateUrl:"template/rating/rating.html",replace:!0,link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i)}}}),angular.module("ui.bootstrap.tabs",[]).controller("TabsetController",["$scope",function(e){var a=this,t=a.tabs=e.tabs=[];a.select=function(e){angular.forEach(t,function(a){a.active&&a!==e&&(a.active=!1,a.onDeselect())}),e.active=!0,e.onSelect()},a.addTab=function(e){t.push(e),1===t.length?e.active=!0:e.active&&a.select(e)},a.removeTab=function(e){var n=t.indexOf(e);if(e.active&&t.length>1){var o=n==t.length-1?n-1:n+1;a.select(t[o])}t.splice(n,1)}}]).directive("tabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"TabsetController",templateUrl:"template/tabs/tabset.html",link:function(e,a,t){e.vertical=angular.isDefined(t.vertical)?e.$parent.$eval(t.vertical):!1,e.justified=angular.isDefined(t.justified)?e.$parent.$eval(t.justified):!1}}}).directive("tab",["$parse",function(e){return{require:"^tabset",restrict:"EA",replace:!0,templateUrl:"template/tabs/tab.html",transclude:!0,scope:{active:"=?",heading:"@",onSelect:"&select",onDeselect:"&deselect"},controller:function(){},compile:function(a,t,n){return function(a,t,o,i){a.$watch("active",function(e){e&&i.select(a)}),a.disabled=!1,o.disabled&&a.$parent.$watch(e(o.disabled),function(e){a.disabled=!!e}),a.select=function(){a.disabled||(a.active=!0)},i.addTab(a),a.$on("$destroy",function(){i.removeTab(a)}),a.$transcludeFn=n}}}}]).directive("tabHeadingTransclude",[function(){return{restrict:"A",require:"^tab",link:function(e,a){e.$watch("headingElement",function(e){e&&(a.html(""),a.append(e))})}}}]).directive("tabContentTransclude",function(){function e(e){return e.tagName&&(e.hasAttribute("tab-heading")||e.hasAttribute("data-tab-heading")||"tab-heading"===e.tagName.toLowerCase()||"data-tab-heading"===e.tagName.toLowerCase())}return{restrict:"A",require:"^tabset",link:function(a,t,n){var o=a.$eval(n.tabContentTransclude);o.$transcludeFn(o.$parent,function(a){angular.forEach(a,function(a){e(a)?o.headingElement=a:t.append(a)})})}}}),angular.module("ui.bootstrap.timepicker",[]).constant("timepickerConfig",{hourStep:1,minuteStep:1,showMeridian:!0,meridians:null,readonlyInput:!1,mousewheel:!0}).controller("TimepickerController",["$scope","$attrs","$parse","$log","$locale","timepickerConfig",function(e,a,t,n,o,i){function r(){var a=parseInt(e.hours,10),t=e.showMeridian?a>0&&13>a:a>=0&&24>a;return t?(e.showMeridian&&(12===a&&(a=0),e.meridian===p[1]&&(a+=12)),a):void 0}function s(){var a=parseInt(e.minutes,10);return a>=0&&60>a?a:void 0}function d(e){return angular.isDefined(e)&&e.toString().length<2?"0"+e:e}function l(e){c(),h.$setViewValue(new Date(f)),m(e)}function c(){h.$setValidity("time",!0),e.invalidHours=!1,e.invalidMinutes=!1}function m(a){var t=f.getHours(),n=f.getMinutes();e.showMeridian&&(t=0===t||12===t?12:t%12),e.hours="h"===a?t:d(t),e.minutes="m"===a?n:d(n),e.meridian=f.getHours()<12?p[0]:p[1]}function u(e){var a=new Date(f.getTime()+6e4*e);f.setHours(a.getHours(),a.getMinutes()),l()}var f=new Date,h={$setViewValue:angular.noop},p=angular.isDefined(a.meridians)?e.$parent.$eval(a.meridians):i.meridians||o.DATETIME_FORMATS.AMPMS;this.init=function(t,n){h=t,h.$render=this.render;var o=n.eq(0),r=n.eq(1),s=angular.isDefined(a.mousewheel)?e.$parent.$eval(a.mousewheel):i.mousewheel;s&&this.setupMousewheelEvents(o,r),e.readonlyInput=angular.isDefined(a.readonlyInput)?e.$parent.$eval(a.readonlyInput):i.readonlyInput,this.setupInputEvents(o,r)};var g=i.hourStep;a.hourStep&&e.$parent.$watch(t(a.hourStep),function(e){g=parseInt(e,10)});var b=i.minuteStep;a.minuteStep&&e.$parent.$watch(t(a.minuteStep),function(e){b=parseInt(e,10)}),e.showMeridian=i.showMeridian,a.showMeridian&&e.$parent.$watch(t(a.showMeridian),function(a){if(e.showMeridian=!!a,h.$error.time){var t=r(),n=s();angular.isDefined(t)&&angular.isDefined(n)&&(f.setHours(t),l())}else m()}),this.setupMousewheelEvents=function(a,t){var n=function(e){e.originalEvent&&(e=e.originalEvent);var a=e.wheelDelta?e.wheelDelta:-e.deltaY;return e.detail||a>0};a.bind("mousewheel wheel",function(a){e.$apply(n(a)?e.incrementHours():e.decrementHours()),a.preventDefault()}),t.bind("mousewheel wheel",function(a){e.$apply(n(a)?e.incrementMinutes():e.decrementMinutes()),a.preventDefault()})},this.setupInputEvents=function(a,t){if(e.readonlyInput)return e.updateHours=angular.noop,e.updateMinutes=angular.noop,void 0;var n=function(a,t){h.$setViewValue(null),h.$setValidity("time",!1),angular.isDefined(a)&&(e.invalidHours=a),angular.isDefined(t)&&(e.invalidMinutes=t)};e.updateHours=function(){var e=r();angular.isDefined(e)?(f.setHours(e),l("h")):n(!0)},a.bind("blur",function(){!e.invalidHours&&e.hours<10&&e.$apply(function(){e.hours=d(e.hours)})}),e.updateMinutes=function(){var e=s();angular.isDefined(e)?(f.setMinutes(e),l("m")):n(void 0,!0)},t.bind("blur",function(){!e.invalidMinutes&&e.minutes<10&&e.$apply(function(){e.minutes=d(e.minutes)})})},this.render=function(){var e=h.$modelValue?new Date(h.$modelValue):null;isNaN(e)?(h.$setValidity("time",!1),n.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):(e&&(f=e),c(),m())},e.incrementHours=function(){u(60*g)},e.decrementHours=function(){u(60*-g)},e.incrementMinutes=function(){u(b)},e.decrementMinutes=function(){u(-b)},e.toggleMeridian=function(){u(720*(f.getHours()<12?1:-1))}}]).directive("timepicker",function(){return{restrict:"EA",require:["timepicker","?^ngModel"],controller:"TimepickerController",replace:!0,scope:{},templateUrl:"template/timepicker/timepicker.html",link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i,a.find("input"))}}}),angular.module("ui.bootstrap.typeahead",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).factory("typeaheadParser",["$parse",function(e){var a=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;return{parse:function(t){var n=t.match(a);if(!n)throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+t+'".');return{itemName:n[3],source:e(n[4]),viewMapper:e(n[2]||n[1]),modelMapper:e(n[1])}}}}]).directive("typeahead",["$compile","$parse","$q","$timeout","$document","$position","typeaheadParser",function(e,a,t,n,o,i,r){var s=[9,13,27,38,40];return{require:"ngModel",link:function(d,l,c,m){var u,f=d.$eval(c.typeaheadMinLength)||1,h=d.$eval(c.typeaheadWaitMs)||0,p=d.$eval(c.typeaheadEditable)!==!1,g=a(c.typeaheadLoading).assign||angular.noop,b=a(c.typeaheadOnSelect),v=c.typeaheadInputFormatter?a(c.typeaheadInputFormatter):void 0,y=c.typeaheadAppendToBody?d.$eval(c.typeaheadAppendToBody):!1,w=a(c.ngModel).assign,S=r.parse(c.typeahead),A=d.$new();d.$on("$destroy",function(){A.$destroy()});var k="typeahead-"+A.$id+"-"+Math.floor(1e4*Math.random());l.attr({"aria-autocomplete":"list","aria-expanded":!1,"aria-owns":k});var C=angular.element("<div typeahead-popup></div>");C.attr({id:k,matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query",position:"position"}),angular.isDefined(c.typeaheadTemplateUrl)&&C.attr("template-url",c.typeaheadTemplateUrl);var T=function(){A.matches=[],A.activeIdx=-1,l.attr("aria-expanded",!1)},M=function(e){return k+"-option-"+e};A.$watch("activeIdx",function(e){0>e?l.removeAttr("aria-activedescendant"):l.attr("aria-activedescendant",M(e))});var N=function(e){var a={$viewValue:e};g(d,!0),t.when(S.source(d,a)).then(function(t){var n=e===m.$viewValue;if(n&&u)if(t.length>0){A.activeIdx=0,A.matches.length=0;for(var o=0;o<t.length;o++)a[S.itemName]=t[o],A.matches.push({id:M(o),label:S.viewMapper(A,a),model:t[o]});A.query=e,A.position=y?i.offset(l):i.position(l),A.position.top=A.position.top+l.prop("offsetHeight"),l.attr("aria-expanded",!0)}else T();n&&g(d,!1)},function(){T(),g(d,!1)})};T(),A.query=void 0;var x,E=function(e){x=n(function(){N(e)},h)},B=function(){x&&n.cancel(x)};m.$parsers.unshift(function(e){return u=!0,e&&e.length>=f?h>0?(B(),E(e)):N(e):(g(d,!1),B(),T()),p?e:e?(m.$setValidity("editable",!1),void 0):(m.$setValidity("editable",!0),e)}),m.$formatters.push(function(e){var a,t,n={};return v?(n.$model=e,v(d,n)):(n[S.itemName]=e,a=S.viewMapper(d,n),n[S.itemName]=void 0,t=S.viewMapper(d,n),a!==t?a:e)}),A.select=function(e){var a,t,o={};o[S.itemName]=t=A.matches[e].model,a=S.modelMapper(d,o),w(d,a),m.$setValidity("editable",!0),b(d,{$item:t,$model:a,$label:S.viewMapper(d,o)}),T(),n(function(){l[0].focus()},0,!1)},l.bind("keydown",function(e){0!==A.matches.length&&-1!==s.indexOf(e.which)&&(e.preventDefault(),40===e.which?(A.activeIdx=(A.activeIdx+1)%A.matches.length,A.$digest()):38===e.which?(A.activeIdx=(A.activeIdx?A.activeIdx:A.matches.length)-1,A.$digest()):13===e.which||9===e.which?A.$apply(function(){A.select(A.activeIdx)}):27===e.which&&(e.stopPropagation(),T(),A.$digest()))}),l.bind("blur",function(){u=!1});var L=function(e){l[0]!==e.target&&(T(),A.$digest())};o.bind("click",L),d.$on("$destroy",function(){o.unbind("click",L)});var R=e(C)(A);y?o.find("body").append(R):l.after(R)}}}]).directive("typeaheadPopup",function(){return{restrict:"EA",scope:{matches:"=",query:"=",active:"=",position:"=",select:"&"},replace:!0,templateUrl:"template/typeahead/typeahead-popup.html",link:function(e,a,t){e.templateUrl=t.templateUrl,e.isOpen=function(){return e.matches.length>0},e.isActive=function(a){return e.active==a},e.selectActive=function(a){e.active=a},e.selectMatch=function(a){e.select({activeIdx:a})}}}}).directive("typeaheadMatch",["$http","$templateCache","$compile","$parse",function(e,a,t,n){return{restrict:"EA",scope:{index:"=",match:"=",query:"="},link:function(o,i,r){var s=n(r.templateUrl)(o.$parent)||"template/typeahead/typeahead-match.html";e.get(s,{cache:a}).success(function(e){i.replaceWith(t(e.trim())(o))})}}}]).filter("typeaheadHighlight",function(){function e(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(a,t){return t?(""+a).replace(new RegExp(e(t),"gi"),"<strong>$&</strong>"):a}}),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion-group.html",'<div class="panel panel-default">\n  <div class="panel-heading">\n    <h4 class="panel-title">\n      <a class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]),angular.module("template/alert/alert.html",[]).run(["$templateCache",function(e){e.put("template/alert/alert.html",'<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissable\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')
}]),angular.module("template/carousel/carousel.html",[]).run(["$templateCache",function(e){e.put("template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n    <ol class="carousel-indicators" ng-show="slides.length > 1">\n        <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-left"></span></a>\n    <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-right"></span></a>\n</div>\n')}]),angular.module("template/carousel/slide.html",[]).run(["$templateCache",function(e){e.put("template/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>\n")}]),angular.module("template/datepicker/datepicker.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/datepicker.html",'<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>')}]),angular.module("template/datepicker/day.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/day.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/month.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/month.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/popup.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/popup.html",'<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n')}]),angular.module("template/datepicker/year.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/year.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/modal/backdrop.html",[]).run(["$templateCache",function(e){e.put("template/modal/backdrop.html",'<div class="modal-backdrop fade {{ backdropClass }}"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')}]),angular.module("template/modal/window.html",[]).run(["$templateCache",function(e){e.put("template/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" modal-transclude></div></div>\n</div>')}]),angular.module("template/pagination/pager.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious(), previous: align}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext(), next: align}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n</ul>')}]),angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="boundaryLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(1)">{{getText(\'first\')}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active}"><a href ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n  <li ng-if="boundaryLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(totalPages)">{{getText(\'last\')}}</a></li>\n</ul>')}]),angular.module("template/tooltip/tooltip-html-unsafe-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-html-unsafe-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]),angular.module("template/popover/popover.html",[]).run(["$templateCache",function(e){e.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("template/progressbar/bar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/bar.html",'<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>')}]),angular.module("template/progressbar/progress.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progress.html",'<div class="progress" ng-transclude></div>')}]),angular.module("template/progressbar/progressbar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progressbar.html",'<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>\n</div>')}]),angular.module("template/rating/rating.html",[]).run(["$templateCache",function(e){e.put("template/rating/rating.html",'<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <i ng-repeat="r in range track by $index" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')">\n        <span class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    </i>\n</span>')}]),angular.module("template/tabs/tab.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tab.html",'<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("template/tabs/tabset.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tabset.html",'<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')}]),angular.module("template/timepicker/timepicker.html",[]).run(["$templateCache",function(e){e.put("template/timepicker/timepicker.html",'<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n		<tr>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n				<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td>:</td>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n				<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n	</tbody>\n</table>\n')}]),angular.module("template/typeahead/typeahead-match.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-match.html",'<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>')}]),angular.module("template/typeahead/typeahead-popup.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-popup.html",'<ul class="dropdown-menu" ng-show="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n')}]),!jQuery)throw new Error("Bootstrap Form Helpers requires jQuery");var BFHCountriesList={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",VG:"British Virgin Islands",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",CI:"Côte d'Ivoire",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CK:"Cook Islands",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",CD:"Democratic Republic of the Congo",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",TP:"East Timor",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FO:"Faeroe Islands",FK:"Falkland Islands",FJ:"Fiji",FI:"Finland",MK:"Former Yugoslav Republic of Macedonia",FR:"France",FX:"France, Metropolitan",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard and Mc Donald Islands",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macau",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",KP:"North Korea",MP:"Northern Marianas",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn Islands",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russia",RW:"Rwanda",ST:"São Tomé and Príncipe",SH:"Saint Helena",PM:"St. Pierre and Miquelon",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",KR:"South Korea",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen Islands",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syria",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",BS:"The Bahamas",GM:"The Gambia",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",VI:"US Virgin Islands",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Vatican City",VE:"Venezuela",VN:"Vietnam",WF:"Wallis and Futuna Islands",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},BFHCurrenciesList={AED:{label:"United Arab Emirates dirham",currencyflag:"",symbol:"د.إ"},AFN:{label:"Afghan afghani",currencyflag:"",symbol:"؋"},ALL:{label:"Albanian lek",currencyflag:"",symbol:"L"},AMD:{label:"Armenian dram",currencyflag:"",symbol:"դր"},AOA:{label:"Angolan kwanza",currencyflag:"",symbol:"Kz"},ARS:{label:"Argentine peso",currencyflag:"",symbol:"$"},AUD:{label:"Australian dollar",currencyflag:"AUD",symbol:"$"},AWG:{label:"Aruban florin",currencyflag:"",symbol:"ƒ"},AZN:{label:"Azerbaijani manat",currencyflag:"",symbol:""},BAM:{label:"Bosnia and Herzegovina convertible mark",currencyflag:"",symbol:"KM"},BBD:{label:"Barbadian dollar",currencyflag:"",symbol:"$"},BDT:{label:"Bangladeshi taka",currencyflag:"",symbol:"৳"},BGN:{label:"Bulgarian lev",currencyflag:"",symbol:"лв"},BHD:{label:"Bahraini dinar",currencyflag:"",symbol:".د.ب"},BIF:{label:"Burundian franc",currencyflag:"",symbol:"Fr"},BMD:{label:"Bermudian dollar",currencyflag:"",symbol:"$"},BND:{label:"Brunei dollar",currencyflag:"",symbol:"$"},BOB:{label:"Bolivian boliviano",currencyflag:"",symbol:"Bs"},BRL:{label:"Brazilian real",currencyflag:"",symbol:"R$"},BSD:{label:"Bahamian dollar",currencyflag:"",symbol:"$"},BTN:{label:"Bhutanese ngultrum",currencyflag:"",symbol:"Nu"},BWP:{label:"Botswana pula",currencyflag:"",symbol:"P"},BYR:{label:"Belarusian ruble",currencyflag:"",symbol:"Br"},BZD:{label:"Belize dollar",currencyflag:"",symbol:"$"},CAD:{label:"Canadian dollar",currencyflag:"",symbol:"$"},CDF:{label:"Congolese franc",currencyflag:"",symbol:"Fr"},CHF:{label:"Swiss franc",currencyflag:"CHF",symbol:"Fr"},CLP:{label:"Chilean peso",currencyflag:"",symbol:"$"},CNY:{label:"Chinese yuan",currencyflag:"",symbol:"¥"},COP:{label:"Colombian peso",currencyflag:"",symbol:"$"},CRC:{label:"Costa Rican colón",currencyflag:"",symbol:"₡"},CUP:{label:"Cuban convertible peso",currencyflag:"",symbol:"$"},CVE:{label:"Cape Verdean escudo",currencyflag:"",symbol:"$"},CZK:{label:"Czech koruna",currencyflag:"",symbol:"Kč"},DJF:{label:"Djiboutian franc",currencyflag:"",symbol:"Fr"},DKK:{label:"Danish krone",currencyflag:"DKK",symbol:"kr"},DOP:{label:"Dominican peso",currencyflag:"",symbol:"$"},DZD:{label:"Algerian dinar",currencyflag:"",symbol:"د.ج"},EGP:{label:"Egyptian pound",currencyflag:"",symbol:"ج.م"},ERN:{label:"Eritrean nakfa",currencyflag:"",symbol:"Nfk"},ETB:{label:"Ethiopian birr",currencyflag:"",symbol:"Br"},EUR:{label:"Euro",currencyflag:"EUR",symbol:"€"},FJD:{label:"Fijian dollar",currencyflag:"",symbol:"$"},FKP:{label:"Falkland Islands pound",currencyflag:"",symbol:"£"},GBP:{label:"British pound",currencyflag:"",symbol:"£"},GEL:{label:"Georgian lari",currencyflag:"",symbol:"ლ"},GHS:{label:"Ghana cedi",currencyflag:"",symbol:"₵"},GMD:{label:"Gambian dalasi",currencyflag:"",symbol:"D"},GNF:{label:"Guinean franc",currencyflag:"",symbol:"Fr"},GTQ:{label:"Guatemalan quetzal",currencyflag:"",symbol:"Q"},GYD:{label:"Guyanese dollar",currencyflag:"",symbol:"$"},HKD:{label:"Hong Kong dollar",currencyflag:"",symbol:"$"},HNL:{label:"Honduran lempira",currencyflag:"",symbol:"L"},HRK:{label:"Croatian kuna",currencyflag:"",symbol:"kn"},HTG:{label:"Haitian gourde",currencyflag:"",symbol:"G"},HUF:{label:"Hungarian forint",currencyflag:"",symbol:"Ft"},IDR:{label:"Indonesian rupiah",currencyflag:"",symbol:"Rp"},ILS:{label:"Israeli new shekel",currencyflag:"",symbol:"₪"},IMP:{label:"Manx pound",currencyflag:"",symbol:"£"},INR:{label:"Indian rupee",currencyflag:"",symbol:""},IQD:{label:"Iraqi dinar",currencyflag:"",symbol:"ع.د"},IRR:{label:"Iranian rial",currencyflag:"",symbol:"﷼"},ISK:{label:"Icelandic króna",currencyflag:"",symbol:"kr"},JEP:{label:"Jersey pound",currencyflag:"",symbol:"£"},JMD:{label:"Jamaican dollar",currencyflag:"",symbol:"$"},JOD:{label:"Jordanian dinar",currencyflag:"",symbol:"د.ا"},JPY:{label:"Japanese yen",currencyflag:"",symbol:"¥"},KES:{label:"Kenyan shilling",currencyflag:"",symbol:"Sh"},KGS:{label:"Kyrgyzstani som",currencyflag:"",symbol:"лв"},KHR:{label:"Cambodian riel",currencyflag:"",symbol:"៛"},KMF:{label:"Comorian franc",currencyflag:"",symbol:"Fr"},KPW:{label:"North Korean won",currencyflag:"",symbol:"₩"},KRW:{label:"South Korean won",currencyflag:"",symbol:"₩"},KWD:{label:"Kuwaiti dinar",currencyflag:"",symbol:"د.ك"},KYD:{label:"Cayman Islands dollar",currencyflag:"",symbol:"$"},KZT:{label:"Kazakhstani tenge",currencyflag:"",symbol:"₸"},LAK:{label:"Lao kip",currencyflag:"",symbol:"₭"},LBP:{label:"Lebanese pound",currencyflag:"",symbol:"ل.ل"},LKR:{label:"Sri Lankan rupee",currencyflag:"",symbol:"Rs"},LRD:{label:"Liberian dollar",currencyflag:"",symbol:"$"},LSL:{label:"Lesotho loti",currencyflag:"",symbol:"L"},LTL:{label:"Lithuanian litas",currencyflag:"",symbol:"Lt"},LVL:{label:"Latvian lats",currencyflag:"",symbol:"Ls"},LYD:{label:"Libyan dinar",currencyflag:"",symbol:"ل.د"},MAD:{label:"Moroccan dirham",currencyflag:"",symbol:"د.م."},MDL:{label:"Moldovan leu",currencyflag:"",symbol:"L"},MGA:{label:"Malagasy ariary",currencyflag:"",symbol:"Ar"},MKD:{label:"Macedonian denar",currencyflag:"",symbol:"ден"},MMK:{label:"Burmese kyat",currencyflag:"",symbol:"Ks"},MNT:{label:"Mongolian tögrög",currencyflag:"",symbol:"₮"},MOP:{label:"Macanese pataca",currencyflag:"",symbol:"P"},MRO:{label:"Mauritanian ouguiya",currencyflag:"",symbol:"UM"},MUR:{label:"Mauritian rupee",currencyflag:"",symbol:"Rs"},MVR:{label:"Maldivian rufiyaa",currencyflag:"",symbol:".ރ"},MWK:{label:"Malawian kwacha",currencyflag:"",symbol:"MK"},MXN:{label:"Mexican peso",currencyflag:"",symbol:"$"},MYR:{label:"Malaysian ringgit",currencyflag:"",symbol:"MR"},MZN:{label:"Mozambican metical",currencyflag:"",symbol:"MT"},NAD:{label:"Namibian dollar",currencyflag:"",symbol:"$"},NGN:{label:"Nigerian naira",currencyflag:"",symbol:"₦"},NIO:{label:"Nicaraguan córdoba",currencyflag:"",symbol:"C$"},NOK:{label:"Norwegian krone",currencyflag:"",symbol:"kr"},NPR:{label:"Nepalese rupee",currencyflag:"",symbol:"Rs"},NZD:{label:"New Zealand dollar",currencyflag:"",symbol:"$"},OMR:{label:"Omani rial",currencyflag:"",symbol:"ر.ع."},PAB:{label:"Panamanian balboa",currencyflag:"",symbol:"B/."},PEN:{label:"Peruvian nuevo sol",currencyflag:"",symbol:"S/."},PGK:{label:"Papua New Guinean kina",currencyflag:"",symbol:"K"},PHP:{label:"Philippine peso",currencyflag:"",symbol:"₱"},PKR:{label:"Pakistani rupee",currencyflag:"",symbol:"Rs"},PLN:{label:"Polish złoty",currencyflag:"",symbol:"zł"},PRB:{label:"Transnistrian ruble",currencyflag:"",symbol:"р."},PYG:{label:"Paraguayan guaraní",currencyflag:"",symbol:"₲"},QAR:{label:"Qatari riyal",currencyflag:"",symbol:"ر.ق"},RON:{label:"Romanian leu",currencyflag:"",symbol:"L"},RSD:{label:"Serbian dinar",currencyflag:"",symbol:"дин"},RUB:{label:"Russian ruble",currencyflag:"",symbol:"руб."},RWF:{label:"Rwandan franc",currencyflag:"",symbol:"Fr"},SAR:{label:"Saudi riyal",currencyflag:"",symbol:"ر.س"},SBD:{label:"Solomon Islands dollar",currencyflag:"",symbol:"$"},SCR:{label:"Seychellois rupee",currencyflag:"",symbol:"Rs"},SDG:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SEK:{label:"Swedish krona",currencyflag:"",symbol:"kr"},SGD:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SHP:{label:"Saint Helena pound",currencyflag:"",symbol:"£"},SLL:{label:"Sierra Leonean leone",currencyflag:"",symbol:"Le"},SOS:{label:"Somali shilling",currencyflag:"",symbol:"Sh"},SRD:{label:"Surinamese dollar",currencyflag:"",symbol:"$"},SSP:{label:"South Sudanese pound",currencyflag:"",symbol:"£"},STD:{label:"São Tomé and Príncipe dobra",currencyflag:"",symbol:"Db"},SVC:{label:"Salvadoran colón",currencyflag:"",symbol:"₡"},SYP:{label:"Syrian pound",currencyflag:"",symbol:"£"},SZL:{label:"Swazi lilangeni",currencyflag:"",symbol:"L"},THB:{label:"Thai baht",currencyflag:"",symbol:"฿"},TJS:{label:"Tajikistani somoni",currencyflag:"",symbol:"SM"},TMT:{label:"Turkmenistan manat",currencyflag:"",symbol:"m"},TND:{label:"Tunisian dinar",currencyflag:"",symbol:"د.ت"},TOP:{label:"Tongan paʻanga",currencyflag:"",symbol:"T$"},TRY:{label:"Turkish lira",currencyflag:"",symbol:"&#8378;"},TTD:{label:"Trinidad and Tobago dollar",currencyflag:"",symbol:"$"},TWD:{label:"New Taiwan dollar",currencyflag:"",symbol:"$"},TZS:{label:"Tanzanian shilling",currencyflag:"",symbol:"Sh"},UAH:{label:"Ukrainian hryvnia",currencyflag:"",symbol:"₴"},UGX:{label:"Ugandan shilling",currencyflag:"",symbol:"Sh"},USD:{label:"United States dollar",currencyflag:"",symbol:"$"},UYU:{label:"Uruguayan peso",currencyflag:"",symbol:"$"},UZS:{label:"Uzbekistani som",currencyflag:"",symbol:"лв"},VEF:{label:"Venezuelan bolívar",currencyflag:"",symbol:"Bs F"},VND:{label:"Vietnamese đồng",currencyflag:"",symbol:"₫"},VUV:{label:"Vanuatu vatu",currencyflag:"",symbol:"Vt"},WST:{label:"Samoan tālā",currencyflag:"",symbol:"T"},XAF:{label:"Central African CFA franc",currencyflag:"XAF",symbol:"Fr"},XCD:{label:"East Caribbean dollar",currencyflag:"XCD",symbol:"$"},XOF:{label:"West African CFA franc",currencyflag:"XOF",symbol:"Fr"},XPF:{label:"CFP franc",currencyflag:"XPF",symbol:"Fr"},YER:{label:"Yemeni rial",currencyflag:"",symbol:"﷼"},ZAR:{label:"South African rand",currencyflag:"ZAR",symbol:"R"},ZMW:{label:"Zambian kwacha",currencyflag:"",symbol:"ZK"},ZWL:{label:"Zimbabwean dollar",currencyflag:"",symbol:"$"}},BFHMonthsList=["January","February","March","April","May","June","July","August","September","October","November","December"],BFHDaysList=["SUN","MON","TUE","WED","THU","FRI","SAT"],BFHDayOfWeekStart=0,BFHFontsList={"Andale Mono":'"Andale Mono", AndaleMono, monospace',Arial:'Arial, "Helvetica Neue", Helvetica, sans-serif',"Arial Black":'"Arial Black", "Arial Bold", Gadget, sans-serif',"Arial Narrow":'"Arial Narrow", Arial, sans-serif',"Arial Rounded MT Bold":'"Arial Rounded MT Bold", "Helvetica Rounded", Arial, sans-serif',"Avant Garde":'"Avant Garde", Avantgarde, "Century Gothic", CenturyGothic, "AppleGothic", sans-serif',Baskerville:'Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif',"Big Caslon":'"Big Caslon", "Book Antiqua", "Palatino Linotype", Georgia, serif',"Bodoni MT":'"Bodoni MT", Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Book Antiqua":'"Book Antiqua", Palatino, "Palatino Linotype", "Palatino LT STD", Georgia, serif',"Brush Script MT":'"Brush Script MT", cursive',Calibri:'Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Calisto MT":'"Calisto MT", "Bookman Old Style", Bookman, "Goudy Old Style", Garamond, "Hoefler Text", "Bitstream Charter", Georgia, serif',Cambrio:"Cambria, Georgia, serif",Candara:'Candara, Calibri, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Century Gothic":'"Century Gothic", CenturyGothic, AppleGothic, sans-serif',Consolas:"Consolas, monaco, monospace",Copperplate:'Copperplate, "Copperplate Gothic Light", fantasy',"Courier New":'"Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace',Didot:'Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Franklin Gothic Medium":'"Franklin Gothic Medium", "Franklin Gothic", "ITC Franklin Gothic", Arial, sans-serif',Futura:'Futura, "Trebuchet MS", Arial, sans-serif',Garamond:'Garamond, Baskerville, "Baskerville Old Face", "Hoefler Text", "Times New Roman", serif',Geneva:"Geneva, Tahoma, Verdana, sans-serif",Georgia:'Georgia, Times, "Times New Roman", serif',"Gill Sans":'"Gill Sans", "Gill Sans MT", Calibri, sans-serif',"Goudy Old Style":'"Goudy Old Style", Garamond, "Big Caslon", "Times New Roman", serif',Helvetica:'"Helvetica Neue", Helvetica, Arial, sans-serif',"Hoefler Text":'"Hoefler Text", "Baskerville old face", Garamond, "Times New Roman", serif',Impact:'Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans serif',"Lucida Bright":'"Lucida Bright", Georgia, serif',"Lucida Console":'"Lucida Console", "Lucida Sans Typewriter", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Sans Typewriter":'"Lucida Sans Typewriter", "Lucida Console", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Grande":'"Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif',Monaco:'Monaco, Consolas, "Lucida Console", monospace',Optima:'Optima, Segoe, "Segoe UI", Candara, Calibri, Arial, sans-serif',Palatino:'Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif',Papyrus:"Papyrus, fantasy",Perpetua:'Perpetua, Baskerville, "Big Caslon", "Palatino Linotype", Palatino, "URW Palladio L", "Nimbus Roman No9 L", serif',Rockwell:'Rockwell, "Courier Bold", Courier, Georgia, Times, "Times New Roman", serif',"Rockwell Extra Bold":'"Rockwell Extra Bold", "Rockwell Bold", monospace',"Segoe UI":'"Segoe UI", Frutiger, "Frutiger Linotype',Tahoma:"Tahoma, Verdana, Segoe, sans-serif","Times New Roman":'TimesNewRoman, "Times New Roman", Times, Baskerville, Georgia, serif',"Trebuchet MS":'"Trebuchet MS", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Tahoma, sans-serif',Verdana:"Verdana, Geneva, sans-serif"},BFHFontSizesList={8:"8",9:"9",10:"10",11:"11",12:"12",14:"14",18:"18",24:"24",30:"30",36:"36",48:"48",60:"60",72:"72",96:"96"},BFHGoogleFontsList={kind:"webfonts#webfontList",items:[{kind:"webfonts#webfont",family:"ABeeZee",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abel",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abril Fatface",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aclonica",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Acme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Actor",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Adamina",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Advent Pro",variants:["100","200","300","regular","500","600","700"],subsets:["latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Aguafina Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Akronim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aladin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aldrich",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alegreya",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alegreya SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alex Brush",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alfa Slab One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike Angular",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allan",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Allerta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allerta Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allura",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amarante",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Amaranth",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amatic SC",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amethysta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anaheim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andada",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andika",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Angkor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Annie Use Your Telescope",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anonymous Pro",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Antic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Didone",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anton",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arapey",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arbutus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arbutus Slab",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Architects Daughter",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Archivo Black",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Archivo Narrow",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arimo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arizonia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Armata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Artifika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arvo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asap",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Asset",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Astloch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asul",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Atomic Age",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Aubrey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Audiowide",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Autour One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Gruesa Libre",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Sans Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Serif Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bad Script",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Balthazar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bangers",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Basic",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Battambang",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Baumans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bayon",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Belgrano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Belleza",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"BenchNine",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bentham",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Berkshire Swash",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bevan",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bigelow Rules",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bigshot One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bilbo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bilbo Swash Caps",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bitter",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Black Ops One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bokor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Bonbon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Boogaloo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Brawler",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bree Serif",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubblegum Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubbler One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Buda",variants:["300"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Buenard",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butcherman",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butterfly Kids",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cabin",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Condensed",variants:["regular","500","600","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Sketch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caesar Dressing",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cagliostro",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Calligraffitti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cambo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Candal",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantarell",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cantora One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Capriola",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cardo",variants:["regular","italic","700"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Carme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carter One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caudex",variants:["regular","italic","700","700italic"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Cedarville Cursive",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ceviche One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Changa One",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chango",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chau Philomene One",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chela One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chelsea Market",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chenla",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Cherry Cream Soda",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cherry Swash",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chewy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chicle",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chivo",variants:["regular","italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel Decorative",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Clicker Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Coda",variants:["regular","800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coda Caption",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Codystar",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Combo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Comfortaa",variants:["300","regular","700"],subsets:["cyrillic","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Coming Soon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Concert One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Condiment",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Content",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Contrail One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Convergence",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cookie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Copse",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Corben",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Courgette",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cousine",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coustard",variants:["regular","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Covered By Your Grace",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crafty Girls",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Creepster",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crete Round",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crimson Text",variants:["regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Croissant One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crushed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cuprum",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Damion",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dancing Script",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dangrek",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Dawning of a New Day",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Days One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Unicase",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Della Respira",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Devonshire",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Didact Gothic",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Diplomata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Diplomata SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Doppio One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dorsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dosis",variants:["200","300","regular","500","600","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dr Sugiyama",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Droid Sans",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Sans Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Serif",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Duru Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dynalight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"EB Garamond",variants:["regular"],subsets:["cyrillic","latin-ext","latin","vietnamese","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Eagle Lake",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Eater",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Economica",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Electrolize",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Emblema One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Emilys Candy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Engagement",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Englebert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Enriqueta",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Erica One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Esteban",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Euphoria Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ewert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Exo",variants:["100","100italic","200","200italic","300","300italic","regular","italic","500","500italic","600","600italic","700","700italic","800","800italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Expletus Sans",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fanwood Text",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate Inline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Faster One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fasthand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Federant",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Federo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Felipa",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fenix",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Finger Paint",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fjord One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flamenco",variants:["300","regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flavors",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fondamento",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fontdiner Swanky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Forum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Francois One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Freckle Face",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fredericka the Great",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fredoka One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Freehand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Fresca",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Frijole",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fugaz One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"GFS Didot",variants:["regular"],subsets:["greek"]},{kind:"webfonts#webfont",family:"GFS Neohellenic",variants:["regular","italic","700","700italic"],subsets:["greek"]},{kind:"webfonts#webfont",family:"Gafata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Galdeano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Galindo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Book Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Geo",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar Fill",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Germania One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gilda Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Give You Glory",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Glass Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Glegoo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gloria Hallelujah",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goblin One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gochi Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gorditas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goudy Bookletter 1911",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Graduate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gravitas One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Great Vibes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Griffy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gruppo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gudea",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Habibi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hammersmith One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei Fill",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Handlee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Hanuman",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Happy Monkey",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Headland One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Henny Penny",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Herr Von Muellerhoff",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Holtwood One SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homemade Apple",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homenaje",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceberg",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceland",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Imprima",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inconsolata",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inder",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Indie Flower",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Inika",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Irish Grover",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Istok Web",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Italiana",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Italianno",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jacques Francois",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jacques Francois Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jim Nightshade",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jockey One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jolly Lodger",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Josefin Sans",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Josefin Slab",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Joti One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Judson",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julius Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Junge",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jura",variants:["300","regular","500","600"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Just Another Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Just Me Again Down Here",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kameron",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Karla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kaushan Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Keania One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kelly Slab",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kenia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Khmer",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kite One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Knewave",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kotta One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Koulen",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kranky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kreon",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kristi",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Krona One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"La Belle Aurore",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lancelot",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lato",variants:["100","100italic","300","300italic","regular","italic","700","700italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"League Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Leckerli One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ledger",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lekton",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lemon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Life Savers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lilita One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Limelight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Linden Hill",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lobster",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Lobster Two",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Outline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Sketch",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Solid",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lora",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Love Ya Like A Sister",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Loved by the King",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lovers Quarrel",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Luckiest Guy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lusitana",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lustria",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Magra",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Maiden Orange",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mako",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marcellus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marcellus SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marck Script",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Margarine",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marko One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marmelad",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marvel",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Maven Pro",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"McLaren",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Meddon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"MedievalSharp",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Medula One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Megrim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Meie Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Merriweather",variants:["300","regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Metal",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Metal Mania",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metamorphous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metrophobic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Michroma",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian Tattoo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miniver",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miss Fajardose",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Modern Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molengo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molle",variants:["italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Monofett",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monoton",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monsieur La Doulaise",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Montaga",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montez",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Alternates",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Subrayada",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Moul",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Moulpali",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Mountains of Christmas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mouse Memoirs",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Bedfort",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Dafoe",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr De Haviland",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Saint Delafield",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Sheppards",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Muli",variants:["300","300italic","regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mystery Quest",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Neucha",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Neuton",variants:["200","300","regular","italic","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"News Cycle",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Niconne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nixie One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nobile",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nokora",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Norican",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nosifer",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nothing You Could Do",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Noticia Text",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin","vietnamese"]},{kind:"webfonts#webfont",family:"Nova Cut",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Flat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Mono",variants:["regular"],subsets:["latin","greek"]},{kind:"webfonts#webfont",family:"Nova Oval",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Slim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Square",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Numans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nunito",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Odor Mean Chey",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Offside",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Old Standard TT",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oldenburg",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script Swash Caps",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Open Sans",variants:["300","300italic","regular","italic","600","600italic","700","700italic","800","800italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Open Sans Condensed",variants:["300","300italic","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Oranienbaum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Orbitron",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oregano",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Orienta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Original Surfer",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oswald",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Over the Rainbow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Overlock",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Overlock SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ovo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oxygen",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oxygen Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Mono",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"PT Sans",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Caption",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Narrow",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Serif",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"PT Serif Caption",variants:["regular","italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Pacifico",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paprika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Parisienne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passero One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passion One",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patrick Hand",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patua One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paytone One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Peralta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Permanent Marker",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Petit Formal Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Petrona",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Philosopher",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Piedra",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Pinyon Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pirata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Plaster",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Play",variants:["regular","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Playball",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Podkova",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poiret One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Poller One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poly",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pompiere",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pontano Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Port Lligat Sans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Port Lligat Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prata",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Preahvihear",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Press Start 2P",variants:["regular"],subsets:["cyrillic","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Princess Sofia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Prociono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prosto One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Puritan",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Purple Purse",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quando",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quantico",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quattrocento",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quattrocento Sans",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Questrial",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quicksand",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quintessential",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Qwigley",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Racing Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Radley",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Raleway",variants:["100","200","300","regular","500","600","700","800","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Raleway Dots",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rambla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rammetto One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ranchers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rancho",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rationale",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Redressed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Reenie Beanie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Revalia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye Marrow",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Righteous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Risque",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rochester",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rock Salt",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rokkitt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Romanesco",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ropa Sans",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rosario",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rosarivo",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rouge Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ruda",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rufina",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruge Boogie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruluko",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rum Raisin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruslan Display",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Russo One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruthie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sacramento",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Salsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sanchez",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sancreek",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sansita One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sarina",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Satisfy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Scada",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Schoolbell",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Seaweed Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sevillana",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Seymour One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light Two",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shanti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Share Tech",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share Tech Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shojumaru",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Short Stack",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Siemreap",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Sigmar One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Signika",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Signika Negative",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Simonetta",variants:["regular","italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sirin Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Six Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Skranji",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Slackey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smokum",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smythe",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sniglet",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snippet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snowburst One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sofadi One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sofia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sonsie One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sorts Mill Goudy",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Source Code Pro",variants:["200","300","regular","600","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Source Sans Pro",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Special Elite",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spicy Rice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spinnaker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Spirax",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Squada One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stalemate",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stalinist One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stardos Stencil",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Condensed",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Expanded",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stoke",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Strait",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sue Ellen Francisco",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sunshiney",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Supermercado One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Suwannaphum",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Swanky and Moo Moo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Syncopate",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tangerine",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Taprom",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Telex",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tenor Sans",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Text Me One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"The Girl Next Door",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tienne",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tinos",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Titan One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Titillium Web",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trade Winds",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trocchi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trochut",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trykker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Tulpen One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ubuntu",variants:["300","300italic","regular","italic","500","500italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Condensed",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Mono",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ultra",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Uncial Antiqua",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Underdog",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Unica One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"UnifrakturCook",variants:["700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"UnifrakturMaguntia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unkempt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unlock",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unna",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"VT323",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vampiro One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vast Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vibur",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vidaloka",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Viga",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Voces",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Volkhov",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vollkorn",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Voltaire",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Waiting for the Sunrise",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Wallpoet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Walter Turncoat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Warnes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wellfleet",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wire One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yanone Kaffeesatz",variants:["200","300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yellowtail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yeseva One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yesteryear",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Zeyada",variants:["regular"],subsets:["latin"]}]},BFHLanguagesList={om:"Afaan Oromoo",aa:"Afaraf",af:"Afrikaans",ak:"Akan",an:"aragonés",ig:"Asụsụ Igbo",gn:"Avañe'ẽ",ae:"avesta",ay:"aymar aru",az:"azərbaycan dili",id:"Bahasa Indonesia",ms:"bahasa Melayu",bm:"bamanankan",jv:"basa Jawa",su:"Basa Sunda",bi:"Bislama",bs:"bosanski jezik",br:"brezhoneg",ca:"català",ch:"Chamoru",ny:"chiCheŵa",sn:"chiShona",co:"corsu",cy:"Cymraeg",da:"dansk",se:"Davvisámegiella",de:"Deutsch",nv:"Diné bizaad",et:"eesti",na:"Ekakairũ Naoero",en:"English",es:"español",eo:"Esperanto",eu:"euskara",ee:"Eʋegbe",to:"faka Tonga",mg:"fiteny malagasy",fr:"français",fy:"Frysk",ff:"Fulfulde",fo:"føroyskt",ga:"Gaeilge",gv:"Gaelg",sm:"gagana fa'a Samoa",gl:"galego",sq:"gjuha shqipe",gd:"Gàidhlig",ki:"Gĩkũyũ",ha:"Hausa",ho:"Hiri Motu",hr:"hrvatski jezik",io:"Ido",rw:"Ikinyarwanda",rn:"Ikirundi",ia:"Interlingua",nd:"isiNdebele",nr:"isiNdebele",xh:"isiXhosa",zu:"isiZulu",it:"italiano",ik:"Iñupiaq",pl:"polski",mh:"Kajin M̧ajeļ",kl:"kalaallisut",kr:"Kanuri",kw:"Kernewek",kg:"KiKongo",sw:"Kiswahili",ht:"Kreyòl ayisyen",kj:"Kuanyama",ku:"Kurdî",la:"latine",lv:"latviešu valoda",lt:"lietuvių kalba",ro:"limba română",li:"Limburgs",ln:"Lingála",lg:"Luganda",lb:"Lëtzebuergesch",hu:"magyar",mt:"Malti",nl:"Nederlands",no:"Norsk",nb:"Norsk bokmål",nn:"Norsk nynorsk",uz:"O'zbek",oc:"occitan",ie:"Interlingue",hz:"Otjiherero",ng:"Owambo",pt:"português",ty:"Reo Tahiti",rm:"rumantsch grischun",qu:"Runa Simi",sc:"sardu",za:"Saɯ cueŋƅ",st:"Sesotho",tn:"Setswana",ss:"SiSwati",sl:"slovenski jezik",sk:"slovenčina",so:"Soomaaliga",fi:"suomi",sv:"Svenska",mi:"te reo Māori",vi:"Tiếng Việt",lu:"Tshiluba",ve:"Tshivenḓa",tw:"Twi",tk:"Türkmen",tr:"Türkçe",ug:"Uyƣurqə",vo:"Volapük",fj:"vosa Vakaviti",wa:"walon",tl:"Wikang Tagalog",wo:"Wollof",ts:"Xitsonga",yo:"Yorùbá",sg:"yângâ tî sängö",is:"Íslenska",cs:"čeština",el:"ελληνικά",av:"авар мацӀ",ab:"аҧсуа бызшәа",ba:"башҡорт теле",be:"беларуская мова",bg:"български език",os:"ирон æвзаг",kv:"коми кыв",ky:"Кыргызча",mk:"македонски јазик",mn:"монгол",ce:"нохчийн мотт",ru:"Русский язык",sr:"српски језик",tt:"татар теле",tg:"тоҷикӣ",uk:"українська мова",cv:"чӑваш чӗлхи",cu:"ѩзыкъ словѣньскъ",kk:"қазақ тілі",hy:"Հայերեն",yi:"ייִדיש",he:"עברית",ur:"اردو",ar:"العربية",fa:"فارسی",ps:"پښتو",ks:"कश्मीरी",ne:"नेपाली",pi:"पाऴि",bh:"भोजपुरी",mr:"मराठी",sa:"संस्कृतम्",sd:"सिन्धी",hi:"हिन्दी",as:"অসমীয়া",bn:"বাংলা",pa:"ਪੰਜਾਬੀ",gu:"ગુજરાતી",or:"ଓଡ଼ିଆ",ta:"தமிழ்",te:"తెలుగు",kn:"ಕನ್ನಡ",ml:"മലയാളം",si:"සිංහල",th:"ไทย",lo:"ພາສາລາວ",bo:"བོད་ཡིག",dz:"རྫོང་ཁ",my:"ဗမာစာ",ka:"ქართული",ti:"ትግርኛ",am:"አማርኛ",iu:"ᐃᓄᒃᑎᑐᑦ",oj:"ᐊᓂᔑᓈᐯᒧᐎᓐ",cr:"ᓀᐦᐃᔭᐍᐏᐣ",km:"ខ្មែរ",zh:"中文 (Zhōngwén)",ja:"日本語 (にほんご)",ii:"ꆈꌠ꒿ Nuosuhxop",ko:"한국어 (韓國語)"},BFHPhoneFormatList={AF:"+93 0dd ddd dddd",AL:"+355 0dd ddd ddd",DZ:"+213 0ddd dd dd dd",AS:"+1 (ddd) ddd-dddd",AD:"+376 ddddddddd",AO:"+244 ddd ddd ddd",AI:"+1 (ddd) ddd-dddd",AQ:"+672 ddddddddd",AG:"+1 (ddd) ddd-dddd",AR:"+54 ddddddddd",AM:"+374 0dd dddddd",AW:"+297 ddd dddd",AU:"+61 ddd ddd ddd",AT:"+43 0dddd ddddddddd",AZ:"+994 ddddddddd",BH:"+973 ddddddddd",BD:"+880 ddddddddd",BB:"+1 ddddddddd",BY:"+375 ddddddddd",BE:"+32 ddddddddd",BZ:"+501 ddddddddd",BJ:"+229 ddddddddd",BM:"+1 (ddd) ddd-dddd",BT:"+975 ddddddddd",BO:"+591 ddddddddd",BA:"+387 ddddddddd",BW:"+267 ddddddddd",BV:"+0 ddddddddd",BR:"+55 ddddddddd",IO:"+0 ddddddddd",VG:"+1 (ddd) ddd-dddd",BN:"+673 ddddddddd",BG:"+359 ddddddddd",BF:"+226 ddddddddd",BI:"+257 ddddddddd",CI:"+225 ddddddddd",KH:"+855 ddddddddd",CM:"+237 ddddddddd",CA:"+1 (ddd) ddd-dddd",CV:"+238 ddddddddd",KY:"+1 (ddd) ddd-dddd",CF:"+236 ddddddddd",TD:"+235 ddddddddd",CL:"+56 ddddddddd",CN:"+86 ddddddddd",CX:"+61 ddddddddd",CC:"+61 ddddddddd",CO:"+57 ddddddddd",KM:"+269 ddddddddd",CG:"+242 ddddddddd",CK:"+682 ddddddddd",CR:"+506 ddddddddd",HR:"+385 ddddddddd",CU:"+53 ddddddddd",CY:"+357 ddddddddd",CZ:"+420 ddddddddd",CD:"+243 ddddddddd",DK:"+45 ddddddddd",DJ:"+253 ddddddddd",DM:"+1 (ddd) ddd-dddd",DO:"+1 (ddd) ddd-dddd",TL:"+670 ddddddddd",EC:"+593 ddddddddd",EG:"+20 ddddddddd",SV:"+503 ddddddddd",GQ:"+240 ddddddddd",ER:"+291 ddddddddd",EE:"+372 ddddddddd",ET:"+251 ddddddddd",FO:"+298 ddddddddd",FK:"+500 ddddddddd",FJ:"+679 ddddddddd",FI:"+358 ddddddddd",MK:"+389 ddddddddd",FR:"+33 d dd dd dd dd",GF:"+594 ddddddddd",PF:"+689 ddddddddd",TF:"+262 ddddddddd",GA:"+241 ddddddddd",GE:"+995 ddddddddd",DE:"+49 ddddddddd",GH:"+233 ddddddddd",GI:"+350 ddddddddd",GR:"+30 ddddddddd",GL:"+299 ddddddddd",GD:"+1 (ddd) ddd-dddd",GP:"+590 ddddddddd",GU:"+1 (ddd) ddd-dddd",GT:"+502 ddddddddd",GN:"+224 ddddddddd",GW:"+245 ddddddddd",GY:"+592 ddddddddd",HT:"+509 ddddddddd",HM:"+0 ddddddddd",HN:"+504 ddddddddd",HK:"+852 ddddddddd",HU:"+36 ddddddddd",IS:"+354 ddddddddd",IN:"+91 ddddddddd",ID:"+62 ddddddddd",IR:"+98 ddddddddd",IQ:"+964 ddddddddd",IE:"+353 ddddddddd",IL:"+972 ddddddddd",IT:"+39 ddddddddd",JM:"+1 (ddd) ddd-dddd",JP:"+81 ddddddddd",JO:"+962 ddddddddd",KZ:"+7 ddddddddd",KE:"+254 ddddddddd",KI:"+686 ddddddddd",KW:"+965 ddddddddd",KG:"+996 ddddddddd",LA:"+856 ddddddddd",LV:"+371 ddddddddd",LB:"+961 ddddddddd",LS:"+266 ddddddddd",LR:"+231 ddddddddd",LY:"+218 ddddddddd",LI:"+423 ddddddddd",LT:"+370 ddddddddd",LU:"+352 ddddddddd",MO:"+853 ddddddddd",MG:"+261 ddddddddd",MW:"+265 ddddddddd",MY:"+60 ddddddddd",MV:"+960 ddddddddd",ML:"+223 ddddddddd",MT:"+356 ddddddddd",MH:"+692 ddddddddd",MQ:"+596 ddddddddd",MR:"+222 ddddddddd",MU:"+230 ddddddddd",YT:"+262 ddddddddd",MX:"+52 ddddddddd",FM:"+691 ddddddddd",MD:"+373 ddddddddd",MC:"+377 ddddddddd",MN:"+976 ddddddddd",MS:"+1 (ddd) ddd-dddd",MA:"+212 ddddddddd",MZ:"+258 ddddddddd",MM:"+95 ddddddddd",NA:"+264 ddddddddd",NR:"+674 ddddddddd",NP:"+977 ddddddddd",NL:"+31 ddddddddd",AN:"+599 ddddddddd",NC:"+687 ddddddddd",NZ:"+64 ddddddddd",NI:"+505 ddddddddd",NE:"+227 ddddddddd",NG:"+234 ddddddddd",NU:"+683 ddddddddd",NF:"+672 ddddddddd",KP:"+850 ddddddddd",MP:"+1 (ddd) ddd-dddd",NO:"+47 ddddddddd",OM:"+968 ddddddddd",PK:"+92 ddddddddd",PW:"+680 ddddddddd",PA:"+507 ddddddddd",PG:"+675 ddddddddd",PY:"+595 ddddddddd",PE:"+51 ddddddddd",PH:"+63 ddddddddd",PN:"+870 ddddddddd",PL:"+48 ddddddddd",PT:"+351 ddddddddd",PR:"+1 (ddd) ddd-dddd",QA:"+974 ddddddddd",RE:"+262 ddddddddd",RO:"+40 ddddddddd",RU:"+7 ddddddddd",RW:"+250 ddddddddd",ST:"+239 ddddddddd",SH:"+290 ddddddddd",KN:"+1 (ddd) ddd-dddd",LC:"+1 (ddd) ddd-dddd",PM:"+508 ddddddddd",VC:"+1 (ddd) ddd-dddd",WS:"+685 ddddddddd",SM:"+378 ddddddddd",SA:"+966 ddddddddd",SN:"+221 ddddddddd",SC:"+248 ddddddddd",SL:"+232 ddddddddd",SG:"+65 ddddddddd",SK:"+421 ddddddddd",SI:"+386 ddddddddd",SB:"+677 ddddddddd",SO:"+252 ddddddddd",ZA:"+27 ddddddddd",GS:"+0 ddddddddd",KR:"+82 ddddddddd",ES:"+34 ddddddddd",LK:"+94 ddddddddd",SD:"+249 ddddddddd",SR:"+597 ddddddddd",SJ:"+0 ddddddddd",SZ:"+268 ddddddddd",SE:"+46 ddddddddd",CH:"+41 ddddddddd",SY:"+963 ddddddddd",TW:"+886 ddddddddd",TJ:"+992 ddddddddd",TZ:"+255 ddddddddd",TH:"+66 ddddddddd",BS:"+1 (ddd) ddd-dddd",GM:"+220 ddddddddd",TG:"+228 ddddddddd",TK:"+690 ddddddddd",TO:"+676 ddddddddd",TT:"+1 (ddd) ddd-dddd",TN:"+216 ddddddddd",TR:"+90 ddddddddd",TM:"+993 ddddddddd",TC:"+1 (ddd) ddd-dddd",TV:"+688 ddddddddd",VI:"+1 (ddd) ddd-dddd",UG:"+256 ddddddddd",UA:"+380 ddddddddd",AE:"+971 ddddddddd",GB:"+44 (ddd) dddd dddd",US:"+1 (ddd) ddd-dddd",UM:"+0 ddddddddd",UY:"+598 ddddddddd",UZ:"+998 ddddddddd",VU:"+678 ddddddddd",VA:"+39 ddddddddd",VE:"+58 ddddddddd",VN:"+84 ddddddddd",WF:"+681 ddddddddd",EH:"+0 ddddddddd",YE:"+967 ddddddddd",YU:"+0 ddddddddd",ZM:"+260 ddddddddd",ZW:"+263 ddddddddd"},BFHStatesList={AF:{1:{code:"BAL",name:"Balkh"},2:{code:"BAM",name:"Bamian"},3:{code:"BDG",name:"Badghis"},4:{code:"BDS",name:"Badakhshan"},5:{code:"BGL",name:"Baghlan"},6:{code:"FRA",name:"Farah"},7:{code:"FYB",name:"Faryab"},8:{code:"GHA",name:"Ghazni"},9:{code:"GHO",name:"Ghowr"},10:{code:"HEL",name:"Helmand"},11:{code:"HER",name:"Herat"},12:{code:"JOW",name:"Jowzjan"},13:{code:"KAB",name:"Kabul"},14:{code:"KAN",name:"Kandahar"},15:{code:"KAP",name:"Kapisa"},16:{code:"KDZ",name:"Kondoz"},17:{code:"KHO",name:"Khost"},18:{code:"KNR",name:"Konar"},19:{code:"LAG",name:"Laghman"},20:{code:"LOW",name:"Lowgar"},21:{code:"NAN",name:"Nangrahar"},22:{code:"NIM",name:"Nimruz"},23:{code:"NUR",name:"Nurestan"},24:{code:"ORU",name:"Oruzgan"},25:{code:"PAR",name:"Parwan"},26:{code:"PIA",name:"Paktia"},27:{code:"PKA",name:"Paktika"},28:{code:"SAM",name:"Samangan"},29:{code:"SAR",name:"Sar-e Pol"},30:{code:"TAK",name:"Takhar"},31:{code:"WAR",name:"Wardak"},32:{code:"ZAB",name:"Zabol"}},AL:{1:{code:"BR",name:"Berat"},2:{code:"BU",name:"Bulqize"},3:{code:"DI",name:"Diber"},4:{code:"DL",name:"Delvine"},5:{code:"DR",name:"Durres"},6:{code:"DV",name:"Devoll"},7:{code:"EL",name:"Elbasan"},8:{code:"ER",name:"Kolonje"},9:{code:"FR",name:"Fier"},10:{code:"GJ",name:"Gjirokaster"},11:{code:"GR",name:"Gramsh"},12:{code:"HA",name:"Has"},13:{code:"KA",name:"Kavaje"},14:{code:"KB",name:"Kurbin"},15:{code:"KC",name:"Kucove"},16:{code:"KO",name:"Korce"},17:{code:"KR",name:"Kruje"},18:{code:"KU",name:"Kukes"},19:{code:"LB",name:"Librazhd"},20:{code:"LE",name:"Lezhe"},21:{code:"LU",name:"Lushnje"},22:{code:"MK",name:"Mallakaster"},23:{code:"MM",name:"Malesi e Madhe"},24:{code:"MR",name:"Mirdite"},25:{code:"MT",name:"Mat"},26:{code:"PG",name:"Pogradec"},27:{code:"PQ",name:"Peqin"},28:{code:"PR",name:"Permet"},29:{code:"PU",name:"Puke"},30:{code:"SH",name:"Shkoder"},31:{code:"SK",name:"Skrapar"},32:{code:"SR",name:"Sarande"},33:{code:"TE",name:"Tepelene"},34:{code:"TP",name:"Tropoje"},35:{code:"TR",name:"Tirane"},36:{code:"VL",name:"Vlore"}},DZ:{1:{code:"ADE",name:"Ain Defla"},2:{code:"ADR",name:"Adrar"},3:{code:"ALG",name:"Alger"},4:{code:"ANN",name:"Annaba"},5:{code:"ATE",name:"Ain Temouchent"},6:{code:"BAT",name:"Batna"},7:{code:"BBA",name:"Bordj Bou Arreridj"},8:{code:"BEC",name:"Bechar"},9:{code:"BEJ",name:"Bejaia"},10:{code:"BIS",name:"Biskra"},11:{code:"BLI",name:"Blida"},12:{code:"BMD",name:"Boumerdes"},13:{code:"BOA",name:"Bouira"},14:{code:"CHL",name:"Chlef"},15:{code:"CON",name:"Constantine"},16:{code:"DJE",name:"Djelfa"},17:{code:"EBA",name:"El Bayadh"},18:{code:"EOU",name:"El Oued"},19:{code:"ETA",name:"El Tarf"},20:{code:"GHA",name:"Ghardaia"},21:{code:"GUE",name:"Guelma"},22:{code:"ILL",name:"Illizi"},23:{code:"JIJ",name:"Jijel"},24:{code:"KHE",name:"Khenchela"},25:{code:"LAG",name:"Laghouat"},26:{code:"MED",name:"Medea"},27:{code:"MIL",name:"Mila"},28:{code:"MOS",name:"Mostaganem"},29:{code:"MSI",name:"M'Sila"},30:{code:"MUA",name:"Muaskar"},31:{code:"NAA",name:"Naama"},32:{code:"OEB",name:"Oum el-Bouaghi"},33:{code:"ORA",name:"Oran"},34:{code:"OUA",name:"Ouargla"},35:{code:"REL",name:"Relizane"},36:{code:"SAH",name:"Souk Ahras"},37:{code:"SAI",name:"Saida"},38:{code:"SBA",name:"Sidi Bel Abbes"},39:{code:"SET",name:"Setif"},40:{code:"SKI",name:"Skikda"},41:{code:"TAM",name:"Tamanghasset"},42:{code:"TEB",name:"Tebessa"},43:{code:"TIA",name:"Tiaret"},44:{code:"TIN",name:"Tindouf"},45:{code:"TIP",name:"Tipaza"},46:{code:"TIS",name:"Tissemsilt"},47:{code:"TLE",name:"Tlemcen"},48:{code:"TOU",name:"Tizi Ouzou"}},AS:{1:{code:"E",name:"Eastern"},2:{code:"M",name:"Manu'a"},3:{code:"R",name:"Rose Island"},4:{code:"S",name:"Swains Island"},5:{code:"W",name:"Western"}},AD:{1:{code:"ALV",name:"Andorra la Vella"},2:{code:"CAN",name:"Canillo"},3:{code:"ENC",name:"Encamp"},4:{code:"ESE",name:"Escaldes-Engordany"},5:{code:"LMA",name:"La Massana"},6:{code:"ORD",name:"Ordino"},7:{code:"SJL",name:"Sant Julià de Lòria"}},AO:{1:{code:"BGO",name:"Bengo"},2:{code:"BGU",name:"Benguela"},3:{code:"BIE",name:"Bie"},4:{code:"CAB",name:"Cabinda"},5:{code:"CCU",name:"Cuando-Cubango"},6:{code:"CNO",name:"Cuanza Norte"},7:{code:"CUS",name:"Cuanza Sul"},8:{code:"CNN",name:"Cunene"},9:{code:"HUA",name:"Huambo"},10:{code:"HUI",name:"Huila"},11:{code:"LUA",name:"Luanda"},12:{code:"LNO",name:"Lunda Norte"},13:{code:"LSU",name:"Lunda Sul"},14:{code:"MAL",name:"Malange"},15:{code:"MOX",name:"Moxico"},16:{code:"NAM",name:"Namibe"},17:{code:"UIG",name:"Uige"},18:{code:"ZAI",name:"Zaire"}},AI:{1:{code:"ANG",name:"Anguillita"},2:{code:"ANG",name:"Anguila"},3:{code:"DOG",name:"Dog"},4:{code:"LIT",name:"Little Scrub"},5:{code:"PRI",name:"Prickly Pear"},6:{code:"SAN",name:"Sandy"},7:{code:"SCR",name:"Scrub"},8:{code:"SEA",name:"Seal"},9:{code:"SOM",name:"Sombrero"}},AQ:{1:{code:"ASG",name:"Saint George"},2:{code:"ASH",name:"Saint Philip"},3:{code:"ASJ",name:"Saint John"},4:{code:"ASL",name:"Saint Paul"},5:{code:"ASM",name:"Saint Mary"},6:{code:"ASR",name:"Saint Peter"},7:{code:"BAR",name:"Barbuda"},8:{code:"RED",name:"Redonda"}},AR:{1:{code:"AN",name:"Antartida e Islas del Atlantico"},2:{code:"BA",name:"Buenos Aires"},3:{code:"CA",name:"Catamarca"},4:{code:"CH",name:"Chaco"},5:{code:"CU",name:"Chubut"},6:{code:"CO",name:"Cordoba"},7:{code:"CR",name:"Corrientes"},8:{code:"CF",name:"Capital Federal"},9:{code:"ER",name:"Entre Rios"},10:{code:"FO",name:"Formosa"},11:{code:"JU",name:"Jujuy"},12:{code:"LP",name:"La Pampa"},13:{code:"LR",name:"La Rioja"},14:{code:"ME",name:"Mendoza"},15:{code:"MI",name:"Misiones"},16:{code:"NE",name:"Neuquen"},17:{code:"RN",name:"Rio Negro"},18:{code:"SA",name:"Salta"},19:{code:"SJ",name:"San Juan"},20:{code:"SL",name:"San Luis"},21:{code:"SC",name:"Santa Cruz"},22:{code:"SF",name:"Santa Fe"},23:{code:"SD",name:"Santiago del Estero"},24:{code:"TF",name:"Tierra del Fuego"},25:{code:"TU",name:"Tucuman"}},AM:{1:{code:"AGT",name:"Aragatsotn"},2:{code:"ARR",name:"Ararat"},3:{code:"ARM",name:"Armavir"},4:{code:"GEG",name:"Geghark 'unik'"},5:{code:"KOT",name:"Kotayk'"},6:{code:"LOR",name:"Lorri"},7:{code:"SHI",name:"Shirak"},8:{code:"SYU",name:"Syunik'"},9:{code:"TAV",name:"Tavush"},10:{code:"VAY",name:"Vayots' Dzor"},11:{code:"YER",name:"Yerevan"}},AW:{1:{code:"ARU",name:"Aruba"},2:{code:"DRU",name:"Druif Beach"},3:{code:"MAN",name:"Manchebo Beach"},4:{code:"NOO",name:"Noord"},5:{code:"ORA",name:"Oranjestad"},6:{code:"PAL",name:"Palm Beach"},7:{code:"ROO",name:"Rooi Thomas"},8:{code:"SIN",name:"Sint Nicolaas"},9:{code:"SIN",name:"Sint Nicolas"},10:{code:"WAY",name:"Wayaca"}},AU:{1:{code:"ACT",name:"Australian Capital Territory"},2:{code:"NSW",name:"New South Wales"},3:{code:"NT",name:"Northern Territory"},4:{code:"QLD",name:"Queensland"},5:{code:"SA",name:"South Australia"},6:{code:"TAS",name:"Tasmania"},7:{code:"VIC",name:"Victoria"},8:{code:"WA",name:"Western Australia"}},AT:{1:{code:"BUR",name:"Burgenland"},2:{code:"KAR",name:"Krnten"},3:{code:"NOS",name:"Niederöesterreich"},4:{code:"OOS",name:"Oberöesterreich"},5:{code:"SAL",name:"Salzburg"},6:{code:"STE",name:"Steiermark"},7:{code:"TIR",name:"Tirol"},8:{code:"VOR",name:"Vorarlberg"},9:{code:"WIE",name:"Wien"}},AZ:{1:{code:"AB",name:"Ali Bayramli"},2:{code:"ABS",name:"Abseron"},3:{code:"AGC",name:"AgcabAdi"},4:{code:"AGM",name:"Agdam"},5:{code:"AGS",name:"Agdas"},6:{code:"AGA",name:"Agstafa"},7:{code:"AGU",name:"Agsu"},8:{code:"AST",name:"Astara"},9:{code:"BA",name:"Baki"},10:{code:"BAB",name:"BabAk"},11:{code:"BAL",name:"BalakAn"},12:{code:"BAR",name:"BArdA"},13:{code:"BEY",name:"Beylaqan"},14:{code:"BIL",name:"Bilasuvar"},15:{code:"CAB",name:"Cabrayil"},16:{code:"CAL",name:"Calilabab"},17:{code:"CUL",name:"Culfa"},18:{code:"DAS",name:"Daskasan"},19:{code:"DAV",name:"Davaci"},20:{code:"FUZ",name:"Fuzuli"},21:{code:"GA",name:"Ganca"},22:{code:"GAD",name:"Gadabay"},23:{code:"GOR",name:"Goranboy"},24:{code:"GOY",name:"Goycay"},25:{code:"HAC",name:"Haciqabul"},26:{code:"IMI",name:"Imisli"},27:{code:"ISM",name:"Ismayilli"},28:{code:"KAL",name:"Kalbacar"},29:{code:"KUR",name:"Kurdamir"},30:{code:"LA",name:"Lankaran"},31:{code:"LAC",name:"Lacin"},32:{code:"LAN",name:"Lankaran"},33:{code:"LER",name:"Lerik"},34:{code:"MAS",name:"Masalli"},35:{code:"MI",name:"Mingacevir"},36:{code:"NA",name:"Naftalan"},37:{code:"NX",name:"Naxcivan"},38:{code:"NEF",name:"Neftcala"},39:{code:"OGU",name:"Oguz"},40:{code:"ORD",name:"Ordubad"},41:{code:"QAB",name:"Qabala"},42:{code:"QAX",name:"Qax"},43:{code:"QAZ",name:"Qazax"},44:{code:"QOB",name:"Qobustan"},45:{code:"QBA",name:"Quba"},46:{code:"QBI",name:"Qubadli"},47:{code:"QUS",name:"Qusar"},48:{code:"SA",name:"Saki"},49:{code:"SAT",name:"Saatli"},50:{code:"SAB",name:"Sabirabad"},51:{code:"SAD",name:"Sadarak"},52:{code:"SAH",name:"Sahbuz"},53:{code:"SAK",name:"Saki"},54:{code:"SAL",name:"Salyan"},55:{code:"SM",name:"Sumqayit"},56:{code:"SMI",name:"Samaxi"},57:{code:"SKR",name:"Samkir"},58:{code:"SMX",name:"Samux"},59:{code:"SAR",name:"Sarur"},60:{code:"SIY",name:"Siyazan"},61:{code:"SS",name:"Susa"},62:{code:"SUS",name:"Susa"},63:{code:"TAR",name:"Tartar"},64:{code:"TOV",name:"Tovuz"},65:{code:"UCA",name:"Ucar"},66:{code:"XA",name:"Xankandi"},67:{code:"XAC",name:"Xacmaz"},68:{code:"XAN",name:"Xanlar"},69:{code:"XIZ",name:"Xizi"},70:{code:"XCI",name:"Xocali"},71:{code:"XVD",name:"Xocavand"},72:{code:"YAR",name:"Yardimli"},73:{code:"YEV",name:"Yevlax"},74:{code:"ZAN",name:"Zangilan"},75:{code:"ZAQ",name:"Zaqatala"},76:{code:"ZAR",name:"Zardab"}},BS:{1:{code:"ACK",name:"Acklins"},2:{code:"BER",name:"Berry Islands"},3:{code:"BIM",name:"Bimini"},4:{code:"BLK",name:"Black Point"},5:{code:"CAT",name:"Cat Island"},6:{code:"CAB",name:"Central Abaco"},7:{code:"CAN",name:"Central Andros"},8:{code:"CEL",name:"Central Eleuthera"},9:{code:"FRE",name:"City of Freeport"},10:{code:"CRO",name:"Crooked Island"},11:{code:"EGB",name:"East Grand Bahama"},12:{code:"EXU",name:"Exuma"},13:{code:"GRD",name:"Grand Cay"},14:{code:"HAR",name:"Harbour Island"},15:{code:"HOP",name:"Hope Town"},16:{code:"INA",name:"Inagua"},17:{code:"LNG",name:"Long Island"},18:{code:"MAN",name:"Mangrove Cay"},19:{code:"MAY",name:"Mayaguana"},20:{code:"MOO",name:"Moore's Island"},21:{code:"NAB",name:"North Abaco"},22:{code:"NAN",name:"North Andros"},23:{code:"NEL",name:"North Eleuthera"},24:{code:"RAG",name:"Ragged Island"},25:{code:"RUM",name:"Rum Cay"},26:{code:"SAL",name:"San Salvador"},27:{code:"SAB",name:"South Abaco"},28:{code:"SAN",name:"South Andros"},29:{code:"SEL",name:"South Eleuthera"},30:{code:"SWE",name:"Spanish Wells"},31:{code:"WGB",name:"West Grand Bahama"}},BH:{1:{code:"CAP",name:"Capital"},2:{code:"CEN",name:"Central"},3:{code:"MUH",name:"Muharraq"},4:{code:"NOR",name:"Northern"},5:{code:"SOU",name:"Southern"}},BD:{1:{code:"BAR",name:"Barisal"},2:{code:"CHI",name:"Chittagong"},3:{code:"DHA",name:"Dhaka"},4:{code:"KHU",name:"Khulna"},5:{code:"RAJ",name:"Rajshahi"},6:{code:"SYL",name:"Sylhet"}},BB:{1:{code:"CC",name:"Christ Church"},2:{code:"AND",name:"Saint Andrew"},3:{code:"GEO",name:"Saint George"},4:{code:"JAM",name:"Saint James"},5:{code:"JOH",name:"Saint John"},6:{code:"JOS",name:"Saint Joseph"},7:{code:"LUC",name:"Saint Lucy"},8:{code:"MIC",name:"Saint Michael"},9:{code:"PET",name:"Saint Peter"},10:{code:"PHI",name:"Saint Philip"},11:{code:"THO",name:"Saint Thomas"}},BY:{1:{code:"BR",name:"Brestskaya (Brest)"},2:{code:"HO",name:"Homyel'skaya (Homyel')"},3:{code:"HM",name:"Horad Minsk"},4:{code:"HR",name:"Hrodzyenskaya (Hrodna)"},5:{code:"MA",name:"Mahilyowskaya (Mahilyow)"},6:{code:"MI",name:"Minskaya"},7:{code:"VI",name:"Vitsyebskaya (Vitsyebsk)"}},BE:{1:{code:"VAN",name:"Antwerpen"},2:{code:"WBR",name:"Brabant Wallon"},3:{code:"WHT",name:"Hainaut"},4:{code:"WLG",name:"Liege"},5:{code:"VLI",name:"Limburg"},6:{code:"WLX",name:"Luxembourg"},7:{code:"WNA",name:"Namur"},8:{code:"VOV",name:"Oost-Vlaanderen"},9:{code:"VBR",name:"Vlaams Brabant"},10:{code:"VWV",name:"West-Vlaanderen"}},BZ:{1:{code:"BZ",name:"Belize"},2:{code:"CY",name:"Cayo"},3:{code:"CR",name:"Corozal"},4:{code:"OW",name:"Orange Walk"},5:{code:"SC",name:"Stann Creek"},6:{code:"TO",name:"Toledo"}},BJ:{1:{code:"AL",name:"Alibori"},2:{code:"AK",name:"Atakora"},3:{code:"AQ",name:"Atlantique"},4:{code:"BO",name:"Borgou"},5:{code:"CO",name:"Collines"},6:{code:"DO",name:"Donga"},7:{code:"KO",name:"Kouffo"},8:{code:"LI",name:"Littoral"},9:{code:"MO",name:"Mono"},10:{code:"OU",name:"Oueme"},11:{code:"PL",name:"Plateau"},12:{code:"ZO",name:"Zou"}},BM:{1:{code:"DS",name:"Devonshire"},2:{code:"HC",name:"Hamilton City"},3:{code:"HA",name:"Hamilton"},4:{code:"PG",name:"Paget"},5:{code:"PB",name:"Pembroke"},6:{code:"GC",name:"Saint George City"},7:{code:"SG",name:"Saint George's"},8:{code:"SA",name:"Sandys"},9:{code:"SM",name:"Smith's"},10:{code:"SH",name:"Southampton"},11:{code:"WA",name:"Warwick"}},BT:{1:{code:"BUM",name:"Bumthang"},2:{code:"CHU",name:"Chukha"},3:{code:"DAG",name:"Dagana"},4:{code:"GAS",name:"Gasa"},5:{code:"HAA",name:"Haa"},6:{code:"LHU",name:"Lhuntse"},7:{code:"MON",name:"Mongar"},8:{code:"PAR",name:"Paro"},9:{code:"PEM",name:"Pemagatshel"},10:{code:"PUN",name:"Punakha"},11:{code:"SJO",name:"Samdrup Jongkhar"},12:{code:"SAT",name:"Samtse"},13:{code:"SAR",name:"Sarpang"},14:{code:"THI",name:"Thimphu"},15:{code:"TRG",name:"Trashigang"},16:{code:"TRY",name:"Trashiyangste"},17:{code:"TRO",name:"Trongsa"},18:{code:"TSI",name:"Tsirang"},19:{code:"WPH",name:"Wangdue Phodrang"},20:{code:"ZHE",name:"Zhemgang"}},BO:{1:{code:"BEN",name:"Beni"},2:{code:"CHU",name:"Chuquisaca"},3:{code:"COC",name:"Cochabamba"},4:{code:"LPZ",name:"La Paz"},5:{code:"ORU",name:"Oruro"},6:{code:"PAN",name:"Pando"},7:{code:"POT",name:"Potosi"},8:{code:"SCZ",name:"Santa Cruz"},9:{code:"TAR",name:"Tarija"}},BA:{1:{code:"BRO",name:"Brcko district"},2:{code:"FBP",name:"Bosanskopodrinjski Kanton"},3:{code:"FHN",name:"Hercegovacko-neretvanski Kanton"},4:{code:"FPO",name:"Posavski Kanton"},5:{code:"FSA",name:"Kanton Sarajevo"},6:{code:"FSB",name:"Srednjebosanski Kanton"},7:{code:"FTU",name:"Tuzlanski Kanton"},8:{code:"FUS",name:"Unsko-Sanski Kanton"},9:{code:"FZA",name:"Zapadnobosanska"},10:{code:"FZE",name:"Zenicko-Dobojski Kanton"},11:{code:"FZH",name:"Zapadnohercegovacka Zupanija"},12:{code:"SBI",name:"Bijeljina"},13:{code:"SBL",name:"Banja Luka"},14:{code:"SDO",name:"Doboj"},15:{code:"SFO",name:"Foca"},16:{code:"SSR",name:"Sarajevo-Romanija or Sokolac"},17:{code:"STR",name:"Trebinje"},18:{code:"SVL",name:"Vlasenica"}},BW:{1:{code:"CE",name:"Central"},2:{code:"GH",name:"Ghanzi"},3:{code:"KD",name:"Kgalagadi"},4:{code:"KT",name:"Kgatleng"},5:{code:"KW",name:"Kweneng"},6:{code:"NG",name:"Ngamiland"},7:{code:"NE",name:"North East"},8:{code:"NW",name:"North West"},9:{code:"SE",name:"South East"},10:{code:"SO",name:"Southern"}},BR:{1:{code:"AC",name:"Acre"},2:{code:"AL",name:"Alagoas"},3:{code:"AP",name:"Amapa"},4:{code:"AM",name:"Amazonas"},5:{code:"BA",name:"Bahia"},6:{code:"CE",name:"Ceara"},7:{code:"DF",name:"Distrito Federal"},8:{code:"ES",name:"Espirito Santo"},9:{code:"GO",name:"Goias"},10:{code:"MA",name:"Maranhao"},11:{code:"MT",name:"Mato Grosso"},12:{code:"MS",name:"Mato Grosso do Sul"},13:{code:"MG",name:"Minas Gerais"},14:{code:"PA",name:"Para"},15:{code:"PB",name:"Paraiba"},16:{code:"PR",name:"Parana"},17:{code:"PE",name:"Pernambuco"},18:{code:"PI",name:"Piaui"},19:{code:"RJ",name:"Rio de Janeiro"},20:{code:"RN",name:"Rio Grande do Norte"},21:{code:"RS",name:"Rio Grande do Sul"},22:{code:"RO",name:"Rondonia"},23:{code:"RR",name:"Roraima"},24:{code:"SC",name:"Santa Catarina"},25:{code:"SP",name:"Sao Paulo"},26:{code:"SE",name:"Sergipe"},27:{code:"TO",name:"Tocantins"}},IO:{1:{code:"DG",name:"Diego Garcia"},2:{code:"DI",name:"Danger Island"},3:{code:"EA",name:"Eagle Islands"},4:{code:"EG",name:"Egmont Islands"},5:{code:"NI",name:"Nelsons Island"},6:{code:"PB",name:"Peros Banhos"},7:{code:"SI",name:"Salomon Islands"},8:{code:"TB",name:"Three Brothers"}},BN:{1:{code:"BEL",name:"Belait"},2:{code:"BRM",name:"Brunei and Muara"},3:{code:"TEM",name:"Temburong"},4:{code:"TUT",name:"Tutong"}},BG:{1:{code:"BG-01",name:"Blagoevgrad"},2:{code:"BG-02",name:"Burgas"},3:{code:"BG-03",name:"Dobrich"},4:{code:"BG-04",name:"Gabrovo"},5:{code:"BG-05",name:"Haskovo"},6:{code:"BG-06",name:"Kardjali"},7:{code:"BG-07",name:"Kyustendil"},8:{code:"BG-08",name:"Lovech"},9:{code:"BG-09",name:"Montana"},10:{code:"BG-10",name:"Pazardjik"},11:{code:"BG-11",name:"Pernik"},12:{code:"BG-12",name:"Pleven"},13:{code:"BG-13",name:"Plovdiv"},14:{code:"BG-14",name:"Razgrad"},15:{code:"BG-15",name:"Shumen"},16:{code:"BG-16",name:"Silistra"},17:{code:"BG-17",name:"Sliven"},18:{code:"BG-18",name:"Smolyan"},19:{code:"BG-19",name:"Sofia"},20:{code:"BG-20",name:"Sofia - town"},21:{code:"BG-21",name:"Stara Zagora"},22:{code:"BG-22",name:"Targovishte"},23:{code:"BG-23",name:"Varna"},24:{code:"BG-24",name:"Veliko Tarnovo"},25:{code:"BG-25",name:"Vidin"},26:{code:"BG-26",name:"Vratza"},27:{code:"BG-27",name:"Yambol"}},BF:{1:{code:"BAL",name:"Bale"},2:{code:"BAM",name:"Bam"},3:{code:"BAN",name:"Banwa"},4:{code:"BAZ",name:"Bazega"},5:{code:"BOR",name:"Bougouriba"},6:{code:"BLG",name:"Boulgou"},7:{code:"BOK",name:"Boulkiemde"},8:{code:"COM",name:"Comoe"},9:{code:"GAN",name:"Ganzourgou"},10:{code:"GNA",name:"Gnagna"},11:{code:"GOU",name:"Gourma"},12:{code:"HOU",name:"Houet"},13:{code:"IOA",name:"Ioba"},14:{code:"KAD",name:"Kadiogo"},15:{code:"KEN",name:"Kenedougou"},16:{code:"KOD",name:"Komondjari"},17:{code:"KOP",name:"Kompienga"},18:{code:"KOS",name:"Kossi"},19:{code:"KOL",name:"Koulpelogo"},20:{code:"KOT",name:"Kouritenga"},21:{code:"KOW",name:"Kourweogo"},22:{code:"LER",name:"Leraba"},23:{code:"LOR",name:"Loroum"},24:{code:"MOU",name:"Mouhoun"},25:{code:"NAH",name:"Nahouri"},26:{code:"NAM",name:"Namentenga"},27:{code:"NAY",name:"Nayala"},28:{code:"NOU",name:"Noumbiel"},29:{code:"OUB",name:"Oubritenga"},30:{code:"OUD",name:"Oudalan"},31:{code:"PAS",name:"Passore"},32:{code:"PON",name:"Poni"},33:{code:"SAG",name:"Sanguie"},34:{code:"SAM",name:"Sanmatenga"},35:{code:"SEN",name:"Seno"},36:{code:"SIS",name:"Sissili"},37:{code:"SOM",name:"Soum"},38:{code:"SOR",name:"Sourou"},39:{code:"TAP",name:"Tapoa"},40:{code:"TUY",name:"Tuy"},41:{code:"YAG",name:"Yagha"},42:{code:"YAT",name:"Yatenga"},43:{code:"ZIR",name:"Ziro"},44:{code:"ZOD",name:"Zondoma"},45:{code:"ZOW",name:"Zoundweogo"}},BI:{1:{code:"BB",name:"Bubanza"},2:{code:"BJ",name:"Bujumbura"},3:{code:"BR",name:"Bururi"},4:{code:"CA",name:"Cankuzo"},5:{code:"CI",name:"Cibitoke"},6:{code:"GI",name:"Gitega"},7:{code:"KR",name:"Karuzi"},8:{code:"KY",name:"Kayanza"},9:{code:"KI",name:"Kirundo"},10:{code:"MA",name:"Makamba"},11:{code:"MU",name:"Muramvya"},12:{code:"MY",name:"Muyinga"},13:{code:"MW",name:"Mwaro"},14:{code:"NG",name:"Ngozi"},15:{code:"RT",name:"Rutana"},16:{code:"RY",name:"Ruyigi"}},KH:{1:{code:"BA",name:"Battambang"},2:{code:"BM",name:"Banteay Meanchey"},3:{code:"KB",name:"Keb"},4:{code:"KK",name:"Kaoh Kong"},5:{code:"KL",name:"Kandal"},6:{code:"KM",name:"Kampong Cham"},7:{code:"KN",name:"Kampong Chhnang"},8:{code:"KO",name:"Kampong Som"},9:{code:"KP",name:"Kampot"},10:{code:"KR",name:"Kratie"},11:{code:"KT",name:"Kampong Thom"},12:{code:"KU",name:"Kampong Speu"},13:{code:"MK",name:"Mondul Kiri"},14:{code:"OM",name:"Oddar Meancheay"},15:{code:"PA",name:"Pailin"},16:{code:"PG",name:"Prey Veng"},17:{code:"PP",name:"Phnom Penh"},18:{code:"PR",name:"Preah Vihear"},19:{code:"PS",name:"Preah Seihanu (Kompong Som or Si)"},20:{code:"PU",name:"Pursat"},21:{code:"RK",name:"Ratanak Kiri"},22:{code:"SI",name:"Siemreap"},23:{code:"SR",name:"Svay Rieng"},24:{code:"ST",name:"Stung Treng"},25:{code:"TK",name:"Takeo"}},CM:{1:{code:"ADA",name:"Adamawa (Adamaoua)"},2:{code:"CEN",name:"Centre"},3:{code:"EST",name:"East (Est)"},4:{code:"EXN",name:"Extrême-Nord"},5:{code:"LIT",name:"Littoral"},6:{code:"NOR",name:"North (Nord)"},7:{code:"NOT",name:"Northwest (Nord-Ouest)"},8:{code:"OUE",name:"West (Ouest)"},9:{code:"SUD",name:"South (Sud)"},10:{code:"SOU",name:"Southwest (Sud-Ouest)"}},CA:{1:{code:"AB",name:"Alberta"},2:{code:"BC",name:"British Columbia"},3:{code:"MB",name:"Manitoba"},4:{code:"NB",name:"New Brunswick"},5:{code:"NL",name:"Newfoundland and Labrador"},6:{code:"NT",name:"Northwest Territories"},7:{code:"NS",name:"Nova Scotia"},8:{code:"NU",name:"Nunavut"},9:{code:"ON",name:"Ontario"},10:{code:"PE",name:"Prince Edward Island"},11:{code:"QC",name:"Québec"},12:{code:"SK",name:"Saskatchewan"},13:{code:"YT",name:"Yukon Territory"}},CV:{1:{code:"BV",name:"Boa Vista"},2:{code:"BR",name:"Brava"},3:{code:"CS",name:"Calheta de Sao Miguel"},4:{code:"MA",name:"Maio"},5:{code:"MO",name:"Mosteiros"},6:{code:"PA",name:"Paul"},7:{code:"PN",name:"Porto Novo"},8:{code:"PR",name:"Praia"},9:{code:"RG",name:"Ribeira Grande"},10:{code:"SL",name:"Sal"},11:{code:"CA",name:"Santa Catarina"},12:{code:"CR",name:"Santa Cruz"},13:{code:"SD",name:"Sao Domingos"},14:{code:"SF",name:"Sao Filipe"},15:{code:"SN",name:"Sao Nicolau"},16:{code:"SV",name:"Sao Vicente"},17:{code:"TA",name:"Tarrafal"}},KY:{1:{code:"CR",name:"Creek"},2:{code:"EA",name:"Eastern"},3:{code:"ML",name:"Midland"},4:{code:"ST",name:"South Town"},5:{code:"SP",name:"Spot Bay"},6:{code:"SK",name:"Stake Bay"},7:{code:"WD",name:"West End"},8:{code:"WN",name:"Western"}},CF:{1:{code:"BAN",name:"Bangui"},2:{code:"BBA",name:"Bamingui-Bangoran"},3:{code:"BKO",name:"Basse-Kotto"},4:{code:"HKO",name:"Haute-Kotto"},5:{code:"HMB",name:"Haut-Mbomou"},6:{code:"KEM",name:"Kemo"},7:{code:"LOB",name:"Lobaye"},8:{code:"MBO",name:"Mbomou"},9:{code:"MKD",name:"Mambéré-Kadéï"},10:{code:"NGR",name:"Nana-Grebizi"},11:{code:"NMM",name:"Nana-Mambere"},12:{code:"OMP",name:"Ombella-M'Poko"},13:{code:"OPE",name:"Ouham-Pende"},14:{code:"OUH",name:"Ouham"},15:{code:"OUK",name:"Ouaka"},16:{code:"SMB",name:"Sangha-Mbaere"},17:{code:"VAK",name:"Vakaga"}},TD:{1:{code:"BA",name:"Batha"},2:{code:"BI",name:"Biltine"},3:{code:"BE",name:"Borkou-Ennedi-Tibesti"},4:{code:"CB",name:"Chari-Baguirmi"},5:{code:"GU",name:"Guera"},6:{code:"KA",name:"Kanem"},7:{code:"LA",name:"Lac"},8:{code:"LC",name:"Logone Occidental"},9:{code:"LR",name:"Logone Oriental"},10:{code:"MK",name:"Mayo-Kebbi"},11:{code:"MC",name:"Moyen-Chari"},12:{code:"OU",name:"Ouaddai"},13:{code:"SA",name:"Salamat"},14:{code:"TA",name:"Tandjile"}},CL:{1:{code:"AI",name:"Aisen del General Carlos Ibanez"},2:{code:"AN",name:"Antofagasta"},3:{code:"AR",name:"Araucania"},4:{code:"AT",name:"Atacama"},5:{code:"BI",name:"Bio-Bio"},6:{code:"CO",name:"Coquimbo"},7:{code:"LI",name:"Libertador General Bernardo O'Hi"},8:{code:"LL",name:"Los Lagos"},9:{code:"MA",name:"Magallanes y de la Antartica Chi"},10:{code:"ML",name:"Maule"},11:{code:"RM",name:"Region Metropolitana"},12:{code:"TA",name:"Tarapaca"},13:{code:"VS",name:"Valparaiso"}},CN:{1:{code:"AN",name:"Anhui"},2:{code:"BE",name:"Beijing"},3:{code:"CH",name:"Chongqing"},4:{code:"FU",name:"Fujian"},5:{code:"GA",name:"Gansu"},6:{code:"GU",name:"Guangdong"},7:{code:"GX",name:"Guangxi"},8:{code:"GZ",name:"Guizhou"},9:{code:"HA",name:"Hainan"},10:{code:"HB",name:"Hebei"},11:{code:"HL",name:"Heilongjiang"},12:{code:"HE",name:"Henan"},13:{code:"HK",name:"Hong Kong"},14:{code:"HU",name:"Hubei"},15:{code:"HN",name:"Hunan"},16:{code:"IM",name:"Inner Mongolia"},17:{code:"JI",name:"Jiangsu"},18:{code:"JX",name:"Jiangxi"},19:{code:"JL",name:"Jilin"},20:{code:"LI",name:"Liaoning"},21:{code:"MA",name:"Macau"},22:{code:"NI",name:"Ningxia"},23:{code:"SH",name:"Shaanxi"},24:{code:"SA",name:"Shandong"},25:{code:"SG",name:"Shanghai"},26:{code:"SX",name:"Shanxi"},27:{code:"SI",name:"Sichuan"},28:{code:"TI",name:"Tianjin"},29:{code:"XI",name:"Xinjiang"},30:{code:"YU",name:"Yunnan"},31:{code:"ZH",name:"Zhejiang"}},CC:{1:{code:"D",name:"Direction Island"},2:{code:"H",name:"Home Island"},3:{code:"O",name:"Horsburgh Island"},4:{code:"S",name:"South Island"},5:{code:"W",name:"West Island"}},CO:{1:{code:"AMZ",name:"Amazonas"},2:{code:"ANT",name:"Antioquia"},3:{code:"ARA",name:"Arauca"},4:{code:"ATL",name:"Atlantico"},5:{code:"BDC",name:"Bogota D.C."},6:{code:"BOL",name:"Bolivar"},7:{code:"BOY",name:"Boyaca"},8:{code:"CAL",name:"Caldas"},9:{code:"CAQ",name:"Caqueta"},10:{code:"CAS",name:"Casanare"},11:{code:"CAU",name:"Cauca"},12:{code:"CES",name:"Cesar"},13:{code:"CHO",name:"Choco"},14:{code:"COR",name:"Cordoba"},15:{code:"CAM",name:"Cundinamarca"},16:{code:"GNA",name:"Guainia"},17:{code:"GJR",name:"Guajira"},18:{code:"GVR",name:"Guaviare"},19:{code:"HUI",name:"Huila"},20:{code:"MAG",name:"Magdalena"},21:{code:"MET",name:"Meta"},22:{code:"NAR",name:"Narino"},23:{code:"NDS",name:"Norte de Santander"},24:{code:"PUT",name:"Putumayo"},25:{code:"QUI",name:"Quindio"},26:{code:"RIS",name:"Risaralda"},27:{code:"SAP",name:"San Andres y Providencia"},28:{code:"SAN",name:"Santander"},29:{code:"SUC",name:"Sucre"},30:{code:"TOL",name:"Tolima"},31:{code:"VDC",name:"Valle del Cauca"},32:{code:"VAU",name:"Vaupes"},33:{code:"VIC",name:"Vichada"}},KM:{1:{code:"G",name:"Grande Comore"},2:{code:"A",name:"Anjouan"},3:{code:"M",name:"Moheli"}},CG:{1:{code:"BO",name:"Bouenza"},2:{code:"BR",name:"Brazzaville"},3:{code:"CU",name:"Cuvette"},4:{code:"CO",name:"Cuvette-Ouest"},5:{code:"KO",name:"Kouilou"},6:{code:"LE",name:"Lekoumou"},7:{code:"LI",name:"Likouala"},8:{code:"NI",name:"Niari"},9:{code:"PL",name:"Plateaux"},10:{code:"PO",name:"Pool"},11:{code:"SA",name:"Sangha"}},CK:{1:{code:"AI",name:"Aitutaki"},2:{code:"AT",name:"Atiu"},3:{code:"MA",name:"Manuae"},4:{code:"MG",name:"Mangaia"},5:{code:"MK",name:"Manihiki"},6:{code:"MT",name:"Mitiaro"},7:{code:"MU",name:"Mauke"},8:{code:"NI",name:"Nassau Island"},9:{code:"PA",name:"Palmerston"},10:{code:"PE",name:"Penrhyn"},11:{code:"PU",name:"Pukapuka"},12:{code:"RK",name:"Rakahanga"},13:{code:"RR",name:"Rarotonga"},14:{code:"SU",name:"Surwarrow"},15:{code:"TA",name:"Takutea"}},CR:{1:{code:"AL",name:"Alajuela"},2:{code:"CA",name:"Cartago"},3:{code:"GU",name:"Guanacaste"},4:{code:"HE",name:"Heredia"},5:{code:"LI",name:"Limon"},6:{code:"PU",name:"Puntarenas"},7:{code:"SJ",name:"San Jose"}},CI:{1:{code:"ABE",name:"Abengourou"},2:{code:"ABI",name:"Abidjan"},3:{code:"ABO",name:"Aboisso"},4:{code:"ADI",name:"Adiake"},5:{code:"ADZ",name:"Adzope"},6:{code:"AGB",name:"Agboville"},7:{code:"AGN",name:"Agnibilekrou"},8:{code:"ALE",name:"Alepe"},9:{code:"BOC",name:"Bocanda"},10:{code:"BAN",name:"Bangolo"},11:{code:"BEO",name:"Beoumi"},12:{code:"BIA",name:"Biankouma"},13:{code:"BDK",name:"Bondoukou"},14:{code:"BGN",name:"Bongouanou"},15:{code:"BFL",name:"Bouafle"},16:{code:"BKE",name:"Bouake"},17:{code:"BNA",name:"Bouna"},18:{code:"BDL",name:"Boundiali"},19:{code:"DKL",name:"Dabakala"},20:{code:"DBU",name:"Dabou"},21:{code:"DAL",name:"Daloa"},22:{code:"DAN",name:"Danane"},23:{code:"DAO",name:"Daoukro"},24:{code:"DIM",name:"Dimbokro"},25:{code:"DIV",name:"Divo"},26:{code:"DUE",name:"Duekoue"},27:{code:"FER",name:"Ferkessedougou"},28:{code:"GAG",name:"Gagnoa"},29:{code:"GBA",name:"Grand-Bassam"},30:{code:"GLA",name:"Grand-Lahou"},31:{code:"GUI",name:"Guiglo"},32:{code:"ISS",name:"Issia"},33:{code:"JAC",name:"Jacqueville"},34:{code:"KAT",name:"Katiola"},35:{code:"KOR",name:"Korhogo"},36:{code:"LAK",name:"Lakota"},37:{code:"MAN",name:"Man"},38:{code:"MKN",name:"Mankono"},39:{code:"MBA",name:"Mbahiakro"},40:{code:"ODI",name:"Odienne"},41:{code:"OUM",name:"Oume"},42:{code:"SAK",name:"Sakassou"},43:{code:"SPE",name:"San-Pedro"},44:{code:"SAS",name:"Sassandra"},45:{code:"SEG",name:"Seguela"},46:{code:"SIN",name:"Sinfra"},47:{code:"SOU",name:"Soubre"},48:{code:"TAB",name:"Tabou"},49:{code:"TAN",name:"Tanda"},50:{code:"TIE",name:"Tiebissou"},51:{code:"TIN",name:"Tingrela"},52:{code:"TIA",name:"Tiassale"},53:{code:"TBA",name:"Touba"},54:{code:"TLP",name:"Toulepleu"},55:{code:"TMD",name:"Toumodi"},56:{code:"VAV",name:"Vavoua"},57:{code:"YAM",name:"Yamoussoukro"},58:{code:"ZUE",name:"Zuenoula"}},HR:{1:{code:"BB",name:"Bjelovar-Bilogora"},2:{code:"CZ",name:"City of Zagreb"},3:{code:"DN",name:"Dubrovnik-Neretva"},4:{code:"IS",name:"Istra"},5:{code:"KA",name:"Karlovac"},6:{code:"KK",name:"Koprivnica-Krizevci"},7:{code:"KZ",name:"Krapina-Zagorje"},8:{code:"LS",name:"Lika-Senj"},9:{code:"ME",name:"Medimurje"},10:{code:"OB",name:"Osijek-Baranja"},11:{code:"PS",name:"Pozega-Slavonia"},12:{code:"PG",name:"Primorje-Gorski Kotar"},13:{code:"SI",name:"Sibenik"},14:{code:"SM",name:"Sisak-Moslavina"},15:{code:"SB",name:"Slavonski Brod-Posavina"},16:{code:"SD",name:"Split-Dalmatia"},17:{code:"VA",name:"Varazdin"},18:{code:"VP",name:"Virovitica-Podravina"},19:{code:"VS",name:"Vukovar-Srijem"},20:{code:"ZK",name:"Zadar-Knin"},21:{code:"ZA",name:"Zagreb"}},CU:{1:{code:"CA",name:"Camaguey"},2:{code:"CD",name:"Ciego de Avila"},3:{code:"CI",name:"Cienfuegos"},4:{code:"CH",name:"Ciudad de La Habana"},5:{code:"GR",name:"Granma"},6:{code:"GU",name:"Guantanamo"},7:{code:"HO",name:"Holguin"},8:{code:"IJ",name:"Isla de la Juventud"},9:{code:"LH",name:"La Habana"},10:{code:"LT",name:"Las Tunas"},11:{code:"MA",name:"Matanzas"},12:{code:"PR",name:"Pinar del Rio"},13:{code:"SS",name:"Sancti Spiritus"},14:{code:"SC",name:"Santiago de Cuba"},15:{code:"VC",name:"Villa Clara"}},CY:{1:{code:"F",name:"Famagusta"},2:{code:"K",name:"Kyrenia"},3:{code:"A",name:"Larnaca"},4:{code:"I",name:"Limassol"},5:{code:"N",name:"Nicosia"},6:{code:"P",name:"Paphos"}},CZ:{1:{code:"A",name:"Hlavní město Praha"},2:{code:"B",name:"Jihomoravský"},3:{code:"C",name:"Jihočeský"},4:{code:"E",name:"Pardubický"},5:{code:"H",name:"Královéhradecký"},6:{code:"J",name:"Vysočina"},7:{code:"K",name:"Karlovarský"},8:{code:"L",name:"Liberecký"},9:{code:"M",name:"Olomoucký"},10:{code:"P",name:"Plzeňský"},11:{code:"S",name:"Středočeský"},12:{code:"T",name:"Moravskoslezský"},13:{code:"U",name:"Ústecký"},14:{code:"Z",name:"Zlínský"}},DK:{1:{code:"AR",name:"Arhus"},2:{code:"BH",name:"Bornholm"},3:{code:"CO",name:"Copenhagen"},4:{code:"FO",name:"Faroe Islands"},5:{code:"FR",name:"Frederiksborg"},6:{code:"FY",name:"Fyn"},7:{code:"KO",name:"Kobenhavn"},8:{code:"NO",name:"Nordjylland"},9:{code:"RI",name:"Ribe"},10:{code:"RK",name:"Ringkobing"},11:{code:"RO",name:"Roskilde"},12:{code:"SO",name:"Sonderjylland"},13:{code:"ST",name:"Storstrom"},14:{code:"VK",name:"Vejle"},15:{code:"VJ",name:"Vestjælland"},16:{code:"VB",name:"Viborg"}},DJ:{1:{code:"S",name:"'Ali Sabih"},2:{code:"K",name:"Dikhil"},3:{code:"J",name:"Djibouti"},4:{code:"O",name:"Obock"},5:{code:"T",name:"Tadjoura"}},DM:{1:{code:"AND",name:"Saint Andrew Parish"},2:{code:"DAV",name:"Saint David Parish"},3:{code:"GEO",name:"Saint George Parish"},4:{code:"JOH",name:"Saint John Parish"},5:{code:"JOS",name:"Saint Joseph Parish"},6:{code:"LUK",name:"Saint Luke Parish"},7:{code:"MAR",name:"Saint Mark Parish"},8:{code:"PAT",name:"Saint Patrick Parish"},9:{code:"PAU",name:"Saint Paul Parish"},10:{code:"PET",name:"Saint Peter Parish"}},DO:{1:{code:"DN",name:"Distrito Nacional"},2:{code:"AZ",name:"Azua"},3:{code:"BC",name:"Baoruco"},4:{code:"BH",name:"Barahona"},5:{code:"DJ",name:"Dajabon"},6:{code:"DU",name:"Duarte"},7:{code:"EL",name:"Elias Pina"},8:{code:"SY",name:"El Seybo"},9:{code:"ET",name:"Espaillat"},10:{code:"HM",name:"Hato Mayor"},11:{code:"IN",name:"Independencia"},12:{code:"AL",name:"La Altagracia"},13:{code:"RO",name:"La Romana"},14:{code:"VE",name:"La Vega"},15:{code:"MT",name:"Maria Trinidad Sanchez"},16:{code:"MN",name:"Monsenor Nouel"},17:{code:"MC",name:"Monte Cristi"},18:{code:"MP",name:"Monte Plata"},19:{code:"PD",name:"Pedernales"},20:{code:"PR",name:"Peravia (Bani)"},21:{code:"PP",name:"Puerto Plata"},22:{code:"SL",name:"Salcedo"},23:{code:"SM",name:"Samana"},24:{code:"SH",name:"Sanchez Ramirez"},25:{code:"SC",name:"San Cristobal"},26:{code:"JO",name:"San Jose de Ocoa"},27:{code:"SJ",name:"San Juan"},28:{code:"PM",name:"San Pedro de Macoris"},29:{code:"SA",name:"Santiago"},30:{code:"ST",name:"Santiago Rodriguez"},31:{code:"SD",name:"Santo Domingo"},32:{code:"VA",name:"Valverde"}},TP:{1:{code:"AL",name:"Aileu"},2:{code:"AN",name:"Ainaro"},3:{code:"BA",name:"Baucau"},4:{code:"BO",name:"Bobonaro"},5:{code:"CO",name:"Cova Lima"},6:{code:"DI",name:"Dili"},7:{code:"ER",name:"Ermera"},8:{code:"LA",name:"Lautem"},9:{code:"LI",name:"Liquica"},10:{code:"MT",name:"Manatuto"},11:{code:"MF",name:"Manufahi"},12:{code:"OE",name:"Oecussi"},13:{code:"VI",name:"Viqueque"}},EC:{1:{code:"AZU",name:"Azuay"},2:{code:"BOL",name:"Bolivar"},3:{code:"CAN",name:"Cañar"},4:{code:"CAR",name:"Carchi"},5:{code:"CHI",name:"Chimborazo"},6:{code:"COT",name:"Cotopaxi"},7:{code:"EOR",name:"El Oro"},8:{code:"ESM",name:"Esmeraldas"},9:{code:"GPS",name:"Galápagos"},10:{code:"GUA",name:"Guayas"},11:{code:"IMB",name:"Imbabura"},12:{code:"LOJ",name:"Loja"},13:{code:"LRO",name:"Los Ríos"},14:{code:"MAN",name:"Manabí"},15:{code:"MSA",name:"Morona Santiago"},16:{code:"NAP",name:"Napo"},17:{code:"ORE",name:"Orellana"},18:{code:"PAS",name:"Pastaza"},19:{code:"PIC",name:"Pichincha"},20:{code:"SUC",name:"Sucumbíos"},21:{code:"TUN",name:"Tungurahua"},22:{code:"ZCH",name:"Zamora Chinchipe"}},EG:{1:{code:"DHY",name:"Ad Daqahliyah"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BHY",name:"Al Buhayrah"},4:{code:"FYM",name:"Al Fayyum"},5:{code:"GBY",name:"Al Gharbiyah"},6:{code:"IDR",name:"Al Iskandariyah"},7:{code:"IML",name:"Al Isma 'iliyah"},8:{code:"JZH",name:"Al Jizah"},9:{code:"MFY",name:"Al Minufiyah"},10:{code:"MNY",name:"Al Minya"},11:{code:"QHR",name:"Al Qahirah"},12:{code:"QLY",name:"Al Qalyubiyah"},13:{code:"WJD",name:"Al Wadi al Jadid"},14:{code:"SHQ",name:"Ash Sharqiyah"},15:{code:"SWY",name:"As Suways"},16:{code:"ASW",name:"Aswan"},17:{code:"ASY",name:"Asyut"},18:{code:"BSW",name:"Bani Suwayf"},19:{code:"BSD",name:"Bur Sa'id"},20:{code:"DMY",name:"Dumyat"},21:{code:"JNS",name:"Janub Sina'"},22:{code:"KSH",name:"Kafr ash Shaykh"},23:{code:"MAT",name:"Matruh"},24:{code:"QIN",name:"Qina"},25:{code:"SHS",name:"Shamal Sina'"},26:{code:"SUH",name:"Suhaj"}},SV:{1:{code:"AH",name:"Ahuachapan"},2:{code:"CA",name:"Cabanas"},3:{code:"CH",name:"Chalatenango"},4:{code:"CU",name:"Cuscatlan"},5:{code:"LB",name:"La Libertad"},6:{code:"PZ",name:"La Paz"},7:{code:"UN",name:"La Union"},8:{code:"MO",name:"Morazan"},9:{code:"SM",name:"San Miguel"},10:{code:"SS",name:"San Salvador"},11:{code:"SV",name:"San Vicente"},12:{code:"SA",name:"Santa Ana"},13:{code:"SO",name:"Sonsonate"},14:{code:"US",name:"Usulutan"}},GQ:{1:{code:"AN",name:"Provincia Annobon"},2:{code:"BN",name:"Provincia Bioko Norte"},3:{code:"BS",name:"Provincia Bioko Sur"},4:{code:"CS",name:"Provincia Centro Sur"},5:{code:"KN",name:"Provincia Kie-Ntem"},6:{code:"LI",name:"Provincia Litoral"},7:{code:"WN",name:"Provincia Wele-Nzas"}},ER:{1:{code:"MA",name:"Central (Maekel)"},2:{code:"KE",name:"Anseba (Keren)"},3:{code:"DK",name:"Southern Red Sea (Debub-Keih-Bah)"},4:{code:"SK",name:"Northern Red Sea (Semien-Keih-Ba)"},5:{code:"DE",name:"Southern (Debub)"},6:{code:"BR",name:"Gash-Barka (Barentu)"}},EE:{1:{code:"HA",name:"Harjumaa (Tallinn)"},2:{code:"HI",name:"Hiiumaa (Kardla)"},3:{code:"IV",name:"Ida-Virumaa (Johvi)"},4:{code:"JA",name:"Jarvamaa (Paide)"},5:{code:"JO",name:"Jogevamaa (Jogeva)"},6:{code:"LV",name:"Laane-Virumaa (Rakvere)"},7:{code:"LA",name:"Laanemaa (Haapsalu)"},8:{code:"PA",name:"Parnumaa (Parnu)"},9:{code:"PO",name:"Polvamaa (Polva)"},10:{code:"RA",name:"Raplamaa (Rapla)"},11:{code:"SA",name:"Saaremaa (Kuessaare)"},12:{code:"TA",name:"Tartumaa (Tartu)"},13:{code:"VA",name:"Valgamaa (Valga)"},14:{code:"VI",name:"Viljandimaa (Viljandi)"},15:{code:"VO",name:"Vorumaa (Voru)"}},ET:{1:{code:"AF",name:"Afar"},2:{code:"AH",name:"Amhara"},3:{code:"BG",name:"Benishangul-Gumaz"},4:{code:"GB",name:"Gambela"},5:{code:"HR",name:"Hariai"},6:{code:"OR",name:"Oromia"},7:{code:"SM",name:"Somali"},8:{code:"SN",name:"Southern Nations - Nationalities"},9:{code:"TG",name:"Tigray"},10:{code:"AA",name:"Addis Ababa"},11:{code:"DD",name:"Dire Dawa"}},FO:{1:{code:"TÛR",name:"Tûrshavnar Kommuna"},2:{code:"KLA",name:"Klaksvík"},3:{code:"RUN",name:"Runavík"},4:{code:"TVØ",name:"Tvøroyri"},5:{code:"FUG",name:"Fuglafjørður"},6:{code:"SUN",name:"Sunda Kommuna"},7:{code:"VáG",name:"Vágur"},8:{code:"NES",name:"Nes"},9:{code:"VES",name:"Vestmanna"},10:{code:"MIð",name:"Miðvágur"},11:{code:"SØR",name:"Sørvágur"},12:{code:"GØT",name:"Gøtu Kommuna"},13:{code:"SJû",name:"Sjûvar Kommuna"},14:{code:"LEI",name:"Leirvík"},15:{code:"SAN",name:"Sandavágur"},16:{code:"HVA",name:"Hvalba"},17:{code:"EIð",name:"Eiði"},18:{code:"KVí",name:"Kvívík"},19:{code:"SAN",name:"Sandur"},20:{code:"SKO",name:"Skopun"},21:{code:"HVA",name:"Hvannasund"},22:{code:"SUM",name:"Sumba"},23:{code:"VIð",name:"Viðareiði"},24:{code:"POR",name:"Porkeri"},25:{code:"SKá",name:"Skálavík"},26:{code:"KUN",name:"Kunoy"},27:{code:"HÚS",name:"HÚsavík"},28:{code:"HOV",name:"Hov"},29:{code:"FáM",name:"Fámjin"},30:{code:"FUN",name:"Funningur"},31:{code:"HÚS",name:"HÚsar"},32:{code:"SKÚ",name:"SkÚvoy"},33:{code:"SVí",name:"Svínoy"},34:{code:"FUG",name:"Fugloy"}},FJ:{1:{code:"C",name:"Central Division"},2:{code:"E",name:"Eastern Division"},3:{code:"N",name:"Northern Division"},4:{code:"R",name:"Rotuma"},5:{code:"W",name:"Western Division"}},FI:{1:{code:"AL",name:"Ahvenanmaan Laani"},2:{code:"ES",name:"Etela-Suomen Laani"},3:{code:"IS",name:"Ita-Suomen Laani"},4:{code:"LS",name:"Lansi-Suomen Laani"},5:{code:"LA",name:"Lapin Lanani"},6:{code:"OU",name:"Oulun Laani"}},FR:{1:{code:"AL",name:"Alsace"},2:{code:"AQ",name:"Aquitaine"},3:{code:"AU",name:"Auvergne"},4:{code:"BR",name:"Brittany"},5:{code:"BU",name:"Burgundy"},6:{code:"CE",name:"Center Loire Valley"},7:{code:"CH",name:"Champagne"},8:{code:"CO",name:"Corse"},9:{code:"FR",name:"France Comte"},10:{code:"LA",name:"Languedoc Roussillon"},11:{code:"LI",name:"Limousin"},12:{code:"LO",name:"Lorraine"},13:{code:"MI",name:"Midi Pyrenees"},14:{code:"NO",name:"Nord Pas de Calais"},15:{code:"NR",name:"Normandy"},16:{code:"PA",name:"Paris / Ile de France"},17:{code:"PI",name:"Picardie"},18:{code:"PO",name:"Poitou Charente"},19:{code:"PR",name:"Provence"},20:{code:"RH",name:"Rhone Alps"},21:{code:"RI",name:"Riviera"},22:{code:"WE",name:"Western Loire Valley"}},FX:{1:{code:"Et",name:"Etranger"},2:{code:"01",name:"Ain"},3:{code:"02",name:"Aisne"},4:{code:"03",name:"Allier"},5:{code:"04",name:"Alpes de Haute Provence"},6:{code:"05",name:"Hautes-Alpes"},7:{code:"06",name:"Alpes Maritimes"},8:{code:"07",name:"Ardèche"},9:{code:"08",name:"Ardennes"},10:{code:"09",name:"Ariège"},11:{code:"10",name:"Aube"},12:{code:"11",name:"Aude"},13:{code:"12",name:"Aveyron"},14:{code:"13",name:"Bouches du Rhône"},15:{code:"14",name:"Calvados"},16:{code:"15",name:"Cantal"},17:{code:"16",name:"Charente"},18:{code:"17",name:"Charente Maritime"},19:{code:"18",name:"Cher"},20:{code:"19",name:"Corrèze"},21:{code:"2A",name:"Corse du Sud"},22:{code:"2B",name:"Haute Corse"},23:{code:"21",name:"Côte d'or"},24:{code:"22",name:"Côtes d'Armor"},25:{code:"23",name:"Creuse"},26:{code:"24",name:"Dordogne"},27:{code:"25",name:"Doubs"},28:{code:"26",name:"Drôme"},29:{code:"27",name:"Eure"},30:{code:"28",name:"Eure et Loir"},31:{code:"29",name:"Finistère"},32:{code:"30",name:"Gard"},33:{code:"31",name:"Haute Garonne"},34:{code:"32",name:"Gers"},35:{code:"33",name:"Gironde"},36:{code:"34",name:"Hérault"},37:{code:"35",name:"Ille et Vilaine"},38:{code:"36",name:"Indre"},39:{code:"37",name:"Indre et Loire"},40:{code:"38",name:"Isére"},41:{code:"39",name:"Jura"},42:{code:"40",name:"Landes"},43:{code:"41",name:"Loir et Cher"},44:{code:"42",name:"Loire"},45:{code:"43",name:"Haute Loire"},46:{code:"44",name:"Loire Atlantique"},47:{code:"45",name:"Loiret"},48:{code:"46",name:"Lot"},49:{code:"47",name:"Lot et Garonne"},50:{code:"48",name:"Lozère"},51:{code:"49",name:"Maine et Loire"},52:{code:"50",name:"Manche"},53:{code:"51",name:"Marne"},54:{code:"52",name:"Haute Marne"},55:{code:"53",name:"Mayenne"},56:{code:"54",name:"Meurthe et Moselle"},57:{code:"55",name:"Meuse"},58:{code:"56",name:"Morbihan"},59:{code:"57",name:"Moselle"},60:{code:"58",name:"Nièvre"},61:{code:"59",name:"Nord"},62:{code:"60",name:"Oise"},63:{code:"61",name:"Orne"},64:{code:"62",name:"Pas de Calais"},65:{code:"63",name:"Puy de Dôme"},66:{code:"64",name:"Pyrenees Atlantique"},67:{code:"65",name:"Hautes Pyrenees"},68:{code:"66",name:"Pyrenees Orientale"},69:{code:"67",name:"Bas Rhin"},70:{code:"68",name:"Haut Rhin"},71:{code:"69",name:"Rhône"},72:{code:"70",name:"Haute Saône"},73:{code:"71",name:"Saône et Loire"},74:{code:"72",name:"Sarthe"},75:{code:"73",name:"Savoie"},76:{code:"74",name:"Haute Savoie"},77:{code:"75",name:"Paris"},78:{code:"76",name:"Seine Martitime"},79:{code:"77",name:"Seine et Marne"},80:{code:"78",name:"Yvelines"},81:{code:"79",name:"Deux Sèvres"},82:{code:"80",name:"Somme"},83:{code:"81",name:"Tarn"},84:{code:"82",name:"Tarn et Garonne"},85:{code:"83",name:"Var"},86:{code:"84",name:"Vaucluse"},87:{code:"85",name:"Vendée"},88:{code:"86",name:"Vienne"},89:{code:"87",name:"Haute Vienne"},90:{code:"88",name:"Vosges"},91:{code:"89",name:"Yonne"},92:{code:"90",name:"Territoire de Belfort"},93:{code:"91",name:"Essonne"},94:{code:"92",name:"Hauts de Seine"},95:{code:"93",name:"Seine St-Denis"},96:{code:"94",name:"Val de Marne"},97:{code:"95",name:"Val d'oise"}},GF:{1:{code:"AWA",name:"Awala-Yalimapo"},2:{code:"MAN",name:"Mana"},3:{code:"SAI",name:"Saint-Laurent-Du-Maroni"},4:{code:"APA",name:"Apatou"},5:{code:"GRA",name:"Grand-Santi"},6:{code:"PAP",name:"Papaïchton"},7:{code:"SAÜ",name:"SaÜl"},8:{code:"MAR",name:"Maripasoula"},9:{code:"CAM",name:"Camopi"},10:{code:"SAI",name:"Saint-Georges"},11:{code:"OUA",name:"Ouanary"},12:{code:"RéG",name:"Régina"},13:{code:"ROU",name:"Roura"},14:{code:"SAI",name:"Saint-élie"},15:{code:"IRA",name:"Iracoubo"},16:{code:"SIN",name:"Sinnamary"},17:{code:"KOU",name:"Kourou"},18:{code:"MAC",name:"Macouria"},19:{code:"MON",name:"Montsinéry-Tonnegrande"},20:{code:"MAT",name:"Matoury"},21:{code:"CAY",name:"Cayenne"},22:{code:"REM",name:"Remire-Montjoly"}},PF:{1:{code:"M",name:"Archipel des Marquises"},2:{code:"T",name:"Archipel des Tuamotu"},3:{code:"I",name:"Archipel des Tubuai"},4:{code:"V",name:"Iles du Vent"},5:{code:"S",name:"Iles Sous-le-Vent"}},TF:{1:{code:"C",name:"Iles Crozet"},2:{code:"K",name:"Iles Kerguelen"},3:{code:"A",name:"Ile Amsterdam"},4:{code:"P",name:"Ile Saint-Paul"},5:{code:"D",name:"Adelie Land"}},GA:{1:{code:"ES",name:"Estuaire"},2:{code:"HO",name:"Haut-Ogooue"},3:{code:"MO",name:"Moyen-Ogooue"},4:{code:"NG",name:"Ngounie"},5:{code:"NY",name:"Nyanga"},6:{code:"OI",name:"Ogooue-Ivindo"},7:{code:"OL",name:"Ogooue-Lolo"},8:{code:"OM",name:"Ogooue-Maritime"},9:{code:"WN",name:"Woleu-Ntem"}},GM:{1:{code:"BJ",name:"Banjul"},2:{code:"BS",name:"Basse"},3:{code:"BR",name:"Brikama"},4:{code:"JA",name:"Janjangbure"},5:{code:"KA",name:"Kanifeng"},6:{code:"KE",name:"Kerewan"},7:{code:"KU",name:"Kuntaur"},8:{code:"MA",name:"Mansakonko"},9:{code:"LR",name:"Lower River"},10:{code:"CR",name:"Central River"},11:{code:"NB",name:"North Bank"},12:{code:"UR",name:"Upper River"},13:{code:"WE",name:"Western"}},GE:{1:{code:"AB",name:"Abkhazia"},2:{code:"AJ",name:"Ajaria"},3:{code:"GU",name:"Guria"},4:{code:"IM",name:"Imereti"},5:{code:"KA",name:"Kakheti"},6:{code:"KK",name:"Kvemo Kartli"},7:{code:"MM",name:"Mtskheta-Mtianeti"},8:{code:"RL",name:"Racha Lechkhumi and Kvemo Svanet"},9:{code:"SJ",name:"Samtskhe-Javakheti"},10:{code:"SK",name:"Shida Kartli"},11:{code:"SZ",name:"Samegrelo-Zemo Svaneti"},12:{code:"TB",name:"Tbilisi"}},DE:{1:{code:"BAW",name:"Baden-Württemberg"},2:{code:"BAY",name:"Bayern"},3:{code:"BER",name:"Berlin"},4:{code:"BRG",name:"Brandenburg"},5:{code:"BRE",name:"Bremen"},6:{code:"HAM",name:"Hamburg"},7:{code:"HES",name:"Hessen"},8:{code:"MEC",name:"Mecklenburg-Vorpommern"},9:{code:"NDS",name:"Niedersachsen"},10:{code:"NRW",name:"Nordrhein-Westfalen"},11:{code:"RHE",name:"Rheinland-Pfalz"},12:{code:"SAR",name:"Saarland"},13:{code:"SAS",name:"Sachsen"},14:{code:"SAC",name:"Sachsen-Anhalt"},15:{code:"SCN",name:"Schleswig-Holstein"},16:{code:"THE",name:"Thüringen"}},GH:{1:{code:"AS",name:"Ashanti Region"},2:{code:"BA",name:"Brong-Ahafo Region"},3:{code:"CE",name:"Central Region"},4:{code:"EA",name:"Eastern Region"},5:{code:"GA",name:"Greater Accra Region"},6:{code:"NO",name:"Northern Region"},7:{code:"UE",name:"Upper East Region"},8:{code:"UW",name:"Upper West Region"},9:{code:"VO",name:"Volta Region"},10:{code:"WE",name:"Western Region"}},GI:{1:{code:"EAS",name:"East Side"},2:{code:"NOR",name:"North District"},3:{code:"REC",name:"Reclamation Areas"},4:{code:"SAN",name:"Sandpits Area"},5:{code:"SOU",name:"South District"},6:{code:"TOW",name:"Town Area"},7:{code:"UPP",name:"Upper Town"},8:{code:"OTH",name:"Other"}},GR:{1:{code:"AT",name:"Attica"},2:{code:"CN",name:"Central Greece"},3:{code:"CM",name:"Central Macedonia"},4:{code:"CR",name:"Crete"},5:{code:"EM",name:"East Macedonia and Thrace"},6:{code:"EP",name:"Epirus"},7:{code:"II",name:"Ionian Islands"},8:{code:"NA",name:"North Aegean"},9:{code:"PP",name:"Peloponnesos"},10:{code:"SA",name:"South Aegean"},11:{code:"TH",name:"Thessaly"},12:{code:"WG",name:"West Greece"},13:{code:"WM",name:"West Macedonia"}},GL:{1:{code:"A",name:"Avannaa"},2:{code:"T",name:"Tunu"},3:{code:"K",name:"Kitaa"}},86:{1:{code:"A",name:"Saint Andrew"},2:{code:"D",name:"Saint David"},3:{code:"G",name:"Saint George"},4:{code:"J",name:"Saint John"},5:{code:"M",name:"Saint Mark"},6:{code:"P",name:"Saint Patrick"},7:{code:"C",name:"Carriacou"},8:{code:"Q",name:"Petit Martinique"}},GP:{1:{code:"ARR",name:"Arrondissements Of The Guadeloup"},2:{code:"CAN",name:"Cantons Of The Guadeloup Depart"},3:{code:"COM",name:"Communes Of The Guadeloup Depart"}},GU:{1:{code:"AGA",name:"Agana Heights"},2:{code:"AGA",name:"Agat"},3:{code:"ASA",name:"Asan Maina"},4:{code:"BAR",name:"Barrigada"},5:{code:"CHA",name:"Chalan Pago Ordot"},6:{code:"DED",name:"Dededo"},7:{code:"HAG",name:"HagÅtña"},8:{code:"INA",name:"Inarajan"},9:{code:"MAN",name:"Mangilao"},10:{code:"MER",name:"Merizo"},11:{code:"MON",name:"Mongmong Toto Maite"},12:{code:"PIT",name:"Piti"},13:{code:"SAN",name:"Santa Rita"},14:{code:"SIN",name:"Sinajana"},15:{code:"TAL",name:"Talofofo"},16:{code:"TAM",name:"Tamuning"},17:{code:"UMA",name:"Umatac"},18:{code:"YIG",name:"Yigo"},19:{code:"YON",name:"Yona"}},GT:{1:{code:"AV",name:"Alta Verapaz"},2:{code:"BV",name:"Baja Verapaz"},3:{code:"CM",name:"Chimaltenango"},4:{code:"CQ",name:"Chiquimula"},5:{code:"PE",name:"El Peten"},6:{code:"PR",name:"El Progreso"},7:{code:"QC",name:"El Quiche"},8:{code:"ES",name:"Escuintla"},9:{code:"GU",name:"Guatemala"},10:{code:"HU",name:"Huehuetenango"},11:{code:"IZ",name:"Izabal"},12:{code:"JA",name:"Jalapa"},13:{code:"JU",name:"Jutiapa"},14:{code:"QZ",name:"Quetzaltenango"},15:{code:"RE",name:"Retalhuleu"},16:{code:"ST",name:"Sacatepequez"},17:{code:"SM",name:"San Marcos"},18:{code:"SR",name:"Santa Rosa"},19:{code:"SO",name:"Solola"},20:{code:"SU",name:"Suchitepequez"},21:{code:"TO",name:"Totonicapan"},22:{code:"ZA",name:"Zacapa"}},GN:{1:{code:"CNK",name:"Conakry"},2:{code:"BYL",name:"Beyla"},3:{code:"BFA",name:"Boffa"},4:{code:"BOK",name:"Boke"},5:{code:"COY",name:"Coyah"},6:{code:"DBL",name:"Dabola"},7:{code:"DLB",name:"Dalaba"},8:{code:"DGR",name:"Dinguiraye"},9:{code:"DBR",name:"Dubreka"},10:{code:"FRN",name:"Faranah"},11:{code:"FRC",name:"Forecariah"},12:{code:"FRI",name:"Fria"},13:{code:"GAO",name:"Gaoual"},14:{code:"GCD",name:"Gueckedou"},15:{code:"KNK",name:"Kankan"},16:{code:"KRN",name:"Kerouane"},17:{code:"KND",name:"Kindia"},18:{code:"KSD",name:"Kissidougou"},19:{code:"KBA",name:"Koubia"},20:{code:"KDA",name:"Koundara"},21:{code:"KRA",name:"Kouroussa"},22:{code:"LAB",name:"Labe"},23:{code:"LLM",name:"Lelouma"},24:{code:"LOL",name:"Lola"},25:{code:"MCT",name:"Macenta"},26:{code:"MAL",name:"Mali"},27:{code:"MAM",name:"Mamou"},28:{code:"MAN",name:"Mandiana"},29:{code:"NZR",name:"Nzerekore"},30:{code:"PIT",name:"Pita"},31:{code:"SIG",name:"Siguiri"},32:{code:"TLM",name:"Telimele"},33:{code:"TOG",name:"Tougue"},34:{code:"YOM",name:"Yomou"}},GW:{1:{code:"BF",name:"Bafata Region"},2:{code:"BB",name:"Biombo Region"},3:{code:"BS",name:"Bissau Region"},4:{code:"BL",name:"Bolama Region"},5:{code:"CA",name:"Cacheu Region"},6:{code:"GA",name:"Gabu Region"},7:{code:"OI",name:"Oio Region"},8:{code:"QU",name:"Quinara Region"},9:{code:"TO",name:"Tombali Region"}},GY:{1:{code:"BW",name:"Barima-Waini"},2:{code:"CM",name:"Cuyuni-Mazaruni"},3:{code:"DM",name:"Demerara-Mahaica"},4:{code:"EC",name:"East Berbice-Corentyne"},5:{code:"EW",name:"Essequibo Islands-West Demerara"},6:{code:"MB",name:"Mahaica-Berbice"},7:{code:"PM",name:"Pomeroon-Supenaam"},8:{code:"PI",name:"Potaro-Siparuni"},9:{code:"UD",name:"Upper Demerara-Berbice"},10:{code:"UT",name:"Upper Takutu-Upper Essequibo"}},HT:{1:{code:"AR",name:"Artibonite"},2:{code:"CE",name:"Centre"},3:{code:"GA",name:"Grand'Anse"},4:{code:"ND",name:"Nord"},5:{code:"NE",name:"Nord-Est"},6:{code:"NO",name:"Nord-Ouest"},7:{code:"OU",name:"Ouest"},8:{code:"SD",name:"Sud"},9:{code:"SE",name:"Sud-Est"}},HM:{1:{code:"F",name:"Flat Island"},2:{code:"M",name:"McDonald Island"},3:{code:"S",name:"Shag Island"},4:{code:"H",name:"Heard Island"}},HN:{1:{code:"AT",name:"Atlantida"},2:{code:"CH",name:"Choluteca"},3:{code:"CL",name:"Colon"},4:{code:"CM",name:"Comayagua"},5:{code:"CP",name:"Copan"},6:{code:"CR",name:"Cortes"},7:{code:"PA",name:"El Paraiso"},8:{code:"FM",name:"Francisco Morazan"},9:{code:"GD",name:"Gracias a Dios"},10:{code:"IN",name:"Intibuca"},11:{code:"IB",name:"Islas de la Bahia (Bay Islands)"},12:{code:"PZ",name:"La Paz"},13:{code:"LE",name:"Lempira"},14:{code:"OC",name:"Ocotepeque"},15:{code:"OL",name:"Olancho"},16:{code:"SB",name:"Santa Barbara"},17:{code:"VA",name:"Valle"},18:{code:"YO",name:"Yoro"}},HK:{1:{code:"HCW",name:"Central and Western Hong Kong Is"},2:{code:"HEA",name:"Eastern Hong Kong Island"},3:{code:"HSO",name:"Southern Hong Kong Island"},4:{code:"HWC",name:"Wan Chai Hong Kong Island"},5:{code:"KKC",name:"Kowloon City Kowloon"},6:{code:"KKT",name:"Kwun Tong Kowloon"},7:{code:"KSS",name:"Sham Shui Po Kowloon"},8:{code:"KWT",name:"Wong Tai Sin Kowloon"},9:{code:"KYT",name:"Yau Tsim Mong Kowloon"},10:{code:"NIS",name:"Islands New Territories"},11:{code:"NKT",name:"Kwai Tsing New Territories"},12:{code:"NNO",name:"North New Territories"},13:{code:"NSK",name:"Sai Kung New Territories"},14:{code:"NST",name:"Sha Tin New Territories"},15:{code:"NTP",name:"Tai Po New Territories"},16:{code:"NTW",name:"Tsuen Wan New Territories"},17:{code:"NTM",name:"Tuen Mun New Territories"},18:{code:"NYL",name:"Yuen Long New Territories"}},HU:{1:{code:"BK",name:"Bacs-Kiskun"},2:{code:"BA",name:"Baranya"},3:{code:"BE",name:"Bekes"},4:{code:"BS",name:"Bekescsaba"},5:{code:"BZ",name:"Borsod-Abauj-Zemplen"},6:{code:"BU",name:"Budapest"},7:{code:"CS",name:"Csongrad"},8:{code:"DE",name:"Debrecen"},9:{code:"DU",name:"Dunaujvaros"},10:{code:"EG",name:"Eger"},11:{code:"FE",name:"Fejer"},12:{code:"GY",name:"Gyor"},13:{code:"GM",name:"Gyor-Moson-Sopron"},14:{code:"HB",name:"Hajdu-Bihar"},15:{code:"HE",name:"Heves"},16:{code:"HO",name:"Hodmezovasarhely"},17:{code:"JN",name:"Jasz-Nagykun-Szolnok"},18:{code:"KA",name:"Kaposvar"},19:{code:"KE",name:"Kecskemet"},20:{code:"KO",name:"Komarom-Esztergom"},21:{code:"MI",name:"Miskolc"},22:{code:"NA",name:"Nagykanizsa"},23:{code:"NO",name:"Nograd"},24:{code:"NY",name:"Nyiregyhaza"},25:{code:"PE",name:"Pecs"},26:{code:"PS",name:"Pest"},27:{code:"SO",name:"Somogy"},28:{code:"SP",name:"Sopron"},29:{code:"SS",name:"Szabolcs-Szatmar-Bereg"},30:{code:"SZ",name:"Szeged"},31:{code:"SE",name:"Szekesfehervar"},32:{code:"SL",name:"Szolnok"},33:{code:"SM",name:"Szombathely"},34:{code:"TA",name:"Tatabanya"},35:{code:"TO",name:"Tolna"},36:{code:"VA",name:"Vas"},37:{code:"VE",name:"Veszprem"},38:{code:"ZA",name:"Zala"},39:{code:"ZZ",name:"Zalaegerszeg"}},IS:{1:{code:"AL",name:"Austurland"},2:{code:"HF",name:"Hofuoborgarsvaeoi"},3:{code:"NE",name:"Norourland eystra"},4:{code:"NV",name:"Norourland vestra"},5:{code:"SL",name:"Suourland"},6:{code:"SN",name:"Suournes"},7:{code:"VF",name:"Vestfiroir"},8:{code:"VL",name:"Vesturland"}},IN:{1:{code:"AN",name:"Andaman and Nicobar Islands"},2:{code:"AP",name:"Andhra Pradesh"},3:{code:"AR",name:"Arunachal Pradesh"},4:{code:"AS",name:"Assam"},5:{code:"BI",name:"Bihar"},6:{code:"CH",name:"Chandigarh"},7:{code:"DA",name:"Dadra and Nagar Haveli"},8:{code:"DM",name:"Daman and Diu"},9:{code:"DE",name:"Delhi"},10:{code:"GO",name:"Goa"},11:{code:"GU",name:"Gujarat"},12:{code:"HA",name:"Haryana"},13:{code:"HP",name:"Himachal Pradesh"},14:{code:"JA",name:"Jammu and Kashmir"},15:{code:"KA",name:"Karnataka"},16:{code:"KE",name:"Kerala"},17:{code:"LI",name:"Lakshadweep Islands"},18:{code:"MP",name:"Madhya Pradesh"},19:{code:"MA",name:"Maharashtra"},20:{code:"MN",name:"Manipur"},21:{code:"ME",name:"Meghalaya"},22:{code:"MI",name:"Mizoram"},23:{code:"NA",name:"Nagaland"},24:{code:"OR",name:"Orissa"},25:{code:"PO",name:"Pondicherry"},26:{code:"PU",name:"Punjab"},27:{code:"RA",name:"Rajasthan"},28:{code:"SI",name:"Sikkim"},29:{code:"TN",name:"Tamil Nadu"},30:{code:"TR",name:"Tripura"},31:{code:"UP",name:"Uttar Pradesh"},32:{code:"WB",name:"West Bengal"}},ID:{1:{code:"DA",name:"Daista Aceh"},2:{code:"SU",name:"Sumatera Utara"},3:{code:"SB",name:"Sumatera Barat"},4:{code:"SI",name:"Riau"},5:{code:"JA",name:"Jambi"},6:{code:"SS",name:"Sumatera Selatan"},7:{code:"BE",name:"Bengkulu"},8:{code:"LA",name:"Lampung"},9:{code:"JK",name:"Dki Jakarta"},10:{code:"JB",name:"Jawa Barat"},11:{code:"JT",name:"Jawa Tengah"},12:{code:"DY",name:"Daista Yogyakarta"},13:{code:"JT",name:"Jawa Timur"},14:{code:"KB",name:"Kalimantan Barat"},15:{code:"KT",name:"Kalimantan Tengah"},16:{code:"KI",name:"Kalimantan Timur"},17:{code:"KS",name:"Kalimantan Selatan"},18:{code:"BA",name:"Bali"},19:{code:"NB",name:"Nusa Tenggara Barat"},20:{code:"NT",name:"Nusa Tenggara Timur"},21:{code:"SN",name:"Sulawesi Selatan"},22:{code:"ST",name:"Sulawesi Tengah"},23:{code:"SA",name:"Sulawesi Utara"},24:{code:"SG",name:"Sulawesi Tenggara"},25:{code:"MA",name:"Maluku"},26:{code:"MU",name:"Maluku Utara"},27:{code:"IJ",name:"Irian Jaya Timur"},28:{code:"IT",name:"Irian Jaya Tengah"},29:{code:"IB",name:"Irian Jawa Barat"},30:{code:"BT",name:"Banten"},31:{code:"BB",name:"Bangka Belitung"},32:{code:"GO",name:"Gorontalo"}},IR:{1:{code:"ARD",name:"Ardabil"},2:{code:"BSH",name:"Bushehr"},3:{code:"CMB",name:"Chahar Mahaal and Bakhtiari"},4:{code:"EAZ",name:"East Azarbaijan"},5:{code:"EFH",name:"Esfahan"},6:{code:"FAR",name:"Fars"},7:{code:"GIL",name:"Gilan"},8:{code:"GLS",name:"Golestan"},9:{code:"HMD",name:"Hamadan"},10:{code:"HRM",name:"Hormozgan"},11:{code:"ILM",name:"Ilam"},12:{code:"KBA",name:"Kohkiluyeh and Buyer Ahmad"},13:{code:"KRB",name:"Kerman"},14:{code:"KRD",name:"Kurdistan"},15:{code:"KRM",name:"Kermanshah"},16:{code:"KZT",name:"Khuzestan"},17:{code:"LRS",name:"Lorestan"},18:{code:"MKZ",name:"Markazi"},19:{code:"MZD",name:"Mazandaran"},20:{code:"NKH",name:"North Khorasan"},21:{code:"QAZ",name:"Qazvin"},22:{code:"QOM",name:"Qom"},23:{code:"RKH",name:"Razavi Khorasan"},24:{code:"SBL",name:"Sistan and Baluchistan"},25:{code:"SKH",name:"South Khorasan"},26:{code:"SMN",name:"Semnan"},27:{code:"TEH",name:"Tehran"},28:{code:"WEZ",name:"West Azarbaijan"},29:{code:"YZD",name:"Yazd"},30:{code:"ZAN",name:"Zanjan"}},IQ:{1:{code:"AB",name:"Al Anbar"},2:{code:"AL",name:"Arbil"},3:{code:"BA",name:"Al Basrah"},4:{code:"BB",name:"Babil"},5:{code:"BD",name:"Baghdad"},6:{code:"DH",name:"Dahuk"},7:{code:"DQ",name:"Dhi Qar"},8:{code:"DY",name:"Diyala"},9:{code:"KB",name:"Al Karbala"},10:{code:"MU",name:"Al Muthanna"},11:{code:"MY",name:"Maysan"},12:{code:"NJ",name:"An Najaf"},13:{code:"NN",name:"Ninawa"},14:{code:"QA",name:"Al Qadisyah"},15:{code:"SD",name:"Salah ad Din"},16:{code:"SL",name:"As Sulaymaniyah"},17:{code:"TM",name:"At Ta'mim"},18:{code:"WS",name:"Wasit"}},IE:{1:{code:"CA",name:"Carlow"},2:{code:"CV",name:"Cavan"},3:{code:"CL",name:"Clare"},4:{code:"CO",name:"Cork"},5:{code:"DO",name:"Donegal"},6:{code:"DU",name:"Dublin"},7:{code:"GA",name:"Galway"},8:{code:"KE",name:"Kerry"},9:{code:"KI",name:"Kildare"},10:{code:"KL",name:"Kilkenny"},11:{code:"LA",name:"Laois"},12:{code:"LE",name:"Leitrim"},13:{code:"LI",name:"Limerick"},14:{code:"LO",name:"Longford"},15:{code:"LU",name:"Louth"},16:{code:"MA",name:"Mayo"},17:{code:"ME",name:"Meath"},18:{code:"MO",name:"Monaghan"},19:{code:"OF",name:"Offaly"},20:{code:"RO",name:"Roscommon"},21:{code:"SL",name:"Sligo"},22:{code:"TI",name:"Tipperary"},23:{code:"WA",name:"Waterford"},24:{code:"WE",name:"Westmeath"},25:{code:"WX",name:"Wexford"},26:{code:"WI",name:"Wicklow"}},IL:{1:{code:"BS",name:"Be'er Sheva"},2:{code:"BH",name:"Bika'at Hayarden"},3:{code:"EA",name:"Eilat and Arava"},4:{code:"GA",name:"Galil"},5:{code:"HA",name:"Haifa"},6:{code:"JM",name:"Jehuda Mountains"},7:{code:"JE",name:"Jerusalem"},8:{code:"NE",name:"Negev"},10:{code:"SE",name:"Semaria"},11:{code:"SH",name:"Sharon"},12:{code:"TA",name:"Tel Aviv (Gosh Dan)"}},IT:{1:{code:"AG",name:"Agrigento"},2:{code:"AL",name:"Alessandria"},3:{code:"AN",name:"Ancona"},4:{code:"AO",name:"Aosta"},5:{code:"AR",name:"Arezzo"},6:{code:"AP",name:"Ascoli Piceno"},7:{code:"AT",name:"Asti"},8:{code:"AV",name:"Avellino"},9:{code:"BA",name:"Bari"},10:{code:"BL",name:"Belluno"},11:{code:"BN",name:"Benevento"},12:{code:"BG",name:"Bergamo"},13:{code:"BI",name:"Biella"},14:{code:"BO",name:"Bologna"},15:{code:"BZ",name:"Bolzano"},16:{code:"BS",name:"Brescia"},17:{code:"BR",name:"Brindisi"},18:{code:"CA",name:"Cagliari"},19:{code:"CL",name:"Caltanissetta"},20:{code:"CB",name:"Campobasso"},21:{code:"CE",name:"Caserta"},22:{code:"CT",name:"Catania"},23:{code:"CZ",name:"Catanzaro"},24:{code:"CH",name:"Chieti"},25:{code:"CO",name:"Como"},26:{code:"CS",name:"Cosenza"},27:{code:"CR",name:"Cremona"},28:{code:"KR",name:"Crotone"},29:{code:"CN",name:"Cuneo"},30:{code:"EN",name:"Enna"},31:{code:"FE",name:"Ferrara"},32:{code:"FI",name:"Firenze"},33:{code:"FG",name:"Foggia"},34:{code:"FO",name:"Forlì"},35:{code:"FR",name:"Frosinone"},36:{code:"GE",name:"Genova"},37:{code:"GO",name:"Gorizia"},38:{code:"GR",name:"Grosseto"},39:{code:"IM",name:"Imperia"},40:{code:"IS",name:"Isernia"},41:{code:"AQ",name:"Aquila"},42:{code:"SP",name:"La Spezia"},43:{code:"LT",name:"Latina"},44:{code:"LE",name:"Lecce"},45:{code:"LC",name:"Lecco"},46:{code:"LI",name:"Livorno"},47:{code:"LO",name:"Lodi"},48:{code:"LU",name:"Lucca"},49:{code:"MC",name:"Macerata"},50:{code:"MN",name:"Mantova"},51:{code:"MS",name:"Massa-Carrara"},52:{code:"MT",name:"Matera"},53:{code:"ME",name:"Messina"},54:{code:"MI",name:"Milano"},55:{code:"MO",name:"Modena"},56:{code:"NA",name:"Napoli"},57:{code:"NO",name:"Novara"},58:{code:"NU",name:"Nuoro"},59:{code:"OR",name:"Oristano"},60:{code:"PD",name:"Padova"},61:{code:"PA",name:"Palermo"},62:{code:"PR",name:"Parma"},63:{code:"PG",name:"Perugia"},64:{code:"PV",name:"Pavia"},65:{code:"PU",name:"Pesaro Urbino"},66:{code:"PE",name:"Pescara"},67:{code:"PC",name:"Piacenza"},68:{code:"PI",name:"Pisa"},69:{code:"PT",name:"Pistoia"},70:{code:"PN",name:"Pordenone"},71:{code:"PZ",name:"Potenza"},72:{code:"PO",name:"Prato"},73:{code:"RG",name:"Ragusa"},74:{code:"RA",name:"Ravenna"},75:{code:"RC",name:"Reggio Calabria"},76:{code:"RE",name:"Reggio Emilia"},77:{code:"RI",name:"Rieti"},78:{code:"RN",name:"Rimini"},79:{code:"RM",name:"Roma"},80:{code:"RO",name:"Rovigo"},81:{code:"SA",name:"Salerno"},82:{code:"SS",name:"Sassari"},83:{code:"SV",name:"Savona"},84:{code:"SI",name:"Siena"},85:{code:"SR",name:"Siracusa"},86:{code:"SO",name:"Sondrio"},87:{code:"TA",name:"Taranto"},88:{code:"TE",name:"Teramo"},89:{code:"TR",name:"Terni"},90:{code:"TO",name:"Torino"},91:{code:"TP",name:"Trapani"},92:{code:"TN",name:"Trento"},93:{code:"TV",name:"Treviso"},94:{code:"TS",name:"Trieste"},95:{code:"UD",name:"Udine"},96:{code:"VA",name:"Varese"},97:{code:"VE",name:"Venezia"},98:{code:"VB",name:"Verbania"},99:{code:"VC",name:"Vercelli"},100:{code:"VR",name:"Verona"},101:{code:"VV",name:"Vibo Valentia"},102:{code:"VI",name:"Vicenza"},103:{code:"VT",name:"Viterbo"},104:{code:"CI",name:"Carbonia-Iglesias"},105:{code:"VS",name:"Medio Campidano"},106:{code:"OG",name:"Ogliastra"},107:{code:"OT",name:"Olbia-Tempio"},108:{code:"MB",name:"Monza e Brianza"},109:{code:"FM",name:"Fermo"},110:{code:"BT",name:"Barletta-Andria-Trani"}},JM:{1:{code:"CLA",name:"Clarendon Parish"},2:{code:"HAN",name:"Hanover Parish"},3:{code:"KIN",name:"Kingston Parish"},4:{code:"MAN",name:"Manchester Parish"},5:{code:"POR",name:"Portland Parish"},6:{code:"AND",name:"Saint Andrew Parish"},7:{code:"ANN",name:"Saint Ann Parish"},8:{code:"CAT",name:"Saint Catherine Parish"},9:{code:"ELI",name:"Saint Elizabeth Parish"},10:{code:"JAM",name:"Saint James Parish"},11:{code:"MAR",name:"Saint Mary Parish"},12:{code:"THO",name:"Saint Thomas Parish"},13:{code:"TRL",name:"Trelawny Parish"},14:{code:"WML",name:"Westmoreland Parish"}},JP:{1:{code:"AI",name:"Aichi"},2:{code:"AK",name:"Akita"},3:{code:"AO",name:"Aomori"},4:{code:"CH",name:"Chiba"},5:{code:"EH",name:"Ehime"},6:{code:"FK",name:"Fukui"},7:{code:"FU",name:"Fukuoka"},8:{code:"FS",name:"Fukushima"},9:{code:"GI",name:"Gifu"},10:{code:"GU",name:"Gumma"},11:{code:"HI",name:"Hiroshima"},12:{code:"HO",name:"Hokkaido"},13:{code:"HY",name:"Hyogo"},14:{code:"IB",name:"Ibaraki"},15:{code:"IS",name:"Ishikawa"},16:{code:"IW",name:"Iwate"},17:{code:"KA",name:"Kagawa"},18:{code:"KG",name:"Kagoshima"},19:{code:"KN",name:"Kanagawa"},20:{code:"KO",name:"Kochi"},21:{code:"KU",name:"Kumamoto"},22:{code:"KY",name:"Kyoto"},23:{code:"MI",name:"Mie"},24:{code:"MY",name:"Miyagi"},25:{code:"MZ",name:"Miyazaki"},26:{code:"NA",name:"Nagano"},27:{code:"NG",name:"Nagasaki"},28:{code:"NR",name:"Nara"},29:{code:"NI",name:"Niigata"},30:{code:"OI",name:"Oita"},31:{code:"OK",name:"Okayama"},32:{code:"ON",name:"Okinawa"},33:{code:"OS",name:"Osaka"},34:{code:"SA",name:"Saga"},35:{code:"SI",name:"Saitama"},36:{code:"SH",name:"Shiga"},37:{code:"SM",name:"Shimane"},38:{code:"SZ",name:"Shizuoka"},39:{code:"TO",name:"Tochigi"},40:{code:"TS",name:"Tokushima"},41:{code:"TK",name:"Tokyo"},42:{code:"TT",name:"Tottori"},43:{code:"TY",name:"Toyama"},44:{code:"WA",name:"Wakayama"},45:{code:"YA",name:"Yamagata"},46:{code:"YM",name:"Yamaguchi"},47:{code:"YN",name:"Yamanashi"}},JO:{1:{code:"AM",name:"'Amman"},2:{code:"AJ",name:"Ajlun"},3:{code:"AA",name:"Al'Aqabah"},4:{code:"AB",name:"Al Balqa'"},5:{code:"AK",name:"Al Karak"},6:{code:"AL",name:"Al Mafraq"},7:{code:"AT",name:"At Tafilah"},8:{code:"AZ",name:"Az Zarqa'"},9:{code:"IR",name:"Irbid"},10:{code:"JA",name:"Jarash"},11:{code:"MA",name:"Ma'an"},12:{code:"MD",name:"Madaba"}},KZ:{1:{code:"AL",name:"Almaty"},2:{code:"AC",name:"Almaty City"},3:{code:"AM",name:"Aqmola"},4:{code:"AQ",name:"Aqtobe"},5:{code:"AS",name:"Astana City"},6:{code:"AT",name:"Atyrau"},7:{code:"BA",name:"Batys Qazaqstan"},8:{code:"BY",name:"Bayqongyr City"},9:{code:"MA",name:"Mangghystau"},10:{code:"ON",name:"Ongtustik Qazaqstan"},11:{code:"PA",name:"Pavlodar"},12:{code:"QA",name:"Qaraghandy"},13:{code:"QO",name:"Qostanay"},14:{code:"QY",name:"Qyzylorda"},15:{code:"SH",name:"Shyghys Qazaqstan"},16:{code:"SO",name:"Soltustik Qazaqstan"},17:{code:"ZH",name:"Zhambyl"}},KE:{1:{code:"CE",name:"Central"},2:{code:"CO",name:"Coast"},3:{code:"EA",name:"Eastern"},4:{code:"NA",name:"Nairobi Area"},5:{code:"NE",name:"North Eastern"},6:{code:"NY",name:"Nyanza"},7:{code:"RV",name:"Rift Valley"},8:{code:"WE",name:"Western"}},KI:{1:{code:"AG",name:"Abaiang"},2:{code:"AM",name:"Abemama"},3:{code:"AK",name:"Aranuka"},4:{code:"AO",name:"Arorae"},5:{code:"BA",name:"Banaba"},6:{code:"BE",name:"Beru"},7:{code:"bT",name:"Butaritari"},8:{code:"KA",name:"Kanton"},9:{code:"KR",name:"Kiritimati"},10:{code:"KU",name:"Kuria"},11:{code:"MI",name:"Maiana"},12:{code:"MN",name:"Makin"},13:{code:"ME",name:"Marakei"},14:{code:"NI",name:"Nikunau"},15:{code:"NO",name:"Nonouti"},16:{code:"ON",name:"Onotoa"},17:{code:"TT",name:"Tabiteuea"},18:{code:"TR",name:"Tabuaeran"},19:{code:"TM",name:"Tamana"},20:{code:"TW",name:"Tarawa"},21:{code:"TE",name:"Teraina"}},KP:{1:{code:"CHA",name:"Chagang-do"},2:{code:"HAB",name:"Hamgyong-bukto"},3:{code:"HAN",name:"Hamgyong-namdo"},4:{code:"HWB",name:"Hwanghae-bukto"},5:{code:"HWN",name:"Hwanghae-namdo"},6:{code:"KAN",name:"Kangwon-do"},7:{code:"PYB",name:"P'yongan-bukto"},8:{code:"PYN",name:"P'yongan-namdo"},9:{code:"YAN",name:"Ryanggang-do (Yanggang-do)"},10:{code:"NAJ",name:"Rason Directly Governed City"},11:{code:"PYO",name:"P'yongyang Special City"}},KR:{1:{code:"CO",name:"Ch'ungch'ong-bukto"},2:{code:"CH",name:"Ch'ungch'ong-namdo"},3:{code:"CD",name:"Cheju-do"},4:{code:"CB",name:"Cholla-bukto"},5:{code:"CN",name:"Cholla-namdo"},6:{code:"IG",name:"Inch'on-gwangyoksi"},7:{code:"KA",name:"Kangwon-do"},8:{code:"KG",name:"Kwangju-gwangyoksi"},9:{code:"KD",name:"Kyonggi-do"},10:{code:"KB",name:"Kyongsang-bukto"},11:{code:"KN",name:"Kyongsang-namdo"},12:{code:"PG",name:"Pusan-gwangyoksi"},13:{code:"SO",name:"Soul-t'ukpyolsi"},14:{code:"TA",name:"Taegu-gwangyoksi"},15:{code:"TG",name:"Taejon-gwangyoksi"}},KW:{1:{code:"AL",name:"Al'Asimah"},2:{code:"AA",name:"Al Ahmadi"},3:{code:"AF",name:"Al Farwaniyah"},4:{code:"AJ",name:"Al Jahra'"},5:{code:"HA",name:"Hawalli"}},KG:{1:{code:"GB",name:"Bishkek"},2:{code:"B",name:"Batken"},3:{code:"C",name:"Chu"},4:{code:"J",name:"Jalal-Abad"},5:{code:"N",name:"Naryn"},6:{code:"O",name:"Osh"},7:{code:"T",name:"Talas"},8:{code:"Y",name:"Ysyk-Kol"}},LA:{1:{code:"VT",name:"Vientiane"},2:{code:"AT",name:"Attapu"},3:{code:"BK",name:"Bokeo"},4:{code:"BL",name:"Bolikhamxai"},5:{code:"CH",name:"Champasak"},6:{code:"HO",name:"Houaphan"},7:{code:"KH",name:"Khammouan"},8:{code:"LM",name:"Louang Namtha"},9:{code:"LP",name:"Louangphabang"},10:{code:"OU",name:"Oudomxai"},11:{code:"PH",name:"Phongsali"},12:{code:"SL",name:"Salavan"},13:{code:"SV",name:"Savannakhet"},14:{code:"VI",name:"Vientiane"},15:{code:"XA",name:"Xaignabouli"},16:{code:"XE",name:"Xekong"},17:{code:"XI",name:"Xiangkhoang"},18:{code:"XN",name:"Xaisomboun"}},LV:{1:{code:"AIZ",name:"Aizkraukles Rajons"},2:{code:"ALU",name:"Aluksnes Rajons"},3:{code:"BAL",name:"Balvu Rajons"},4:{code:"BAU",name:"Bauskas Rajons"},5:{code:"CES",name:"Cesu Rajons"},6:{code:"DGR",name:"Daugavpils Rajons"},7:{code:"DOB",name:"Dobeles Rajons"},8:{code:"GUL",name:"Gulbenes Rajons"},9:{code:"JEK",name:"Jekabpils Rajons"},10:{code:"JGR",name:"Jelgavas Rajons"},11:{code:"KRA",name:"Kraslavas Rajons"},12:{code:"KUL",name:"Kuldigas Rajons"},13:{code:"LPR",name:"Liepajas Rajons"},14:{code:"LIM",name:"Limbazu Rajons"},15:{code:"LUD",name:"Ludzas Rajons"},16:{code:"MAD",name:"Madonas Rajons"},17:{code:"OGR",name:"Ogres Rajons"},18:{code:"PRE",name:"Preilu Rajons"},19:{code:"RZR",name:"Rezeknes Rajons"},20:{code:"RGR",name:"Rigas Rajons"},21:{code:"SAL",name:"Saldus Rajons"},22:{code:"TAL",name:"Talsu Rajons"},23:{code:"TUK",name:"Tukuma Rajons"},24:{code:"VLK",name:"Valkas Rajons"},25:{code:"VLM",name:"Valmieras Rajons"},26:{code:"VSR",name:"Ventspils Rajons"},27:{code:"DGV",name:"Daugavpils"},28:{code:"JGV",name:"Jelgava"},29:{code:"JUR",name:"Jurmala"},30:{code:"LPK",name:"Liepaja"},31:{code:"RZK",name:"Rezekne"},32:{code:"RGA",name:"Riga"},33:{code:"VSL",name:"Ventspils"}},LB:{1:{code:"BIN",name:"Bint Jbeil"},2:{code:"HAS",name:"Hasbaya"},3:{code:"MAR",name:"Marjeyoun"},4:{code:"NAB",name:"Nabatieh"},5:{code:"BAA",name:"Baalbek"},6:{code:"HER",name:"Hermel"},7:{code:"RAS",name:"Rashaya"},8:{code:"WES",name:"Western Beqaa"},9:{code:"ZAH",name:"Zahle"},10:{code:"AKK",name:"Akkar"},11:{code:"BAT",name:"Batroun"},12:{code:"BSH",name:"Bsharri"},13:{code:"KOU",name:"Koura"},14:{code:"MIN",name:"Miniyeh-Danniyeh"},15:{code:"TRI",name:"Tripoli"},16:{code:"ZGH",name:"Zgharta"},17:{code:"ALE",name:"Aley"},18:{code:"BAA",name:"Baabda"},19:{code:"BYB",name:"Byblos"},20:{code:"CHO",name:"Chouf"},21:{code:"KES",name:"Kesrwan"},22:{code:"MAT",name:"Matn"},23:{code:"JEZ",name:"Jezzine"},24:{code:"SID",name:"Sidon"},25:{code:"TYR",name:"Tyre"}},LS:{1:{code:"BE",name:"Berea"},2:{code:"BB",name:"Butha-Buthe"},3:{code:"LE",name:"Leribe"},4:{code:"MF",name:"Mafeteng"},5:{code:"MS",name:"Maseru"},6:{code:"MH",name:"Mohale's Hoek"},7:{code:"MK",name:"Mokhotlong"},8:{code:"QN",name:"Qacha's Nek"},9:{code:"QT",name:"Quthing"},10:{code:"TT",name:"Thaba-Tseka"}},LR:{1:{code:"BI",name:"Bomi"},2:{code:"BG",name:"Bong"},3:{code:"GB",name:"Grand Bassa"},4:{code:"CM",name:"Grand Cape Mount"},5:{code:"GG",name:"Grand Gedeh"},6:{code:"GK",name:"Grand Kru"},7:{code:"LO",name:"Lofa"},8:{code:"MG",name:"Margibi"},9:{code:"ML",name:"Maryland"},10:{code:"MS",name:"Montserrado"},11:{code:"NB",name:"Nimba"},12:{code:"RC",name:"River Cess"},13:{code:"SN",name:"Sinoe"}},LY:{1:{code:"AJ",name:"Ajdabiya"},2:{code:"AZ",name:"Al 'Aziziyah"},3:{code:"FA",name:"Al Fatih"},4:{code:"JA",name:"Al Jabal al Akhdar"},5:{code:"JU",name:"Al Jufrah"},6:{code:"KH",name:"Al Khums"},7:{code:"KU",name:"Al Kufrah"},8:{code:"NK",name:"An Nuqat al Khams"},9:{code:"AS",name:"Ash Shati'"},10:{code:"AW",name:"Awbari"},11:{code:"ZA",name:"Az Zawiyah"},12:{code:"BA",name:"Banghazi"},13:{code:"DA",name:"Darnah"},14:{code:"GD",name:"Ghadamis"},15:{code:"GY",name:"Gharyan"},16:{code:"MI",name:"Misratah"},17:{code:"MZ",name:"Murzuq"},18:{code:"SB",name:"Sabha"},19:{code:"SW",name:"Sawfajjin"},20:{code:"SU",name:"Surt"},21:{code:"TL",name:"Tarabulus (Tripoli)"},22:{code:"TH",name:"Tarhunah"},23:{code:"TU",name:"Tubruq"},24:{code:"YA",name:"Yafran"},25:{code:"ZL",name:"Zlitan"}},LI:{1:{code:"V",name:"Vaduz"},2:{code:"A",name:"Schaan"},3:{code:"B",name:"Balzers"},4:{code:"N",name:"Triesen"},5:{code:"E",name:"Eschen"},6:{code:"M",name:"Mauren"},7:{code:"T",name:"Triesenberg"},8:{code:"R",name:"Ruggell"},9:{code:"G",name:"Gamprin"},10:{code:"L",name:"Schellenberg"},11:{code:"P",name:"Planken"}},LT:{1:{code:"AL",name:"Alytus"},2:{code:"KA",name:"Kaunas"},3:{code:"KL",name:"Klaipeda"},4:{code:"MA",name:"Marijampole"},5:{code:"PA",name:"Panevezys"},6:{code:"SI",name:"Siauliai"},7:{code:"TA",name:"Taurage"},8:{code:"TE",name:"Telsiai"},9:{code:"UT",name:"Utena"},10:{code:"VI",name:"Vilnius"}},LU:{1:{code:"DD",name:"Diekirch"},2:{code:"DC",name:"Clervaux"},3:{code:"DR",name:"Redange"},4:{code:"DV",name:"Vianden"},5:{code:"DW",name:"Wiltz"},6:{code:"GG",name:"Grevenmacher"},7:{code:"GE",name:"Echternach"},8:{code:"GR",name:"Remich"},9:{code:"LL",name:"Luxembourg"},10:{code:"LC",name:"Capellen"},11:{code:"LE",name:"Esch-sur-Alzette"},12:{code:"LM",name:"Mersch"}},MO:{1:{code:"OLF",name:"Our Lady Fatima Parish"},2:{code:"ANT",name:"St. Anthony Parish"},3:{code:"LAZ",name:"St. Lazarus Parish"},4:{code:"CAT",name:"Cathedral Parish"},5:{code:"LAW",name:"St. Lawrence Parish"}},MK:{1:{code:"AER",name:"Aerodrom"},2:{code:"ARA",name:"Aračinovo"},3:{code:"BER",name:"Berovo"},4:{code:"BIT",name:"Bitola"},5:{code:"BOG",name:"Bogdanci"},6:{code:"BOG",name:"Bogovinje"},7:{code:"BOS",name:"Bosilovo"},8:{code:"BRV",name:"Brvenica"},9:{code:"BUT",name:"Butel"},10:{code:"ČAI",name:"Čair"},11:{code:"ČAš",name:"Čaška"},12:{code:"CEN",name:"Centar"},13:{code:"CEN",name:"Centar Župa"},14:{code:"Češ",name:"Češinovo-Obleš"},15:{code:"ČUČ",name:"Čučer-Sandevo"},16:{code:"DEB",name:"Debar"},17:{code:"DEB",name:"Debarca"},18:{code:"DEL",name:"Delčevo"},19:{code:"DEM",name:"Demir Hisar"},20:{code:"DEM",name:"Demir Kapija"},21:{code:"DOL",name:"Dolneni"},22:{code:"DRU",name:"Drugovo"},23:{code:"GAZ",name:"Gazi Baba"},24:{code:"GEV",name:"Gevgelija"},25:{code:"GJO",name:"Gjorče Petrov"},26:{code:"GOS",name:"Gostivar"},27:{code:"GRA",name:"Gradsko"},28:{code:"ILI",name:"Ilinden"},29:{code:"JEG",name:"Jegunovce"},30:{code:"KAR",name:"Karbinci"},31:{code:"KAR",name:"Karpoš"},32:{code:"KAV",name:"Kavadarci"},33:{code:"KIČ",name:"Kičevo"},34:{code:"KIS",name:"Kisela Voda"},35:{code:"KOč",name:"Kočani"},36:{code:"KON",name:"Konče"},37:{code:"KRA",name:"Kratovo"},38:{code:"KRI",name:"Kriva Palanka"},39:{code:"KRI",name:"Krivogaštani"},40:{code:"KRU",name:"Kruševo"},41:{code:"KUM",name:"Kumanovo"},42:{code:"LIP",name:"Lipkovo"},43:{code:"LOZ",name:"Lozovo"},44:{code:"MAK",name:"Makedonska Kamenica"},45:{code:"MAK",name:"Makedonski Brod"},46:{code:"MAV",name:"Mavrovo and Rostuša"},47:{code:"MOG",name:"Mogila"},48:{code:"NEG",name:"Negotino"},49:{code:"NOV",name:"Novaci"},50:{code:"NOV",name:"Novo Selo"},51:{code:"OHR",name:"Ohrid"},52:{code:"OSL",name:"Oslomej"},53:{code:"PEH",name:"Pehčevo"},54:{code:"PET",name:"Petrovec"},55:{code:"PLA",name:"Plasnica"},56:{code:"PRI",name:"Prilep"},57:{code:"PRO",name:"Probištip"},58:{code:"RAD",name:"Radoviš"},59:{code:"RAN",name:"Rankovce"},60:{code:"RES",name:"Resen"},61:{code:"ROS",name:"Rosoman"},62:{code:"SAR",name:"Saraj"},63:{code:"SOP",name:"Sopište"},64:{code:"STA",name:"Star Dojran"},65:{code:"STA",name:"Staro Nagoričane"},66:{code:"ŠTI",name:"Štip"},67:{code:"STR",name:"Struga"},68:{code:"STR",name:"Strumica"},69:{code:"STU",name:"Studeničani"},70:{code:"ŠUT",name:"Šuto Orizari"},71:{code:"SVE",name:"Sveti Nikole"},72:{code:"TEA",name:"Tearce"},73:{code:"TET",name:"Tetovo"},74:{code:"VAL",name:"Valandovo"},75:{code:"VAS",name:"Vasilevo"},76:{code:"VEL",name:"Veles"},77:{code:"VEV",name:"Vevčani"},78:{code:"VIN",name:"Vinica"},79:{code:"VRA",name:"Vraneštica"},80:{code:"VRA",name:"Vrapčište"},81:{code:"ZAJ",name:"Zajas"},82:{code:"ZEL",name:"Zelenikovo"},83:{code:"ŽEL",name:"Želino"},84:{code:"ZRN",name:"Zrnovci"}},MG:{1:{code:"AN",name:"Antananarivo"},2:{code:"AS",name:"Antsiranana"},3:{code:"FN",name:"Fianarantsoa"},4:{code:"MJ",name:"Mahajanga"},5:{code:"TM",name:"Toamasina"},6:{code:"TL",name:"Toliara"}},MW:{1:{code:"BLK",name:"Balaka"},2:{code:"BLT",name:"Blantyre"},3:{code:"CKW",name:"Chikwawa"},4:{code:"CRD",name:"Chiradzulu"},5:{code:"CTP",name:"Chitipa"},6:{code:"DDZ",name:"Dedza"},7:{code:"DWA",name:"Dowa"},8:{code:"KRG",name:"Karonga"},9:{code:"KSG",name:"Kasungu"},10:{code:"LKM",name:"Likoma"},11:{code:"LLG",name:"Lilongwe"},12:{code:"MCG",name:"Machinga"},13:{code:"MGC",name:"Mangochi"},14:{code:"MCH",name:"Mchinji"},15:{code:"MLJ",name:"Mulanje"},16:{code:"MWZ",name:"Mwanza"},17:{code:"MZM",name:"Mzimba"},18:{code:"NTU",name:"Ntcheu"},19:{code:"NKB",name:"Nkhata Bay"},20:{code:"NKH",name:"Nkhotakota"},21:{code:"NSJ",name:"Nsanje"},22:{code:"NTI",name:"Ntchisi"},23:{code:"PHL",name:"Phalombe"},24:{code:"RMP",name:"Rumphi"},25:{code:"SLM",name:"Salima"},26:{code:"THY",name:"Thyolo"},27:{code:"ZBA",name:"Zomba"}},MY:{1:{code:"Johor",name:"Johor"},2:{code:"Kedah",name:"Kedah"},3:{code:"Kelantan",name:"Kelantan"},4:{code:"Labuan",name:"Labuan"},5:{code:"Melaka",name:"Melaka"},6:{code:"Negeri Sembilan",name:"Negeri Sembilan"},7:{code:"Pahang",name:"Pahang"},8:{code:"Perak",name:"Perak"},9:{code:"Perlis",name:"Perlis"},10:{code:"Pulau Pinang",name:"Pulau Pinang"},11:{code:"Sabah",name:"Sabah"},12:{code:"Sarawak",name:"Sarawak"},13:{code:"Selangor",name:"Selangor"},14:{code:"Terengganu",name:"Terengganu"},15:{code:"Kuala Lumpur",name:"Kuala Lumpur"}},MV:{1:{code:"AAD",name:"Ari Atoll Dheknu"},2:{code:"AAU",name:"Ari Atoll Uthuru"},3:{code:"ADD",name:"Addu"},4:{code:"FAA",name:"Faadhippolhu"},5:{code:"FEA",name:"Felidhe Atoll"},6:{code:"FMU",name:"Fua Mulaku"},7:{code:"HAD",name:"Huvadhu Atoll Dhekunu"},8:{code:"HAU",name:"Huvadhu Atoll Uthuru"},9:{code:"HDH",name:"Hadhdhunmathi"},10:{code:"KLH",name:"Kolhumadulu"},11:{code:"MAA",name:"Male Atoll"},12:{code:"MAD",name:"Maalhosmadulu Dhekunu"},13:{code:"MAU",name:"Maalhosmadulu Uthuru"},14:{code:"MLD",name:"Miladhunmadulu Dhekunu"},15:{code:"MLU",name:"Miladhunmadulu Uthuru"},16:{code:"MUA",name:"Mulaku Atoll"},17:{code:"NAD",name:"Nilandhe Atoll Dhekunu"},18:{code:"NAU",name:"Nilandhe Atoll Uthuru"},19:{code:"THD",name:"Thiladhunmathi Dhekunu"},20:{code:"THU",name:"Thiladhunmathi Uthuru"}},ML:{1:{code:"GA",name:"Gao"},2:{code:"KY",name:"Kayes"},3:{code:"KD",name:"Kidal"},4:{code:"KL",name:"Koulikoro"},5:{code:"MP",name:"Mopti"},6:{code:"SG",name:"Segou"},7:{code:"SK",name:"Sikasso"},8:{code:"TB",name:"Tombouctou"},9:{code:"CD",name:"Bamako Capital District"}},MT:{1:{code:"ATT",name:"Attard"},2:{code:"BAL",name:"Balzan"},3:{code:"BGU",name:"Birgu"},4:{code:"BKK",name:"Birkirkara"},5:{code:"BRZ",name:"Birzebbuga"},6:{code:"BOR",name:"Bormla"},7:{code:"DIN",name:"Dingli"},8:{code:"FGU",name:"Fgura"},9:{code:"FLO",name:"Floriana"},10:{code:"GDJ",name:"Gudja"},11:{code:"GZR",name:"Gzira"},12:{code:"GRG",name:"Gargur"},13:{code:"GXQ",name:"Gaxaq"},14:{code:"HMR",name:"Hamrun"},15:{code:"IKL",name:"Iklin"},16:{code:"ISL",name:"Isla"},17:{code:"KLK",name:"Kalkara"},18:{code:"KRK",name:"Kirkop"},19:{code:"LIJ",name:"Lija"},20:{code:"LUQ",name:"Luqa"},21:{code:"MRS",name:"Marsa"},22:{code:"MKL",name:"Marsaskala"},23:{code:"MXL",name:"Marsaxlokk"},24:{code:"MDN",name:"Mdina"},25:{code:"MEL",name:"Melliea"},26:{code:"MGR",name:"Mgarr"},27:{code:"MST",name:"Mosta"},28:{code:"MQA",name:"Mqabba"},29:{code:"MSI",name:"Msida"},30:{code:"MTF",name:"Mtarfa"},31:{code:"NAX",name:"Naxxar"},32:{code:"PAO",name:"Paola"},33:{code:"PEM",name:"Pembroke"},34:{code:"PIE",name:"Pieta"},35:{code:"QOR",name:"Qormi"},36:{code:"QRE",name:"Qrendi"},37:{code:"RAB",name:"Rabat"},38:{code:"SAF",name:"Safi"},39:{code:"SGI",name:"San Giljan"},40:{code:"SLU",name:"Santa Lucija"},41:{code:"SPB",name:"San Pawl il-Bahar"},42:{code:"SGW",name:"San Gwann"},43:{code:"SVE",name:"Santa Venera"},44:{code:"SIG",name:"Siggiewi"},45:{code:"SLM",name:"Sliema"},46:{code:"SWQ",name:"Swieqi"},47:{code:"TXB",name:"Ta Xbiex"},48:{code:"TRX",name:"Tarxien"},49:{code:"VLT",name:"Valletta"},50:{code:"XGJ",name:"Xgajra"},51:{code:"ZBR",name:"Zabbar"},52:{code:"ZBG",name:"Zebbug"},53:{code:"ZJT",name:"Zejtun"},54:{code:"ZRQ",name:"Zurrieq"},55:{code:"FNT",name:"Fontana"},56:{code:"GHJ",name:"Ghajnsielem"},57:{code:"GHR",name:"Gharb"},58:{code:"GHS",name:"Ghasri"},59:{code:"KRC",name:"Kercem"},60:{code:"MUN",name:"Munxar"},61:{code:"NAD",name:"Nadur"},62:{code:"QAL",name:"Qala"},63:{code:"VIC",name:"Victoria"},64:{code:"SLA",name:"San Lawrenz"},65:{code:"SNT",name:"Sannat"},66:{code:"ZAG",name:"Xagra"},67:{code:"XEW",name:"Xewkija"},68:{code:"ZEB",name:"Zebbug"}},MH:{1:{code:"ALG",name:"Ailinginae"},2:{code:"ALL",name:"Ailinglaplap"},3:{code:"ALK",name:"Ailuk"},4:{code:"ARN",name:"Arno"},5:{code:"AUR",name:"Aur"},6:{code:"BKR",name:"Bikar"},7:{code:"BKN",name:"Bikini"},8:{code:"BKK",name:"Bokak"},9:{code:"EBN",name:"Ebon"},10:{code:"ENT",name:"Enewetak"},11:{code:"EKB",name:"Erikub"},12:{code:"JBT",name:"Jabat"},13:{code:"JLT",name:"Jaluit"},14:{code:"JEM",name:"Jemo"},15:{code:"KIL",name:"Kili"},16:{code:"KWJ",name:"Kwajalein"},17:{code:"LAE",name:"Lae"},18:{code:"LIB",name:"Lib"},19:{code:"LKP",name:"Likiep"},20:{code:"MJR",name:"Majuro"},21:{code:"MLP",name:"Maloelap"},22:{code:"MJT",name:"Mejit"},23:{code:"MIL",name:"Mili"},24:{code:"NMK",name:"Namorik"},25:{code:"NAM",name:"Namu"},26:{code:"RGL",name:"Rongelap"},27:{code:"RGK",name:"Rongrik"},28:{code:"TOK",name:"Toke"},29:{code:"UJA",name:"Ujae"},30:{code:"UJL",name:"Ujelang"},31:{code:"UTK",name:"Utirik"},32:{code:"WTH",name:"Wotho"},33:{code:"WTJ",name:"Wotje"}},MQ:{1:{code:"LAJ",name:"L'Ajoupa-Bouillon"},2:{code:"LES",name:"Les Anses-d'Arlet"},3:{code:"BAS",name:"Basse-Pointe"},4:{code:"BEL",name:"Bellefontaine"},5:{code:"LE",name:"Le Carbet"},6:{code:"CAS",name:"Case-Pilote"},7:{code:"LE",name:"Le Diamant"},8:{code:"DUC",name:"Ducos"},9:{code:"FON",name:"Fonds-Saint-Denis"},10:{code:"FOR",name:"Fort-De-France"},11:{code:"LE",name:"Le François"},12:{code:"GRA",name:"Grand'Rivière"},13:{code:"GRO",name:"Gros-Morne"},14:{code:"LE",name:"Le Lamentin"},15:{code:"LE",name:"Le Lorrain"},16:{code:"MAC",name:"Macouba"},17:{code:"LE",name:"Le Marigot"},18:{code:"LE",name:"Le Marin"},19:{code:"LE",name:"Le Morne-Rouge"},20:{code:"LE",name:"Le Morne-Vert"},21:{code:"LE",name:"Le Prêcheur"},22:{code:"RIV",name:"Rivière-Pilote"},23:{code:"RIV",name:"Rivière-Salée"},24:{code:"LE",name:"Le Robert"},25:{code:"SAI",name:"Sainte-Anne"},26:{code:"SAI",name:"Sainte-Luce"},27:{code:"SAI",name:"Sainte-Marie"},28:{code:"SAI",name:"Saint-Esprit"},29:{code:"SAI",name:"Saint-Joseph"},30:{code:"SAI",name:"Saint-Pierre"},31:{code:"SCH",name:"Schœlcher"},32:{code:"LA",name:"La Trinité"},33:{code:"LES",name:"Les Trois-Îlets"},34:{code:"LE",name:"Le Vauclin"}},MR:{1:{code:"AD",name:"Adrar"},2:{code:"AS",name:"Assaba"},3:{code:"BR",name:"Brakna"},4:{code:"DN",name:"Dakhlet Nouadhibou"},5:{code:"GO",name:"Gorgol"},6:{code:"GM",name:"Guidimaka"},7:{code:"HC",name:"Hodh Ech Chargui"},8:{code:"HG",name:"Hodh El Gharbi"},9:{code:"IN",name:"Inchiri"},10:{code:"TA",name:"Tagant"},11:{code:"TZ",name:"Tiris Zemmour"},12:{code:"TR",name:"Trarza"},13:{code:"NO",name:"Nouakchott"}},MU:{1:{code:"AG",name:"Agalega Islands"},2:{code:"BL",name:"Black River"},3:{code:"BR",name:"Beau Bassin-Rose Hill"},4:{code:"CC",name:"Cargados Carajos Shoals (Saint B)"},5:{code:"CU",name:"Curepipe"},6:{code:"FL",name:"Flacq"},7:{code:"GP",name:"Grand Port"},8:{code:"MO",name:"Moka"},9:{code:"PA",name:"Pamplemousses"},10:{code:"PL",name:"Port Louis"},11:{code:"PU",name:"Port Louis"},12:{code:"PW",name:"Plaines Wilhems"},13:{code:"QB",name:"Quatre Bornes"},14:{code:"RO",name:"Rodrigues"},15:{code:"RR",name:"Riviere du Rempart"},16:{code:"SA",name:"Savanne"},17:{code:"VP",name:"Vacoas-Phoenix"}},YT:{1:{code:"DZA",name:"Dzaoudzi"},2:{code:"PAM",name:"Pamandzi"},3:{code:"MAM",name:"Mamoudzou"},4:{code:"DEM",name:"Dembeni"},5:{code:"BAN",name:"Bandrele"},6:{code:"KAN",name:"Kani-Kéli"},7:{code:"BOU",name:"Bouéni"},8:{code:"CHI",name:"Chirongui"},9:{code:"SAD",name:"Sada"},10:{code:"OUA",name:"Ouangani"},11:{code:"CHI",name:"Chiconi"},12:{code:"TSI",name:"Tsingoni"},13:{code:"MTS",name:"M'Tsangamouji"},14:{code:"ACO",name:"Acoua"},15:{code:"MTS",name:"Mtsamboro"},16:{code:"BAN",name:"Bandraboua"},17:{code:"KOU",name:"Koungou"}},MX:{1:{code:"AGU",name:"Aguascalientes"},2:{code:"BCN",name:"Baja California Norte"},3:{code:"BCS",name:"Baja California Sur"},4:{code:"CAM",name:"Campeche"},5:{code:"CHP",name:"Chiapas"},6:{code:"CHH",name:"Chihuahua"},7:{code:"COA",name:"Coahuila de Zaragoza"},8:{code:"COL",name:"Colima"},9:{code:"DIF",name:"Distrito Federal"},10:{code:"DUR",name:"Durango"},11:{code:"GUA",name:"Guanajuato"},12:{code:"GRO",name:"Guerrero"},13:{code:"HID",name:"Hidalgo"},14:{code:"JAL",name:"Jalisco"},15:{code:"MEX",name:"Mexico"},16:{code:"MIC",name:"Michoacan de Ocampo"},17:{code:"MOR",name:"Morelos"},18:{code:"NAY",name:"Nayarit"},19:{code:"NLE",name:"Nuevo Leon"},20:{code:"OAX",name:"Oaxaca"},21:{code:"PUE",name:"Puebla"},22:{code:"QUE",name:"Queretaro de Arteaga"},23:{code:"ROO",name:"Quintana Roo"},24:{code:"SLP",name:"San Luis Potosi"},25:{code:"SIN",name:"Sinaloa"},26:{code:"SON",name:"Sonora"},27:{code:"TAB",name:"Tabasco"},28:{code:"TAM",name:"Tamaulipas"},29:{code:"TLA",name:"Tlaxcala"},30:{code:"VER",name:"Veracruz-Llave"},31:{code:"YUC",name:"Yucatan"},32:{code:"ZAC",name:"Zacatecas"}},FM:{1:{code:"C",name:"Chuuk"},2:{code:"K",name:"Kosrae"},3:{code:"P",name:"Pohnpei"},4:{code:"Y",name:"Yap"}},MD:{1:{code:"GA",name:"Gagauzia"},2:{code:"CU",name:"Chisinau"},3:{code:"BA",name:"Balti"},4:{code:"CA",name:"Cahul"},5:{code:"ED",name:"Edinet"},6:{code:"LA",name:"Lapusna"},7:{code:"OR",name:"Orhei"},8:{code:"SO",name:"Soroca"},9:{code:"TI",name:"Tighina"},10:{code:"UN",name:"Ungheni"},11:{code:"SN",name:"Stânga Nistrului"}},MC:{1:{code:"FV",name:"Fontvieille"},2:{code:"LC",name:"La Condamine"},3:{code:"MV",name:"Monaco-Ville"},4:{code:"MC",name:"Monte-Carlo"}},MN:{1:{code:"1",name:"Ulanbaatar"},2:{code:"035",name:"Orhon"},3:{code:"037",name:"Darhan uul"},4:{code:"039",name:"Hentiy"},5:{code:"041",name:"Hovsgol"},6:{code:"043",name:"Hovd"},7:{code:"046",name:"Uvs"},8:{code:"047",name:"Tov"},9:{code:"049",name:"Selenge"},10:{code:"051",name:"Suhbaatar"},11:{code:"053",name:"Omnogovi"},12:{code:"055",name:"Ovorhangay"},13:{code:"057",name:"Dzavhan"},14:{code:"059",name:"DundgovL"},15:{code:"061",name:"Dornod"},16:{code:"063",name:"Dornogov"},17:{code:"064",name:"Govi-Sumber"},18:{code:"065",name:"Govi-Altay"},19:{code:"067",name:"Bulgan"},20:{code:"069",name:"Bayanhongor"},21:{code:"071",name:"Bayan-Olgiy"},22:{code:"073",name:"Arhangay"}},MS:{1:{code:"A",name:"Saint Anthony"},2:{code:"G",name:"Saint Georges"},3:{code:"P",name:"Saint Peter"}},MA:{1:{code:"AGD",name:"Agadir"},2:{code:"HOC",name:"Al Hoceima"},3:{code:"AZI",name:"Azilal"},4:{code:"BME",name:"Beni Mellal"},5:{code:"BSL",name:"Ben Slimane"},6:{code:"BLM",name:"Boulemane"},7:{code:"CBL",name:"Casablanca"},8:{code:"CHA",name:"Chaouen"},9:{code:"EJA",name:"El Jadida"},10:{code:"EKS",name:"El Kelaa des Sraghna"},11:{code:"ERA",name:"Er Rachidia"},12:{code:"ESS",name:"Essaouira"},13:{code:"FES",name:"Fes"},14:{code:"FIG",name:"Figuig"},15:{code:"GLM",name:"Guelmim"},16:{code:"IFR",name:"Ifrane"},17:{code:"KEN",name:"Kenitra"},18:{code:"KHM",name:"Khemisset"},19:{code:"KHN",name:"Khenifra"},20:{code:"KHO",name:"Khouribga"},21:{code:"LYN",name:"Laayoune"},22:{code:"LAR",name:"Larache"},23:{code:"MRK",name:"Marrakech"},24:{code:"MKN",name:"Meknes"},25:{code:"NAD",name:"Nador"},26:{code:"ORZ",name:"Ouarzazate"},27:{code:"OUJ",name:"Oujda"},28:{code:"RSA",name:"Rabat-Sale"},29:{code:"SAF",name:"Safi"},30:{code:"SET",name:"Settat"},31:{code:"SKA",name:"Sidi Kacem"},32:{code:"TGR",name:"Tangier"},33:{code:"TAN",name:"Tan-Tan"},34:{code:"TAO",name:"Taounate"},35:{code:"TRD",name:"Taroudannt"},36:{code:"TAT",name:"Tata"},37:{code:"TAZ",name:"Taza"},38:{code:"TET",name:"Tetouan"},39:{code:"TIZ",name:"Tiznit"},40:{code:"ADK",name:"Ad Dakhla"},41:{code:"BJD",name:"Boujdour"},42:{code:"ESM",name:"Es Smara"}},MZ:{1:{code:"CD",name:"Cabo Delgado"},2:{code:"GZ",name:"Gaza"},3:{code:"IN",name:"Inhambane"},4:{code:"MN",name:"Manica"},5:{code:"MC",name:"Maputo (city)"},6:{code:"MP",name:"Maputo"},7:{code:"NA",name:"Nampula"},8:{code:"NI",name:"Niassa"},9:{code:"SO",name:"Sofala"},10:{code:"TE",name:"Tete"},11:{code:"ZA",name:"Zambezia"}},MM:{1:{code:"AY",name:"Ayeyarwady"},2:{code:"BG",name:"Bago"},3:{code:"MG",name:"Magway"},4:{code:"MD",name:"Mandalay"},5:{code:"SG",name:"Sagaing"},6:{code:"TN",name:"Tanintharyi"},7:{code:"YG",name:"Yangon"},8:{code:"CH",name:"Chin State"},9:{code:"KC",name:"Kachin State"},10:{code:"KH",name:"Kayah State"},11:{code:"KN",name:"Kayin State"},12:{code:"MN",name:"Mon State"},13:{code:"RK",name:"Rakhine State"},14:{code:"SH",name:"Shan State"}},NA:{1:{code:"CA",name:"Caprivi"},2:{code:"ER",name:"Erongo"},3:{code:"HA",name:"Hardap"},4:{code:"KR",name:"Karas"},5:{code:"KV",name:"Kavango"},6:{code:"KH",name:"Khomas"},7:{code:"KU",name:"Kunene"},8:{code:"OW",name:"Ohangwena"},9:{code:"OK",name:"Omaheke"},10:{code:"OT",name:"Omusati"},11:{code:"ON",name:"Oshana"},12:{code:"OO",name:"Oshikoto"},13:{code:"OJ",name:"Otjozondjupa"}},NR:{1:{code:"AO",name:"Aiwo"},2:{code:"AA",name:"Anabar"},3:{code:"AT",name:"Anetan"},4:{code:"AI",name:"Anibare"},5:{code:"BA",name:"Baiti"},6:{code:"BO",name:"Boe"},7:{code:"BU",name:"Buada"},8:{code:"DE",name:"Denigomodu"},9:{code:"EW",name:"Ewa"},10:{code:"IJ",name:"Ijuw"},11:{code:"ME",name:"Meneng"},12:{code:"NI",name:"Nibok"},13:{code:"UA",name:"Uaboe"},14:{code:"YA",name:"Yaren"}},NP:{1:{code:"BA",name:"Bagmati"},2:{code:"BH",name:"Bheri"},3:{code:"DH",name:"Dhawalagiri"},4:{code:"GA",name:"Gandaki"},5:{code:"JA",name:"Janakpur"},6:{code:"KA",name:"Karnali"},7:{code:"KO",name:"Kosi"},8:{code:"LU",name:"Lumbini"},9:{code:"MA",name:"Mahakali"},10:{code:"ME",name:"Mechi"},11:{code:"NA",name:"Narayani"},12:{code:"RA",name:"Rapti"},13:{code:"SA",name:"Sagarmatha"},14:{code:"SE",name:"Seti"}},NL:{1:{code:"DR",name:"Drenthe"},2:{code:"FL",name:"Flevoland"},3:{code:"FR",name:"Friesland"},4:{code:"GE",name:"Gelderland"},5:{code:"GR",name:"Groningen"},6:{code:"LI",name:"Limburg"},7:{code:"NB",name:"Noord Brabant"},8:{code:"NH",name:"Noord Holland"},9:{code:"OV",name:"Overijssel"},10:{code:"UT",name:"Utrecht"},11:{code:"ZE",name:"Zeeland"},12:{code:"ZH",name:"Zuid Holland"}},AN:{1:{code:"BON",name:"Bonaire"},2:{code:"CUR",name:"Curaçao"},3:{code:"SAB",name:"Saba"},4:{code:"SEU",name:"Sint Eustatius"},5:{code:"SMA",name:"Sint Maarten"}},NC:{1:{code:"L",name:"Iles Loyaute"},2:{code:"N",name:"Nord"},3:{code:"S",name:"Sud"}},NZ:{1:{code:"AUK",name:"Auckland"},2:{code:"BOP",name:"Bay of Plenty"},3:{code:"CAN",name:"Canterbury"},4:{code:"COR",name:"Coromandel"},5:{code:"GIS",name:"Gisborne"},6:{code:"FIO",name:"Fiordland"},7:{code:"HKB",name:"Hawke's Bay"},8:{code:"MBH",name:"Marlborough"},9:{code:"MWT",name:"Manawatu-Wanganui"},10:{code:"MCM",name:"Mt Cook-Mackenzie"},11:{code:"NSN",name:"Nelson"},12:{code:"NTL",name:"Northland"},13:{code:"OTA",name:"Otago"},14:{code:"STL",name:"Southland"},15:{code:"TKI",name:"Taranaki"},16:{code:"WGN",name:"Wellington"},17:{code:"WKO",name:"Waikato"},18:{code:"WAI",name:"Wairprarapa"},19:{code:"WTC",name:"West Coast"}},NI:{1:{code:"AN",name:"Atlantico Norte"},2:{code:"AS",name:"Atlantico Sur"},3:{code:"BO",name:"Boaco"},4:{code:"CA",name:"Carazo"},5:{code:"CI",name:"Chinandega"},6:{code:"CO",name:"Chontales"},7:{code:"ES",name:"Esteli"},8:{code:"GR",name:"Granada"},9:{code:"JI",name:"Jinotega"},10:{code:"LE",name:"Leon"},11:{code:"MD",name:"Madriz"},12:{code:"MN",name:"Managua"},13:{code:"MS",name:"Masaya"},14:{code:"MT",name:"Matagalpa"},15:{code:"NS",name:"Nuevo Segovia"},16:{code:"RS",name:"Rio San Juan"},17:{code:"RI",name:"Rivas"}},NE:{1:{code:"AG",name:"Agadez"},2:{code:"DF",name:"Diffa"},3:{code:"DS",name:"Dosso"},4:{code:"MA",name:"Maradi"},5:{code:"NM",name:"Niamey"},6:{code:"TH",name:"Tahoua"},7:{code:"TL",name:"Tillaberi"},8:{code:"ZD",name:"Zinder"}},NG:{1:{code:"AB",name:"Abia"},2:{code:"CT",name:"Abuja Federal Capital Territory"},3:{code:"AD",name:"Adamawa"},4:{code:"AK",name:"Akwa Ibom"},5:{code:"AN",name:"Anambra"},6:{code:"BC",name:"Bauchi"},7:{code:"BY",name:"Bayelsa"},8:{code:"BN",name:"Benue"},9:{code:"BO",name:"Borno"},10:{code:"CR",name:"Cross River"},11:{code:"DE",name:"Delta"},12:{code:"EB",name:"Ebonyi"},13:{code:"ED",name:"Edo"},14:{code:"EK",name:"Ekiti"},15:{code:"EN",name:"Enugu"},16:{code:"GO",name:"Gombe"},17:{code:"IM",name:"Imo"},18:{code:"JI",name:"Jigawa"},19:{code:"KD",name:"Kaduna"},20:{code:"KN",name:"Kano"},21:{code:"KT",name:"Katsina"},22:{code:"KE",name:"Kebbi"},23:{code:"KO",name:"Kogi"},24:{code:"KW",name:"Kwara"},25:{code:"LA",name:"Lagos"},26:{code:"NA",name:"Nassarawa"},27:{code:"NI",name:"Niger"},28:{code:"OG",name:"Ogun"},29:{code:"ONG",name:"Ondo"},30:{code:"OS",name:"Osun"},31:{code:"OY",name:"Oyo"},32:{code:"PL",name:"Plateau"},33:{code:"RI",name:"Rivers"},34:{code:"SO",name:"Sokoto"},35:{code:"TA",name:"Taraba"},36:{code:"YO",name:"Yobe"},37:{code:"ZA",name:"Zamfara"}},NU:{1:{code:"MAK",name:"Makefu"},2:{code:"TUA",name:"Tuapa"},3:{code:"NAM",name:"Namukulu"},4:{code:"HIK",name:"Hikutavake"},5:{code:"TOI",name:"Toi"},6:{code:"MUT",name:"Mutalau"},7:{code:"LAK",name:"Lakepa"},8:{code:"LIK",name:"Liku"},9:{code:"HAK",name:"Hakupu"},10:{code:"VAI",name:"Vaiea"},11:{code:"AVA",name:"Avatele"},12:{code:"TAM",name:"Tamakautoga"},13:{code:"ALO",name:"Alofi South"},14:{code:"ALO",name:"Alofi North"}},NF:{1:{code:"NOR",name:"Norfolk Island"}},MP:{1:{code:"N",name:"Northern Islands"},2:{code:"R",name:"Rota"},3:{code:"S",name:"Saipan"},4:{code:"T",name:"Tinian"}},NO:{1:{code:"AK",name:"Akershus"},2:{code:"AA",name:"Aust-Agder"},3:{code:"BU",name:"Buskerud"},4:{code:"FM",name:"Finnmark"},5:{code:"HM",name:"Hedmark"},6:{code:"HL",name:"Hordaland"},7:{code:"MR",name:"Møre og Romsdal"},8:{code:"NL",name:"Nordland"},9:{code:"NT",name:"Nord-Trøndelag"},10:{code:"OP",name:"Oppland"},11:{code:"OL",name:"Oslo"},12:{code:"RL",name:"Rogaland"},13:{code:"SJ",name:"Sogn og Fjordane"},14:{code:"ST",name:"Sør-Trøndelag"},15:{code:"SV",name:"Svalbard"},16:{code:"TM",name:"Telemark"},17:{code:"TR",name:"Troms"},18:{code:"VA",name:"Vest-Agder"},19:{code:"VF",name:"Vestfold"},20:{code:"OF",name:"Østfold"}},OM:{1:{code:"DA",name:"Ad Dakhiliyah"},2:{code:"BA",name:"Al Batinah"},3:{code:"WU",name:"Al Wusta"},4:{code:"SH",name:"Ash Sharqiyah"},5:{code:"ZA",name:"Az Zahirah"},6:{code:"MA",name:"Masqat"},7:{code:"MU",name:"Musandam"},8:{code:"ZU",name:"Zufar"}},PK:{1:{code:"B",name:"Balochistan"},2:{code:"T",name:"Federally Administered Tribal Ar"},3:{code:"I",name:"Islamabad Capital Territory"},4:{code:"N",name:"North-West Frontier"},5:{code:"P",name:"Punjab"},6:{code:"S",name:"Sindh"}},PW:{1:{code:"AM",name:"Aimeliik"},2:{code:"AR",name:"Airai"},3:{code:"AN",name:"Angaur"},4:{code:"HA",name:"Hatohobei"},5:{code:"KA",name:"Kayangel"},6:{code:"KO",name:"Koror"},7:{code:"ME",name:"Melekeok"},8:{code:"NA",name:"Ngaraard"},9:{code:"NG",name:"Ngarchelong"},10:{code:"ND",name:"Ngardmau"},11:{code:"NT",name:"Ngatpang"},12:{code:"NC",name:"Ngchesar"},13:{code:"NR",name:"Ngeremlengui"},14:{code:"NW",name:"Ngiwal"},15:{code:"PE",name:"Peleliu"},16:{code:"SO",name:"Sonsorol"}},PA:{1:{code:"BT",name:"Bocas del Toro"},2:{code:"CH",name:"Chiriqui"},3:{code:"CC",name:"Cocle"},4:{code:"CL",name:"Colon"},5:{code:"DA",name:"Darien"},6:{code:"HE",name:"Herrera"},7:{code:"LS",name:"Los Santos"},8:{code:"PA",name:"Panama"},9:{code:"SB",name:"San Blas"},10:{code:"VG",name:"Veraguas"}},PG:{1:{code:"BV",name:"Bougainville"},2:{code:"CE",name:"Central"},3:{code:"CH",name:"Chimbu"},4:{code:"EH",name:"Eastern Highlands"},5:{code:"EB",name:"East New Britain"},6:{code:"ES",name:"East Sepik"},7:{code:"EN",name:"Enga"},8:{code:"GU",name:"Gulf"},9:{code:"MD",name:"Madang"},10:{code:"MN",name:"Manus"},11:{code:"MB",name:"Milne Bay"},12:{code:"MR",name:"Morobe"},13:{code:"NC",name:"National Capital"},14:{code:"NI",name:"New Ireland"},15:{code:"NO",name:"Northern"},16:{code:"SA",name:"Sandaun"},17:{code:"SH",name:"Southern Highlands"},18:{code:"WE",name:"Western"},19:{code:"WH",name:"Western Highlands"},20:{code:"WB",name:"West New Britain"}},PY:{1:{code:"AG",name:"Alto Paraguay"},2:{code:"AN",name:"Alto Parana"},3:{code:"AM",name:"Amambay"},4:{code:"AS",name:"Asuncion"},5:{code:"BO",name:"Boqueron"},6:{code:"CG",name:"Caaguazu"},7:{code:"CZ",name:"Caazapa"},8:{code:"CN",name:"Canindeyu"},9:{code:"CE",name:"Central"},10:{code:"CC",name:"Concepcion"},11:{code:"CD",name:"Cordillera"},12:{code:"GU",name:"Guaira"},13:{code:"IT",name:"Itapua"},14:{code:"MI",name:"Misiones"},15:{code:"NE",name:"Neembucu"},16:{code:"PA",name:"Paraguari"},17:{code:"PH",name:"Presidente Hayes"},18:{code:"SP",name:"San Pedro"}},PE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Ancash"},3:{code:"AP",name:"Apurimac"},4:{code:"AR",name:"Arequipa"},5:{code:"AY",name:"Ayacucho"},6:{code:"CJ",name:"Cajamarca"},7:{code:"CL",name:"Callao"},8:{code:"CU",name:"Cusco"},9:{code:"HV",name:"Huancavelica"},10:{code:"HO",name:"Huanuco"},11:{code:"IC",name:"Ica"},12:{code:"JU",name:"Junin"},13:{code:"LD",name:"La Libertad"},14:{code:"LY",name:"Lambayeque"},15:{code:"LI",name:"Lima"},16:{code:"LO",name:"Loreto"},17:{code:"MD",name:"Madre de Dios"},18:{code:"MO",name:"Moquegua"},19:{code:"PA",name:"Pasco"},20:{code:"PI",name:"Piura"},21:{code:"PU",name:"Puno"},22:{code:"SM",name:"San Martin"},23:{code:"TA",name:"Tacna"},24:{code:"TU",name:"Tumbes"},25:{code:"UC",name:"Ucayali"}},PH:{1:{code:"ABR",name:"Abra"},2:{code:"ANO",name:"Agusan del Norte"},3:{code:"ASU",name:"Agusan del Sur"},4:{code:"AKL",name:"Aklan"},5:{code:"ALB",name:"Albay"},6:{code:"ANT",name:"Antique"},7:{code:"APY",name:"Apayao"},8:{code:"AUR",name:"Aurora"},9:{code:"BAS",name:"Basilan"},10:{code:"BTA",name:"Bataan"},11:{code:"BTE",name:"Batanes"},12:{code:"BTG",name:"Batangas"},13:{code:"BLR",name:"Biliran"},14:{code:"BEN",name:"Benguet"},15:{code:"BOL",name:"Bohol"},16:{code:"BUK",name:"Bukidnon"},17:{code:"BUL",name:"Bulacan"},18:{code:"CAG",name:"Cagayan"},19:{code:"CNO",name:"Camarines Norte"},20:{code:"CSU",name:"Camarines Sur"},21:{code:"CAM",name:"Camiguin"},22:{code:"CAP",name:"Capiz"},23:{code:"CAT",name:"Catanduanes"},24:{code:"CAV",name:"Cavite"},25:{code:"CEB",name:"Cebu"},26:{code:"CMP",name:"Compostela"},27:{code:"DNO",name:"Davao del Norte"},28:{code:"DSU",name:"Davao del Sur"},29:{code:"DOR",name:"Davao Oriental"},30:{code:"ESA",name:"Eastern Samar"},31:{code:"GUI",name:"Guimaras"},32:{code:"IFU",name:"Ifugao"},33:{code:"INO",name:"Ilocos Norte"},34:{code:"ISU",name:"Ilocos Sur"},35:{code:"ILO",name:"Iloilo"},36:{code:"ISA",name:"Isabela"},37:{code:"KAL",name:"Kalinga"},38:{code:"LAG",name:"Laguna"},39:{code:"LNO",name:"Lanao del Norte"},40:{code:"LSU",name:"Lanao del Sur"},41:{code:"UNI",name:"La Union"},42:{code:"LEY",name:"Leyte"},43:{code:"MAG",name:"Maguindanao"},44:{code:"MRN",name:"Marinduque"},45:{code:"MSB",name:"Masbate"},46:{code:"MIC",name:"Mindoro Occidental"},47:{code:"MIR",name:"Mindoro Oriental"},48:{code:"MSC",name:"Misamis Occidental"},49:{code:"MOR",name:"Misamis Oriental"},50:{code:"MOP",name:"Mountain"},51:{code:"NOC",name:"Negros Occidental"},52:{code:"NOR",name:"Negros Oriental"},53:{code:"NCT",name:"North Cotabato"},54:{code:"NSM",name:"Northern Samar"},55:{code:"NEC",name:"Nueva Ecija"},56:{code:"NVZ",name:"Nueva Vizcaya"},57:{code:"PLW",name:"Palawan"},58:{code:"PMP",name:"Pampanga"},59:{code:"PNG",name:"Pangasinan"},60:{code:"QZN",name:"Quezon"},61:{code:"QRN",name:"Quirino"},62:{code:"RIZ",name:"Rizal"},63:{code:"ROM",name:"Romblon"},64:{code:"SMR",name:"Samar"},65:{code:"SRG",name:"Sarangani"},66:{code:"SQJ",name:"Siquijor"},67:{code:"SRS",name:"Sorsogon"},68:{code:"SCO",name:"South Cotabato"},69:{code:"SLE",name:"Southern Leyte"},70:{code:"SKU",name:"Sultan Kudarat"},71:{code:"SLU",name:"Sulu"},72:{code:"SNO",name:"Surigao del Norte"},73:{code:"SSU",name:"Surigao del Sur"},74:{code:"TAR",name:"Tarlac"},75:{code:"TAW",name:"Tawi-Tawi"},76:{code:"ZBL",name:"Zambales"},77:{code:"ZNO",name:"Zamboanga del Norte"},78:{code:"ZSU",name:"Zamboanga del Sur"},79:{code:"ZSI",name:"Zamboanga Sibugay"}},PN:{1:{code:"PIT",name:"Pitcairn Island"}},PL:{1:{code:"DO",name:"Dolnośląskie"},2:{code:"KP",name:"Kujawsko-Pomorskie"},3:{code:"LL",name:"Lubelskie"},4:{code:"LU",name:"Lubuskie"},5:{code:"LO",name:"Łódzkie"},6:{code:"ML",name:"Małopolskie"},7:{code:"MZ",name:"Mazowieckie"},8:{code:"OP",name:"Opolskie"},9:{code:"PP",name:"Podkarpackie"},10:{code:"PL",name:"Podlaskie"},11:{code:"PM",name:"Pomorskie"},12:{code:"SL",name:"Śląskie"},13:{code:"SW",name:"Świętokrzyskie"},14:{code:"WM",name:"Warmińsko-Mazurskie"},15:{code:"WP",name:"Wielkopolskie"},16:{code:"ZA",name:"Zachodniopomorskie"}},PT:{1:{code:"AC",name:"Açores"},2:{code:"AV",name:"Aveiro"},3:{code:"BE",name:"Beja"},4:{code:"BR",name:"Braga"},5:{code:"BA",name:"Bragança"},6:{code:"CB",name:"Castelo Branco"},7:{code:"CO",name:"Coimbra"},8:{code:"EV",name:"évora"},9:{code:"FA",name:"Faro"},10:{code:"GU",name:"Guarda"},12:{code:"LE",name:"Leiria"},13:{code:"LI",name:"Lisboa"},14:{code:"ME",name:"Madeira"},15:{code:"PO",name:"Portalegre"},16:{code:"PR",name:"Porto"},17:{code:"SA",name:"Santarém"},18:{code:"SE",name:"SetÚbal"},19:{code:"VC",name:"Viana do Castelo"},20:{code:"VR",name:"Vila Real"},21:{code:"VI",name:"Viseu"}},PR:{1:{code:"A-A",name:"Añasco"},2:{code:"ADJ",name:"Adjuntas"},3:{code:"AGU",name:"Aguada"},4:{code:"AGU",name:"Aguadilla"},5:{code:"AGU",name:"Aguas Buenas"},6:{code:"AIB",name:"Aibonito"},7:{code:"ARE",name:"Arecibo"},8:{code:"ARR",name:"Arroyo"},9:{code:"BAR",name:"Barceloneta"},10:{code:"BAR",name:"Barranquitas"},11:{code:"BAY",name:"Bayamón"},12:{code:"CAB",name:"Cabo Rojo"},13:{code:"CAG",name:"Caguas"},14:{code:"CAM",name:"Camuy"},15:{code:"CAN",name:"Canóvanas"},16:{code:"CAR",name:"Carolina"},17:{code:"CAT",name:"Cataño"},18:{code:"CAY",name:"Cayey"},19:{code:"CEI",name:"Ceiba"},20:{code:"CIA",name:"Ciales"},21:{code:"CID",name:"Cidra"},22:{code:"COA",name:"Coamo"},23:{code:"COM",name:"Comerío"},24:{code:"COR",name:"Corozal"},25:{code:"CUL",name:"Culebra"},26:{code:"DOR",name:"Dorado"},27:{code:"FAJ",name:"Fajardo"},28:{code:"FLO",name:"Florida"},29:{code:"GUA",name:"Guayama"},30:{code:"GUA",name:"Guayanilla"},31:{code:"GUA",name:"Guaynabo"},32:{code:"GUR",name:"Gurabo"},33:{code:"GU¡",name:"Guánica"},34:{code:"HAT",name:"Hatillo"},35:{code:"HOR",name:"Hormigueros"},36:{code:"HUM",name:"Humacao"},37:{code:"ISA",name:"Isabela"},38:{code:"JAY",name:"Jayuya"},39:{code:"JUA",name:"Juana Díaz"},40:{code:"JUN",name:"Juncos"},41:{code:"LAJ",name:"Lajas"},42:{code:"LAR",name:"Lares"},43:{code:"LAS",name:"Las Marías"},44:{code:"LAS",name:"Las Piedras"},45:{code:"LOÕ",name:"Loíza"},46:{code:"LUQ",name:"Luquillo"},47:{code:"MAN",name:"Manatí"},48:{code:"MAR",name:"Maricao"},49:{code:"MAU",name:"Maunabo"},50:{code:"MAY",name:"Mayagüez"},51:{code:"MOC",name:"Moca"},52:{code:"MOR",name:"Morovis"},53:{code:"NAG",name:"Naguabo"},54:{code:"NAR",name:"Naranjito"},55:{code:"ORO",name:"Orocovis"},56:{code:"PAT",name:"Patillas"},57:{code:"PE-",name:"Peñuelas"},58:{code:"PON",name:"Ponce"},59:{code:"QUE",name:"Quebradillas"},60:{code:"RIN",name:"Rincón"},61:{code:"RIO",name:"Rio Grande"},62:{code:"SAB",name:"Sabana Grande"},63:{code:"SAL",name:"Salinas"},64:{code:"SAN",name:"San Germàn"},65:{code:"SAN",name:"San Juan"},66:{code:"SAN",name:"San Lorenzo"},67:{code:"SAN",name:"San Sebastiàn"},68:{code:"SAN",name:"Santa Isabel"},69:{code:"TOA",name:"Toa Alta"},70:{code:"TOA",name:"Toa Baja"},71:{code:"TRU",name:"Trujillo Alto"},72:{code:"UTU",name:"Utuado"},73:{code:"VEG",name:"Vega Alta"},74:{code:"VEG",name:"Vega Baja"},75:{code:"VIE",name:"Vieques"},76:{code:"VIL",name:"Villalba"},77:{code:"YAB",name:"Yabucoa"},78:{code:"YAU",name:"Yauco"}},QA:{1:{code:"DW",name:"Ad Dawhah"},2:{code:"GW",name:"Al Ghuwayriyah"},3:{code:"JM",name:"Al Jumayliyah"},4:{code:"KR",name:"Al Khawr"},5:{code:"WK",name:"Al Wakrah"},6:{code:"RN",name:"Ar Rayyan"},7:{code:"JB",name:"Jarayan al Batinah"},8:{code:"MS",name:"Madinat ash Shamal"},9:{code:"UD",name:"Umm Sa'id"},10:{code:"UL",name:"Umm Salal"}},RO:{1:{code:"AB",name:"Alba"},2:{code:"AR",name:"Arad"},3:{code:"AG",name:"Arges"},4:{code:"BC",name:"Bacau"},5:{code:"BH",name:"Bihor"},6:{code:"BN",name:"Bistrita-Nasaud"},7:{code:"BT",name:"Botosani"},8:{code:"BV",name:"Brasov"},9:{code:"BR",name:"Braila"},10:{code:"B",name:"Bucuresti"},11:{code:"BZ",name:"Buzau"},12:{code:"CS",name:"Caras-Severin"},13:{code:"CL",name:"Calarasi"},14:{code:"CJ",name:"Cluj"},15:{code:"CT",name:"Constanta"},16:{code:"CV",name:"Covasna"},17:{code:"DB",name:"Dimbovita"},18:{code:"DJ",name:"Dolj"},19:{code:"GL",name:"Galati"},20:{code:"GR",name:"Giurgiu"},21:{code:"GJ",name:"Gorj"},22:{code:"HR",name:"Harghita"},23:{code:"HD",name:"Hunedoara"},24:{code:"IL",name:"Ialomita"},25:{code:"IS",name:"Iasi"},26:{code:"IF",name:"Ilfov"},27:{code:"MM",name:"Maramures"},28:{code:"MH",name:"Mehedinti"},29:{code:"MS",name:"Mures"},30:{code:"NT",name:"Neamt"},31:{code:"OT",name:"Olt"},32:{code:"PH",name:"Prahova"},33:{code:"SM",name:"Satu-Mare"},34:{code:"SJ",name:"Salaj"},35:{code:"SB",name:"Sibiu"},36:{code:"SV",name:"Suceava"},37:{code:"TR",name:"Teleorman"},38:{code:"TM",name:"Timis"},39:{code:"TL",name:"Tulcea"},40:{code:"VS",name:"Vaslui"},41:{code:"VL",name:"Valcea"},42:{code:"VN",name:"Vrancea"}},RU:{1:{code:"AB",name:"Abakan"},2:{code:"AG",name:"Aginskoye"},3:{code:"AN",name:"Anadyr"},4:{code:"AR",name:"Arkahangelsk"},5:{code:"AS",name:"Astrakhan"},6:{code:"BA",name:"Barnaul"},7:{code:"BE",name:"Belgorod"},8:{code:"BI",name:"Birobidzhan"},9:{code:"BL",name:"Blagoveshchensk"},10:{code:"BR",name:"Bryansk"},11:{code:"CH",name:"Cheboksary"},12:{code:"CL",name:"Chelyabinsk"},13:{code:"CR",name:"Cherkessk"},14:{code:"CI",name:"Chita"},15:{code:"DU",name:"Dudinka"},16:{code:"EL",name:"Elista"},17:{code:"GO",name:"Gomo-Altaysk"},18:{code:"GA",name:"Gorno-Altaysk"},19:{code:"GR",name:"Groznyy"},20:{code:"IR",name:"Irkutsk"},21:{code:"IV",name:"Ivanovo"},22:{code:"IZ",name:"Izhevsk"},23:{code:"KA",name:"Kalinigrad"},24:{code:"KL",name:"Kaluga"},25:{code:"KS",name:"Kasnodar"},26:{code:"KZ",name:"Kazan"},27:{code:"KE",name:"Kemerovo"},28:{code:"KH",name:"Khabarovsk"},29:{code:"KM",name:"Khanty-Mansiysk"},30:{code:"KO",name:"Kostroma"},31:{code:"KR",name:"Krasnodar"},32:{code:"KN",name:"Krasnoyarsk"},33:{code:"KU",name:"Kudymkar"},34:{code:"KG",name:"Kurgan"},35:{code:"KK",name:"Kursk"},36:{code:"KY",name:"Kyzyl"},37:{code:"LI",name:"Lipetsk"},38:{code:"MA",name:"Magadan"},39:{code:"MK",name:"Makhachkala"},40:{code:"MY",name:"Maykop"},41:{code:"MO",name:"Moscow"},42:{code:"MU",name:"Murmansk"},43:{code:"NA",name:"Nalchik"},44:{code:"NR",name:"Naryan Mar"},45:{code:"NZ",name:"Nazran"},46:{code:"NI",name:"Nizhniy Novgorod"},47:{code:"NO",name:"Novgorod"},48:{code:"NV",name:"Novosibirsk"},49:{code:"OM",name:"Omsk"},50:{code:"OR",name:"Orel"},51:{code:"OE",name:"Orenburg"},52:{code:"PA",name:"Palana"},53:{code:"PE",name:"Penza"},54:{code:"PR",name:"Perm"},55:{code:"PK",name:"Petropavlovsk-Kamchatskiy"},56:{code:"PT",name:"Petrozavodsk"},57:{code:"PS",name:"Pskov"},58:{code:"RO",name:"Rostov-na-Donu"},59:{code:"RY",name:"Ryazan"},60:{code:"SL",name:"Salekhard"},61:{code:"SA",name:"Samara"},62:{code:"SR",name:"Saransk"},63:{code:"SV",name:"Saratov"},64:{code:"SM",name:"Smolensk"},65:{code:"SP",name:"St. Petersburg"},66:{code:"ST",name:"Stavropol"},67:{code:"SY",name:"Syktyvkar"},68:{code:"TA",name:"Tambov"},69:{code:"TO",name:"Tomsk"},70:{code:"TU",name:"Tula"},71:{code:"TR",name:"Tura"},72:{code:"TV",name:"Tver"},73:{code:"TY",name:"Tyumen"},74:{code:"UF",name:"Ufa"},75:{code:"UL",name:"Ul'yanovsk"},76:{code:"UU",name:"Ulan-Ude"},77:{code:"US",name:"Ust'-Ordynskiy"},78:{code:"VL",name:"Vladikavkaz"},79:{code:"VA",name:"Vladimir"},80:{code:"VV",name:"Vladivostok"},81:{code:"VG",name:"Volgograd"},82:{code:"VD",name:"Vologda"},83:{code:"VO",name:"Voronezh"},84:{code:"VY",name:"Vyatka"},85:{code:"YA",name:"Yakutsk"},86:{code:"YR",name:"Yaroslavl"},87:{code:"YE",name:"Yekaterinburg"},88:{code:"YO",name:"Yoshkar-Ola"}},RW:{1:{code:"BU",name:"Butare"},2:{code:"BY",name:"Byumba"},3:{code:"CY",name:"Cyangugu"},4:{code:"GK",name:"Gikongoro"},5:{code:"GS",name:"Gisenyi"},6:{code:"GT",name:"Gitarama"},7:{code:"KG",name:"Kibungo"},8:{code:"KY",name:"Kibuye"},9:{code:"KR",name:"Kigali Rurale"},10:{code:"KV",name:"Kigali-ville"},11:{code:"RU",name:"Ruhengeri"},12:{code:"UM",name:"Umutara"}},KN:{1:{code:"CCN",name:"Christ Church Nichola Town"},2:{code:"SAS",name:"Saint Anne Sandy Point"},3:{code:"SGB",name:"Saint George Basseterre"},4:{code:"SGG",name:"Saint George Gingerland"},5:{code:"SJW",name:"Saint James Windward"},6:{code:"SJC",name:"Saint John Capesterre"},7:{code:"SJF",name:"Saint John Figtree"},8:{code:"SMC",name:"Saint Mary Cayon"},9:{code:"CAP",name:"Saint Paul Capesterre"},10:{code:"CHA",name:"Saint Paul Charlestown"},11:{code:"SPB",name:"Saint Peter Basseterre"},12:{code:"STL",name:"Saint Thomas Lowland"},13:{code:"STM",name:"Saint Thomas Middle Island"},14:{code:"TPP",name:"Trinity Palmetto Point"}},LC:{1:{code:"AR",name:"Anse-la-Raye"},2:{code:"CA",name:"Castries"},3:{code:"CH",name:"Choiseul"},4:{code:"DA",name:"Dauphin"},5:{code:"DE",name:"Dennery"},6:{code:"GI",name:"Gros-Islet"},7:{code:"LA",name:"Laborie"},8:{code:"MI",name:"Micoud"},9:{code:"PR",name:"Praslin"},10:{code:"SO",name:"Soufriere"},11:{code:"VF",name:"Vieux-Fort"}},VC:{1:{code:"C",name:"Charlotte"},2:{code:"R",name:"Grenadines"},3:{code:"A",name:"Saint Andrew"},4:{code:"D",name:"Saint David"},5:{code:"G",name:"Saint George"},6:{code:"P",name:"Saint Patrick"}},WS:{1:{code:"AN",name:"A'ana"},2:{code:"AI",name:"Aiga-i-le-Tai"},3:{code:"AT",name:"Atua"},4:{code:"FA",name:"Fa'asaleleaga"},5:{code:"GE",name:"Gaga'emauga"},6:{code:"GF",name:"Gagaifomauga"},7:{code:"PA",name:"Palauli"},8:{code:"SA",name:"Satupa'itea"},9:{code:"TU",name:"Tuamasaga"},10:{code:"VF",name:"Va'a-o-Fonoti"},11:{code:"VS",name:"Vaisigano"}},SM:{1:{code:"AC",name:"Acquaviva"},2:{code:"BM",name:"Borgo Maggiore"},3:{code:"CH",name:"Chiesanuova"},4:{code:"DO",name:"Domagnano"},5:{code:"FA",name:"Faetano"},6:{code:"FI",name:"Fiorentino"},7:{code:"MO",name:"Montegiardino"},8:{code:"SM",name:"Citta di San Marino"},9:{code:"SE",name:"Serravalle"}},ST:{1:{code:"S",name:"Sao Tome"},2:{code:"P",name:"Principe"}},SA:{1:{code:"BH",name:"Al Bahah"},2:{code:"HS",name:"Al Hudud ash Shamaliyah"},3:{code:"JF",name:"Al Jawf"},4:{code:"MD",name:"Al Madinah"},5:{code:"QS",name:"Al Qasim"},6:{code:"RD",name:"Ar Riyad"},7:{code:"AQ",name:"Ash Sharqiyah (Eastern)"},8:{code:"AS",name:"'Asir"},9:{code:"HL",name:"Ha'il"},10:{code:"JZ",name:"Jizan"},11:{code:"ML",name:"Makkah"},12:{code:"NR",name:"Najran"},13:{code:"TB",name:"Tabuk"}},SN:{1:{code:"DA",name:"Dakar"},2:{code:"DI",name:"Diourbel"},3:{code:"FA",name:"Fatick"},4:{code:"KA",name:"Kaolack"},5:{code:"KO",name:"Kolda"},6:{code:"LO",name:"Louga"},7:{code:"MA",name:"Matam"},8:{code:"SL",name:"Saint-Louis"},9:{code:"TA",name:"Tambacounda"},10:{code:"TH",name:"Thies"},11:{code:"ZI",name:"Ziguinchor"}},SC:{1:{code:"AP",name:"Anse aux Pins"},2:{code:"AB",name:"Anse Boileau"},3:{code:"AE",name:"Anse Etoile"},4:{code:"AL",name:"Anse Louis"},5:{code:"AR",name:"Anse Royale"},6:{code:"BL",name:"Baie Lazare"},7:{code:"BS",name:"Baie Sainte Anne"},8:{code:"BV",name:"Beau Vallon"},9:{code:"BA",name:"Bel Air"},10:{code:"BO",name:"Bel Ombre"},11:{code:"CA",name:"Cascade"},12:{code:"GL",name:"Glacis"},13:{code:"GM",name:"Grand' Anse (on Mahe)"},14:{code:"GP",name:"Grand' Anse (on Praslin)"},15:{code:"DG",name:"La Digue"},16:{code:"RA",name:"La Riviere Anglaise"},17:{code:"MB",name:"Mont Buxton"},18:{code:"MF",name:"Mont Fleuri"},19:{code:"PL",name:"Plaisance"},20:{code:"PR",name:"Pointe La Rue"},21:{code:"PG",name:"Port Glaud"},22:{code:"SL",name:"Saint Louis"},23:{code:"TA",name:"Takamaka"}},SL:{1:{code:"E",name:"Eastern"},2:{code:"N",name:"Northern"},3:{code:"S",name:"Southern"},4:{code:"W",name:"Western"}},SK:{1:{code:"BA",name:"Banskobystricky"},2:{code:"BR",name:"Bratislavsky"},3:{code:"KO",name:"Kosicky"},4:{code:"NI",name:"Nitriansky"},5:{code:"PR",name:"Presovsky"},6:{code:"TC",name:"Trenciansky"},7:{code:"TV",name:"Trnavsky"},8:{code:"ZI",name:"Zilinsky"}},SI:{1:{code:"4",name:"Štajerska"},2:{code:"2A",name:"Gorenjska"},3:{code:"5",name:"Prekmurje"},4:{code:"3",name:"Koroška"},5:{code:"2B",name:"Notranjska"},6:{code:"1",name:"Primorska"},7:{code:"2C",name:"Dolenjska"},8:{code:"2C",name:"Bela Krajina"}},SB:{1:{code:"CE",name:"Central"},2:{code:"CH",name:"Choiseul"},3:{code:"GC",name:"Guadalcanal"},4:{code:"HO",name:"Honiara"},5:{code:"IS",name:"Isabel"},6:{code:"MK",name:"Makira"},7:{code:"ML",name:"Malaita"},8:{code:"RB",name:"Rennell and Bellona"},9:{code:"TM",name:"Temotu"},10:{code:"WE",name:"Western"}},SO:{1:{code:"AW",name:"Awdal"},2:{code:"BK",name:"Bakool"},3:{code:"BN",name:"Banaadir"},4:{code:"BR",name:"Bari"},5:{code:"BY",name:"Bay"},6:{code:"GA",name:"Galguduud"},7:{code:"GE",name:"Gedo"},8:{code:"HI",name:"Hiiraan"},9:{code:"JD",name:"Jubbada Dhexe"},10:{code:"JH",name:"Jubbada Hoose"},11:{code:"MU",name:"Mudug"},12:{code:"NU",name:"Nugaal"},13:{code:"SA",name:"Sanaag"},14:{code:"SD",name:"Shabeellaha Dhexe"},15:{code:"SH",name:"Shabeellaha Hoose"},16:{code:"SL",name:"Sool"},17:{code:"TO",name:"Togdheer"},18:{code:"WG",name:"Woqooyi Galbeed"}},ZA:{1:{code:"EC",name:"Eastern Cape"},2:{code:"FS",name:"Free State"},3:{code:"GT",name:"Gauteng"},4:{code:"KN",name:"KwaZulu-Natal"},5:{code:"LP",name:"Limpopo"},6:{code:"MP",name:"Mpumalanga"},7:{code:"NW",name:"North West"},8:{code:"NC",name:"Northern Cape"},9:{code:"WC",name:"Western Cape"}},ES:{1:{code:"CA",name:"La Coruña"},2:{code:"AL",name:"Álava"},3:{code:"AB",name:"Albacete"},4:{code:"AC",name:"Alicante"},5:{code:"AM",name:"Almeria"},6:{code:"AS",name:"Asturias"},7:{code:"AV",name:"Ávila"},8:{code:"BJ",name:"Badajoz"},9:{code:"IB",name:"Baleares"},10:{code:"BA",name:"Barcelona"},11:{code:"BU",name:"Burgos"},12:{code:"CC",name:"Cáceres"},13:{code:"CZ",name:"Cádiz"},14:{code:"CT",name:"Cantabria"},15:{code:"CL",name:"Castellón"},16:{code:"CE",name:"Ceuta"},17:{code:"CR",name:"Ciudad Real"},18:{code:"CD",name:"Córdoba"},19:{code:"CU",name:"Cuenca"},20:{code:"GI",name:"Gerona"},21:{code:"GD",name:"Granada"},22:{code:"GJ",name:"Guadalajara"},23:{code:"GP",name:"Guipúzcoa"},24:{code:"HL",name:"Huelva"},25:{code:"HS",name:"Huesca"},26:{code:"JN",name:"Jaén"},27:{code:"RJ",name:"La Rioja"},28:{code:"PM",name:"Las Palmas"},29:{code:"LE",name:"León"},30:{code:"LL",name:"Lérida"},31:{code:"LG",name:"Lugo"},32:{code:"MD",name:"Madrid"},33:{code:"MA",name:"Málaga"},34:{code:"ML",name:"Melilla"},35:{code:"MU",name:"Murcia"},36:{code:"NV",name:"Navarra"},37:{code:"OU",name:"Ourense"},38:{code:"PL",name:"Palencia"},39:{code:"PO",name:"Pontevedra"},40:{code:"SL",name:"Salamanca"},41:{code:"SC",name:"Santa Cruz de Tenerife"},42:{code:"SG",name:"Segovia"},43:{code:"SV",name:"Sevilla"},44:{code:"SO",name:"Soria"},45:{code:"TA",name:"Tarragona"},46:{code:"TE",name:"Teruel"},47:{code:"TO",name:"Toledo"},48:{code:"VC",name:"Valencia"},49:{code:"VD",name:"Valladolid"},50:{code:"VZ",name:"Vizcaya"},51:{code:"ZM",name:"Zamora"},52:{code:"ZR",name:"Zaragoza"}},LK:{1:{code:"CE",name:"Central"},2:{code:"EA",name:"Eastern"},3:{code:"NC",name:"North Central"},4:{code:"NO",name:"Northern"},5:{code:"NW",name:"North Western"},6:{code:"SA",name:"Sabaragamuwa"},7:{code:"SO",name:"Southern"},8:{code:"UV",name:"Uva"},9:{code:"WE",name:"Western"}},SH:{1:{code:"A",name:"Ascension"},2:{code:"S",name:"Saint Helena"},3:{code:"T",name:"Tristan da Cunha"}},PM:{1:{code:"P",name:"Saint Pierre"},2:{code:"M",name:"Miquelon"}},SD:{1:{code:"ANL",name:"A'ali an Nil"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BRT",name:"Al Buhayrat"},4:{code:"JZR",name:"Al Jazirah"},5:{code:"KRT",name:"Al Khartum"},6:{code:"QDR",name:"Al Qadarif"},7:{code:"WDH",name:"Al Wahdah"},8:{code:"ANB",name:"An Nil al Abyad"},9:{code:"ANZ",name:"An Nil al Azraq"},10:{code:"ASH",name:"Ash Shamaliyah"},11:{code:"BJA",name:"Bahr al Jabal"},12:{code:"GIS",name:"Gharb al Istiwa'iyah"},13:{code:"GBG",name:"Gharb Bahr al Ghazal"},14:{code:"GDA",name:"Gharb Darfur"},15:{code:"GKU",name:"Gharb Kurdufan"},16:{code:"JDA",name:"Janub Darfur"},17:{code:"JKU",name:"Janub Kurdufan"},18:{code:"JQL",name:"Junqali"},19:{code:"KSL",name:"Kassala"},20:{code:"NNL",name:"Nahr an Nil"},21:{code:"SBG",name:"Shamal Bahr al Ghazal"},22:{code:"SDA",name:"Shamal Darfur"},23:{code:"SKU",name:"Shamal Kurdufan"},24:{code:"SIS",name:"Sharq al Istiwa'iyah"},25:{code:"SNR",name:"Sinnar"},26:{code:"WRB",name:"Warab"}},SR:{1:{code:"BR",name:"Brokopondo"},2:{code:"CM",name:"Commewijne"},3:{code:"CR",name:"Coronie"},4:{code:"MA",name:"Marowijne"},5:{code:"NI",name:"Nickerie"},6:{code:"PA",name:"Para"},7:{code:"PM",name:"Paramaribo"},9:{code:"SA",name:"Saramacca"},10:{code:"SI",name:"Sipaliwini"},11:{code:"WA",name:"Wanica"}},SZ:{1:{code:"H",name:"Hhohho"},2:{code:"L",name:"Lubombo"},3:{code:"M",name:"Manzini"},4:{code:"S",name:"Shishelweni"}},SE:{1:{code:"K",name:"Blekinge"},2:{code:"W",name:"Dalama"},3:{code:"I",name:"Gotland"},4:{code:"X",name:"Gävleborg"},5:{code:"N",name:"Halland"},6:{code:"Z",name:"Jämtland"},7:{code:"F",name:"Jönköping"},8:{code:"H",name:"Kalmar"},9:{code:"G",name:"Kronoberg"},10:{code:"BD",name:"Norrbotten"},11:{code:"M",name:"Skåne"},12:{code:"AB",name:"Stockholm"},13:{code:"D",name:"Södermanland"},14:{code:"C",name:"Uppsala"},15:{code:"S",name:"Värmland"},16:{code:"AC",name:"Västerbotten"},17:{code:"Y",name:"Västernorrland"},18:{code:"U",name:"Västmanland"},19:{code:"O",name:"Västra Götaland"},20:{code:"T",name:"Örebro"},21:{code:"E",name:"Östergötland"}},CH:{1:{code:"AG",name:"Aargau"},2:{code:"AR",name:"Appenzell Ausserrhoden"},3:{code:"AI",name:"Appenzell Innerrhoden"},4:{code:"BS",name:"Basel-Stadt"},5:{code:"BL",name:"Basel-Landschaft"},6:{code:"BE",name:"Bern"},7:{code:"FR",name:"Fribourg"},8:{code:"GE",name:"Genève"},9:{code:"GL",name:"Glarus"},10:{code:"GR",name:"Graubünden"},11:{code:"JU",name:"Jura"},12:{code:"LU",name:"Lucerne"},13:{code:"NE",name:"Neuchâtel"},14:{code:"NW",name:"Nidwalden"},15:{code:"OW",name:"Obwalden"},16:{code:"SG",name:"St. Gallen"},17:{code:"SH",name:"Schaffhausen"},18:{code:"SZ",name:"Schwyz"},19:{code:"SO",name:"Solothurn"},20:{code:"TG",name:"Thurgau"},21:{code:"TI",name:"Ticino"},22:{code:"UR",name:"Uri"},23:{code:"VS",name:"Valais"},24:{code:"VD",name:"Vaud"},25:{code:"ZG",name:"Zug"},26:{code:"ZH",name:"Zürich"}},SY:{1:{code:"HA",name:"Al Hasakah"},2:{code:"LA",name:"Al Ladhiqiyah"},3:{code:"QU",name:"Al Qunaytirah"},4:{code:"RQ",name:"Ar Raqqah"},5:{code:"SU",name:"As Suwayda"},6:{code:"DA",name:"Dara"},7:{code:"DZ",name:"Dayr az Zawr"},8:{code:"DI",name:"Dimashq"},9:{code:"HL",name:"Halab"},10:{code:"HM",name:"Hamah"},11:{code:"HI",name:"Hims"},12:{code:"ID",name:"Idlib"},13:{code:"RD",name:"Rif Dimashq"},14:{code:"TA",name:"Tartus"}},TW:{1:{code:"CH",name:"Chang-hua"},2:{code:"CI",name:"Chia-i"},3:{code:"HS",name:"Hsin-chu"},4:{code:"HL",name:"Hua-lien"},5:{code:"IL",name:"I-lan"},6:{code:"KH",name:"Kao-hsiung county"},7:{code:"KM",name:"Kin-men"},8:{code:"LC",name:"Lien-chiang"},9:{code:"ML",name:"Miao-li"},10:{code:"NT",name:"Nan-t'ou"},11:{code:"PH",name:"P'eng-hu"},12:{code:"PT",name:"P'ing-tung"},13:{code:"TG",name:"T'ai-chung"},14:{code:"TA",name:"T'ai-nan"},15:{code:"TP",name:"T'ai-pei county"},16:{code:"TT",name:"T'ai-tung"},17:{code:"TY",name:"T'ao-yuan"},18:{code:"YL",name:"Yun-lin"},19:{code:"CC",name:"Chia-i city"},20:{code:"CL",name:"Chi-lung"},21:{code:"HC",name:"Hsin-chu"},22:{code:"TH",name:"T'ai-chung"},23:{code:"TN",name:"T'ai-nan"},24:{code:"KC",name:"Kao-hsiung city"},25:{code:"TC",name:"T'ai-pei city"}},TJ:{1:{code:"GB",name:"Gorno-Badakhstan"},2:{code:"KT",name:"Khatlon"},3:{code:"SU",name:"Sughd"}},TZ:{1:{code:"AR",name:"Arusha"},2:{code:"DS",name:"Dar es Salaam"},3:{code:"DO",name:"Dodoma"},4:{code:"IR",name:"Iringa"},5:{code:"KA",name:"Kagera"},6:{code:"KI",name:"Kigoma"},7:{code:"KJ",name:"Kilimanjaro"},8:{code:"LN",name:"Lindi"},9:{code:"MY",name:"Manyara"},10:{code:"MR",name:"Mara"},11:{code:"MB",name:"Mbeya"},12:{code:"MO",name:"Morogoro"},13:{code:"MT",name:"Mtwara"},14:{code:"MW",name:"Mwanza"},15:{code:"PN",name:"Pemba North"},16:{code:"PS",name:"Pemba South"},17:{code:"PW",name:"Pwani"},18:{code:"RK",name:"Rukwa"},19:{code:"RV",name:"Ruvuma"},20:{code:"SH",name:"Shinyanga"},21:{code:"SI",name:"Singida"},22:{code:"TB",name:"Tabora"},23:{code:"TN",name:"Tanga"},24:{code:"ZC",name:"Zanzibar Central/South"},25:{code:"ZN",name:"Zanzibar North"},26:{code:"ZU",name:"Zanzibar Urban/West"}},TH:{1:{code:"Amnat Charoen",name:"Amnat Charoen"},2:{code:"Ang Thong",name:"Ang Thong"},3:{code:"Ayutthaya",name:"Ayutthaya"},4:{code:"Bangkok",name:"Bangkok"},5:{code:"Buriram",name:"Buriram"},6:{code:"Chachoengsao",name:"Chachoengsao"},7:{code:"Chai Nat",name:"Chai Nat"},8:{code:"Chaiyaphum",name:"Chaiyaphum"},9:{code:"Chanthaburi",name:"Chanthaburi"},10:{code:"Chiang Mai",name:"Chiang Mai"},11:{code:"Chiang Rai",name:"Chiang Rai"},12:{code:"Chon Buri",name:"Chon Buri"},13:{code:"Chumphon",name:"Chumphon"},14:{code:"Kalasin",name:"Kalasin"},15:{code:"Kamphaeng Phet",name:"Kamphaeng Phet"},16:{code:"Kanchanaburi",name:"Kanchanaburi"},17:{code:"Khon Kaen",name:"Khon Kaen"},18:{code:"Krabi",name:"Krabi"},19:{code:"Lampang",name:"Lampang"},20:{code:"Lamphun",name:"Lamphun"},21:{code:"Loei",name:"Loei"},22:{code:"Lop Buri",name:"Lop Buri"},23:{code:"Mae Hong Son",name:"Mae Hong Son"},24:{code:"Maha Sarakham",name:"Maha Sarakham"},25:{code:"Mukdahan",name:"Mukdahan"},26:{code:"Nakhon Nayok",name:"Nakhon Nayok"},27:{code:"Nakhon Pathom",name:"Nakhon Pathom"},28:{code:"Nakhon Phanom",name:"Nakhon Phanom"},29:{code:"Nakhon Ratchasima",name:"Nakhon Ratchasima"},30:{code:"Nakhon Sawan",name:"Nakhon Sawan"},31:{code:"Nakhon Si Thammarat",name:"Nakhon Si Thammarat"},32:{code:"Nan",name:"Nan"},33:{code:"Narathiwat",name:"Narathiwat"},34:{code:"Nong Bua Lamphu",name:"Nong Bua Lamphu"},35:{code:"Nong Khai",name:"Nong Khai"},36:{code:"Nonthaburi",name:"Nonthaburi"},37:{code:"Pathum Thani",name:"Pathum Thani"},38:{code:"Pattani",name:"Pattani"},39:{code:"Phangnga",name:"Phangnga"},40:{code:"Phatthalung",name:"Phatthalung"},41:{code:"Phayao",name:"Phayao"},42:{code:"Phetchabun",name:"Phetchabun"},43:{code:"Phetchaburi",name:"Phetchaburi"},44:{code:"Phichit",name:"Phichit"},45:{code:"Phitsanulok",name:"Phitsanulok"},46:{code:"Phrae",name:"Phrae"},47:{code:"Phuket",name:"Phuket"},48:{code:"Prachin Buri",name:"Prachin Buri"},49:{code:"Prachuap Khiri Khan",name:"Prachuap Khiri Khan"},50:{code:"Ranong",name:"Ranong"},51:{code:"Ratchaburi",name:"Ratchaburi"},52:{code:"Rayong",name:"Rayong"},53:{code:"Roi Et",name:"Roi Et"},54:{code:"Sa Kaeo",name:"Sa Kaeo"},55:{code:"Sakon Nakhon",name:"Sakon Nakhon"},56:{code:"Samut Prakan",name:"Samut Prakan"},57:{code:"Samut Sakhon",name:"Samut Sakhon"},58:{code:"Samut Songkhram",name:"Samut Songkhram"},59:{code:"Sara Buri",name:"Sara Buri"},60:{code:"Satun",name:"Satun"},61:{code:"Sing Buri",name:"Sing Buri"},62:{code:"Sisaket",name:"Sisaket"},63:{code:"Songkhla",name:"Songkhla"},64:{code:"Sukhothai",name:"Sukhothai"},65:{code:"Suphan Buri",name:"Suphan Buri"},66:{code:"Surat Thani",name:"Surat Thani"},67:{code:"Surin",name:"Surin"},68:{code:"Tak",name:"Tak"},69:{code:"Trang",name:"Trang"},70:{code:"Trat",name:"Trat"},71:{code:"Ubon Ratchathani",name:"Ubon Ratchathani"},72:{code:"Udon Thani",name:"Udon Thani"},73:{code:"Uthai Thani",name:"Uthai Thani"},74:{code:"Uttaradit",name:"Uttaradit"},75:{code:"Yala",name:"Yala"},76:{code:"Yasothon",name:"Yasothon"}},TG:{1:{code:"K",name:"Kara"},2:{code:"P",name:"Plateaux"},3:{code:"S",name:"Savanes"},4:{code:"C",name:"Centrale"},5:{code:"M",name:"Maritime"}},TK:{1:{code:"A",name:"Atafu"},2:{code:"F",name:"Fakaofo"},3:{code:"N",name:"Nukunonu"}},TO:{1:{code:"H",name:"Ha'apai"},2:{code:"T",name:"Tongatapu"},3:{code:"V",name:"Vava'u"}},TT:{1:{code:"CT",name:"Couva/Tabaquite/Talparo"},2:{code:"DM",name:"Diego Martin"},3:{code:"MR",name:"Mayaro/Rio Claro"},4:{code:"PD",name:"Penal/Debe"},5:{code:"PT",name:"Princes Town"},6:{code:"SG",name:"Sangre Grande"},7:{code:"SL",name:"San Juan/Laventille"},8:{code:"SI",name:"Siparia"},9:{code:"TP",name:"Tunapuna/Piarco"},10:{code:"PS",name:"Port of Spain"},11:{code:"SF",name:"San Fernando"},12:{code:"AR",name:"Arima"},13:{code:"PF",name:"Point Fortin"},14:{code:"CH",name:"Chaguanas"},15:{code:"TO",name:"Tobago"}},TN:{1:{code:"AR",name:"Ariana"},2:{code:"BJ",name:"Beja"},3:{code:"BA",name:"Ben Arous"},4:{code:"BI",name:"Bizerte"},5:{code:"GB",name:"Gabes"},6:{code:"GF",name:"Gafsa"},7:{code:"JE",name:"Jendouba"},8:{code:"KR",name:"Kairouan"},9:{code:"KS",name:"Kasserine"},10:{code:"KB",name:"Kebili"},11:{code:"KF",name:"Kef"},12:{code:"MH",name:"Mahdia"},13:{code:"MN",name:"Manouba"},14:{code:"ME",name:"Medenine"},15:{code:"MO",name:"Monastir"},16:{code:"NA",name:"Nabeul"},17:{code:"SF",name:"Sfax"},18:{code:"SD",name:"Sidi"},19:{code:"SL",name:"Siliana"},20:{code:"SO",name:"Sousse"},21:{code:"TA",name:"Tataouine"},22:{code:"TO",name:"Tozeur"},23:{code:"TU",name:"Tunis"},24:{code:"ZA",name:"Zaghouan"}},TR:{1:{code:"ADA",name:"Adana"},2:{code:"ADI",name:"Adiyaman"},3:{code:"AFY",name:"Afyonkarahisar"},4:{code:"AGR",name:"Agri"},5:{code:"AKS",name:"Aksaray"},6:{code:"AMA",name:"Amasya"},7:{code:"ANK",name:"Ankara"},8:{code:"ANT",name:"Antalya"},9:{code:"ARD",name:"Ardahan"},10:{code:"ART",name:"Artvin"},11:{code:"AYI",name:"Aydin"},12:{code:"BAL",name:"Balikesir"},13:{code:"BAR",name:"Bartin"},14:{code:"BAT",name:"Batman"},15:{code:"BAY",name:"Bayburt"},16:{code:"BIL",name:"Bilecik"},17:{code:"BIN",name:"Bingol"},18:{code:"BIT",name:"Bitlis"},19:{code:"BOL",name:"Bolu"},20:{code:"BRD",name:"Burdur"},21:{code:"BRS",name:"Bursa"},22:{code:"CKL",name:"Canakkale"},23:{code:"CKR",name:"Cankiri"},24:{code:"COR",name:"Corum"},25:{code:"DEN",name:"Denizli"},26:{code:"DIY",name:"Diyarbakir"},27:{code:"DUZ",name:"Duzce"},28:{code:"EDI",name:"Edirne"},29:{code:"ELA",name:"Elazig"},30:{code:"EZC",name:"Erzincan"},31:{code:"EZR",name:"Erzurum"},32:{code:"ESK",name:"Eskisehir"},33:{code:"GAZ",name:"Gaziantep"},34:{code:"GIR",name:"Giresun"},35:{code:"GMS",name:"Gumushane"},36:{code:"HKR",name:"Hakkari"},37:{code:"HTY",name:"Hatay"},38:{code:"IGD",name:"Igdir"},39:{code:"ISP",name:"Isparta"},40:{code:"IST",name:"Istanbul"},41:{code:"IZM",name:"Izmir"},42:{code:"KAH",name:"Kahramanmaras"},43:{code:"KRB",name:"Karabuk"},44:{code:"KRM",name:"Karaman"},45:{code:"KRS",name:"Kars"},46:{code:"KAS",name:"Kastamonu"},47:{code:"KAY",name:"Kayseri"},48:{code:"KLS",name:"Kilis"},49:{code:"KRK",name:"Kirikkale"},50:{code:"KLR",name:"Kirklareli"},51:{code:"KRH",name:"Kirsehir"},52:{code:"KOC",name:"Kocaeli"},53:{code:"KON",name:"Konya"},54:{code:"KUT",name:"Kutahya"},55:{code:"MAL",name:"Malatya"},56:{code:"MAN",name:"Manisa"},57:{code:"MAR",name:"Mardin"},58:{code:"MER",name:"Mersin"},59:{code:"MUG",name:"Mugla"},60:{code:"MUS",name:"Mus"},61:{code:"NEV",name:"Nevsehir"},62:{code:"NIG",name:"Nigde"},63:{code:"ORD",name:"Ordu"},64:{code:"OSM",name:"Osmaniye"},65:{code:"RIZ",name:"Rize"},66:{code:"SAK",name:"Sakarya"},67:{code:"SAM",name:"Samsun"},68:{code:"SAN",name:"Sanliurfa"},69:{code:"SII",name:"Siirt"},70:{code:"SIN",name:"Sinop"},71:{code:"SIR",name:"Sirnak"},72:{code:"SIV",name:"Sivas"},73:{code:"TEL",name:"Tekirdag"},74:{code:"TOK",name:"Tokat"},75:{code:"TRA",name:"Trabzon"},76:{code:"TUN",name:"Tunceli"},77:{code:"USK",name:"Usak"},78:{code:"VAN",name:"Van"},79:{code:"YAL",name:"Yalova"},80:{code:"YOZ",name:"Yozgat"},81:{code:"ZON",name:"Zonguldak"}},TM:{1:{code:"A",name:"Ahal Welayaty"},2:{code:"B",name:"Balkan Welayaty"},3:{code:"D",name:"Dashhowuz Welayaty"},4:{code:"L",name:"Lebap Welayaty"},5:{code:"M",name:"Mary Welayaty"}},TC:{1:{code:"AC",name:"Ambergris Cays"},2:{code:"DC",name:"Dellis Cay"},3:{code:"FC",name:"French Cay"},4:{code:"LW",name:"Little Water Cay"},5:{code:"RC",name:"Parrot Cay"},6:{code:"PN",name:"Pine Cay"},7:{code:"SL",name:"Salt Cay"},8:{code:"GT",name:"Grand Turk"},9:{code:"SC",name:"South Caicos"},10:{code:"EC",name:"East Caicos"},11:{code:"MC",name:"Middle Caicos"},12:{code:"NC",name:"North Caicos"},13:{code:"PR",name:"Providenciales"},14:{code:"WC",name:"West Caicos"}},TV:{1:{code:"NMG",name:"Nanumanga"},2:{code:"NLK",name:"Niulakita"},3:{code:"NTO",name:"Niutao"},4:{code:"FUN",name:"Funafuti"},5:{code:"NME",name:"Nanumea"},6:{code:"NUI",name:"Nui"},7:{code:"NFT",name:"Nukufetau"},8:{code:"NLL",name:"Nukulaelae"},9:{code:"VAI",name:"Vaitupu"}},UG:{1:{code:"KAL",name:"Kalangala"},2:{code:"KMP",name:"Kampala"},3:{code:"KAY",name:"Kayunga"},4:{code:"KIB",name:"Kiboga"},5:{code:"LUW",name:"Luwero"},6:{code:"MAS",name:"Masaka"},7:{code:"MPI",name:"Mpigi"},8:{code:"MUB",name:"Mubende"},9:{code:"MUK",name:"Mukono"},10:{code:"NKS",name:"Nakasongola"},11:{code:"RAK",name:"Rakai"},12:{code:"SEM",name:"Sembabule"},13:{code:"WAK",name:"Wakiso"},14:{code:"BUG",name:"Bugiri"},15:{code:"BUS",name:"Busia"},16:{code:"IGA",name:"Iganga"},17:{code:"JIN",name:"Jinja"},18:{code:"KAB",name:"Kaberamaido"},19:{code:"KML",name:"Kamuli"},20:{code:"KPC",name:"Kapchorwa"},21:{code:"KTK",name:"Katakwi"},22:{code:"KUM",name:"Kumi"},23:{code:"MAY",name:"Mayuge"},24:{code:"MBA",name:"Mbale"},25:{code:"PAL",name:"Pallisa"},26:{code:"SIR",name:"Sironko"},27:{code:"SOR",name:"Soroti"},28:{code:"TOR",name:"Tororo"},29:{code:"ADJ",name:"Adjumani"},30:{code:"APC",name:"Apac"},31:{code:"ARU",name:"Arua"},32:{code:"GUL",name:"Gulu"},33:{code:"KIT",name:"Kitgum"},34:{code:"KOT",name:"Kotido"},35:{code:"LIR",name:"Lira"},36:{code:"MRT",name:"Moroto"},37:{code:"MOY",name:"Moyo"},38:{code:"NAK",name:"Nakapiripirit"},39:{code:"NEB",name:"Nebbi"},40:{code:"PAD",name:"Pader"},41:{code:"YUM",name:"Yumbe"},42:{code:"BUN",name:"Bundibugyo"},43:{code:"BSH",name:"Bushenyi"},44:{code:"HOI",name:"Hoima"},45:{code:"KBL",name:"Kabale"},46:{code:"KAR",name:"Kabarole"},47:{code:"KAM",name:"Kamwenge"},48:{code:"KAN",name:"Kanungu"},49:{code:"KAS",name:"Kasese"},50:{code:"KBA",name:"Kibaale"},51:{code:"KIS",name:"Kisoro"},52:{code:"KYE",name:"Kyenjojo"},53:{code:"MSN",name:"Masindi"},54:{code:"MBR",name:"Mbarara"},55:{code:"NTU",name:"Ntungamo"},56:{code:"RUK",name:"Rukungiri"}},UA:{1:{code:"CK",name:"Cherkasy"},2:{code:"CH",name:"Chernihiv"},3:{code:"CV",name:"Chernivtsi"},4:{code:"CR",name:"Crimea"},5:{code:"DN",name:"Dnipropetrovs'k"},6:{code:"DO",name:"Donets'k"},7:{code:"IV",name:"Ivano-Frankivs'k"},8:{code:"KL",name:"Kharkiv Kherson"},9:{code:"KM",name:"Khmel'nyts'kyy"},10:{code:"KR",name:"Kirovohrad"},11:{code:"KV",name:"Kiev"},12:{code:"KY",name:"Kyyiv"},13:{code:"LU",name:"Luhans'k"},14:{code:"LV",name:"L'viv"},15:{code:"MY",name:"Mykolayiv"},16:{code:"OD",name:"Odesa"},17:{code:"PO",name:"Poltava"},18:{code:"RI",name:"Rivne"},19:{code:"SE",name:"Sevastopol"},20:{code:"SU",name:"Sumy"},21:{code:"TE",name:"Ternopil'"},22:{code:"VI",name:"Vinnytsya"},23:{code:"VO",name:"Volyn'"},24:{code:"ZK",name:"Zakarpattya"},25:{code:"ZA",name:"Zaporizhzhya"},26:{code:"ZH",name:"Zhytomyr"}},AE:{1:{code:"AZ",name:"Abu Zaby"},2:{code:"AJ",name:"'Ajman"},3:{code:"FU",name:"Al Fujayrah"},4:{code:"SH",name:"Ash Shariqah"},5:{code:"DU",name:"Dubayy"},6:{code:"RK",name:"R'as al Khaymah"},7:{code:"UQ",name:"Umm al Qaywayn"}},GB:{1:{code:"ABN",name:"Aberdeen"},2:{code:"ABNS",name:"Aberdeenshire"},3:{code:"ANG",name:"Anglesey"},4:{code:"AGS",name:"Angus"},5:{code:"ARY",name:"Argyll and Bute"},6:{code:"BEDS",name:"Bedfordshire"},7:{code:"BERKS",name:"Berkshire"},8:{code:"BLA",name:"Blaenau Gwent"},9:{code:"BRI",name:"Bridgend"},10:{code:"BSTL",name:"Bristol"},11:{code:"BUCKS",name:"Buckinghamshire"},12:{code:"CAE",name:"Caerphilly"},13:{code:"CAMBS",name:"Cambridgeshire"},14:{code:"CDF",name:"Cardiff"},15:{code:"CARM",name:"Carmarthenshire"},16:{code:"CDGN",name:"Ceredigion"},17:{code:"CHES",name:"Cheshire"},18:{code:"CLACK",name:"Clackmannanshire"},19:{code:"CON",name:"Conwy"},20:{code:"CORN",name:"Cornwall"},21:{code:"DNBG",name:"Denbighshire"},22:{code:"DERBY",name:"Derbyshire"},23:{code:"DVN",name:"Devon"},24:{code:"DOR",name:"Dorset"},25:{code:"DGL",name:"Dumfries and Galloway"},26:{code:"DUND",name:"Dundee"},27:{code:"DHM",name:"Durham"},28:{code:"ARYE",name:"East Ayrshire"},29:{code:"DUNBE",name:"East Dunbartonshire"},30:{code:"LOTE",name:"East Lothian"},31:{code:"RENE",name:"East Renfrewshire"},32:{code:"ERYS",name:"East Riding of Yorkshire"},33:{code:"SXE",name:"East Sussex"},34:{code:"EDIN",name:"Edinburgh"},35:{code:"ESX",name:"Essex"},36:{code:"FALK",name:"Falkirk"},37:{code:"FFE",name:"Fife"},38:{code:"FLINT",name:"Flintshire"},39:{code:"GLAS",name:"Glasgow"},40:{code:"GLOS",name:"Gloucestershire"},41:{code:"LDN",name:"Greater London"},42:{code:"MCH",name:"Greater Manchester"},43:{code:"GDD",name:"Gwynedd"},44:{code:"HANTS",name:"Hampshire"},45:{code:"HWR",name:"Herefordshire"},46:{code:"HERTS",name:"Hertfordshire"},47:{code:"HLD",name:"Highlands"},48:{code:"IVER",name:"Inverclyde"},49:{code:"IOW",name:"Isle of Wight"},50:{code:"KNT",name:"Kent"},51:{code:"LANCS",name:"Lancashire"},52:{code:"LEICS",name:"Leicestershire"},53:{code:"LINCS",name:"Lincolnshire"},54:{code:"MSY",name:"Merseyside"},55:{code:"MERT",name:"Merthyr Tydfil"},56:{code:"MLOT",name:"Midlothian"},57:{code:"MMOUTH",name:"Monmouthshire"},58:{code:"MORAY",name:"Moray"},59:{code:"NPRTAL",name:"Neath Port Talbot"},60:{code:"NEWPT",name:"Newport"},61:{code:"NOR",name:"Norfolk"},62:{code:"ARYN",name:"North Ayrshire"},63:{code:"LANN",name:"North Lanarkshire"},64:{code:"YSN",name:"North Yorkshire"},65:{code:"NHM",name:"Northamptonshire"},66:{code:"NLD",name:"Northumberland"},67:{code:"NOT",name:"Nottinghamshire"},68:{code:"ORK",name:"Orkney Islands"},69:{code:"OFE",name:"Oxfordshire"},70:{code:"PEM",name:"Pembrokeshire"},71:{code:"PERTH",name:"Perth and Kinross"},72:{code:"PWS",name:"Powys"},73:{code:"REN",name:"Renfrewshire"},74:{code:"RHON",name:"Rhondda Cynon Taff"},75:{code:"RUT",name:"Rutland"},76:{code:"BOR",name:"Scottish Borders"},77:{code:"SHET",name:"Shetland Islands"},78:{code:"SPE",name:"Shropshire"},79:{code:"SOM",name:"Somerset"},80:{code:"ARYS",name:"South Ayrshire"},81:{code:"LANS",name:"South Lanarkshire"},82:{code:"YSS",name:"South Yorkshire"},83:{code:"SFD",name:"Staffordshire"},84:{code:"STIR",name:"Stirling"},85:{code:"SFK",name:"Suffolk"},86:{code:"SRY",name:"Surrey"},87:{code:"SWAN",name:"Swansea"},88:{code:"TORF",name:"Torfaen"},89:{code:"TWR",name:"Tyne and Wear"},90:{code:"VGLAM",name:"Vale of Glamorgan"},91:{code:"WARKS",name:"Warwickshire"},92:{code:"WDUN",name:"West Dunbartonshire"},93:{code:"WLOT",name:"West Lothian"},94:{code:"WMD",name:"West Midlands"},95:{code:"SXW",name:"West Sussex"},96:{code:"YSW",name:"West Yorkshire"},97:{code:"WIL",name:"Western Isles"},98:{code:"WLT",name:"Wiltshire"},99:{code:"WORCS",name:"Worcestershire"},100:{code:"WRX",name:"Wrexham"}},US:{1:{code:"AL",name:"Alabama"},2:{code:"AK",name:"Alaska"},3:{code:"AS",name:"American Samoa"},4:{code:"AZ",name:"Arizona"},5:{code:"AR",name:"Arkansas"},6:{code:"AF",name:"Armed Forces Africa"},7:{code:"AA",name:"Armed Forces Americas"},8:{code:"AC",name:"Armed Forces Canada"},9:{code:"AE",name:"Armed Forces Europe"},10:{code:"AM",name:"Armed Forces Middle East"},11:{code:"AP",name:"Armed Forces Pacific"},12:{code:"CA",name:"California"},13:{code:"CO",name:"Colorado"},14:{code:"CT",name:"Connecticut"},15:{code:"DE",name:"Delaware"},16:{code:"DC",name:"District of Columbia"},17:{code:"FM",name:"Federated States Of Micronesia"},18:{code:"FL",name:"Florida"},19:{code:"GA",name:"Georgia"},20:{code:"GU",name:"Guam"},21:{code:"HI",name:"Hawaii"},22:{code:"ID",name:"Idaho"},23:{code:"IL",name:"Illinois"},24:{code:"IN",name:"Indiana"},25:{code:"IA",name:"Iowa"},26:{code:"KS",name:"Kansas"},27:{code:"KY",name:"Kentucky"},28:{code:"LA",name:"Louisiana"},29:{code:"ME",name:"Maine"},30:{code:"MH",name:"Marshall Islands"},31:{code:"MD",name:"Maryland"},32:{code:"MA",name:"Massachusetts"},33:{code:"MI",name:"Michigan"},34:{code:"MN",name:"Minnesota"},35:{code:"MS",name:"Mississippi"},36:{code:"MO",name:"Missouri"},37:{code:"MT",name:"Montana"},38:{code:"NE",name:"Nebraska"},39:{code:"NV",name:"Nevada"},40:{code:"NH",name:"New Hampshire"},41:{code:"NJ",name:"New Jersey"},42:{code:"NM",name:"New Mexico"},43:{code:"NY",name:"New York"},44:{code:"NC",name:"North Carolina"},45:{code:"ND",name:"North Dakota"},46:{code:"MP",name:"Northern Mariana Islands"},47:{code:"OH",name:"Ohio"},48:{code:"OK",name:"Oklahoma"},49:{code:"OR",name:"Oregon"},50:{code:"PW",name:"Palau"},51:{code:"PA",name:"Pennsylvania"},52:{code:"PR",name:"Puerto Rico"},53:{code:"RI",name:"Rhode Island"},54:{code:"SC",name:"South Carolina"},55:{code:"SD",name:"South Dakota"},56:{code:"TN",name:"Tennessee"},57:{code:"TX",name:"Texas"},58:{code:"UT",name:"Utah"},59:{code:"VT",name:"Vermont"},60:{code:"VI",name:"Virgin Islands"},61:{code:"VA",name:"Virginia"},62:{code:"WA",name:"Washington"},63:{code:"WV",name:"West Virginia"},64:{code:"WI",name:"Wisconsin"},65:{code:"WY",name:"Wyoming"}},UM:{1:{code:"BI",name:"Baker Island"},2:{code:"HI",name:"Howland Island"},3:{code:"JI",name:"Jarvis Island"},4:{code:"JA",name:"Johnston Atoll"},5:{code:"KR",name:"Kingman Reef"},6:{code:"MA",name:"Midway Atoll"},7:{code:"NI",name:"Navassa Island"},8:{code:"PA",name:"Palmyra Atoll"},9:{code:"WI",name:"Wake Island"}},UY:{1:{code:"AR",name:"Artigas"},2:{code:"CA",name:"Canelones"},3:{code:"CL",name:"Cerro Largo"},4:{code:"CO",name:"Colonia"},5:{code:"DU",name:"Durazno"},6:{code:"FS",name:"Flores"},7:{code:"FA",name:"Florida"},8:{code:"LA",name:"Lavalleja"},9:{code:"MA",name:"Maldonado"},10:{code:"MO",name:"Montevideo"},11:{code:"PA",name:"Paysandu"},12:{code:"RN",name:"Rio Negro"},13:{code:"RV",name:"Rivera"},14:{code:"RO",name:"Rocha"},15:{code:"SL",name:"Salto"},16:{code:"SJ",name:"San Jose"},17:{code:"SO",name:"Soriano"},18:{code:"TA",name:"Tacuarembo"},19:{code:"TT",name:"Treinta y Tres"}},UZ:{1:{code:"AN",name:"Andijon"},2:{code:"BU",name:"Buxoro"},3:{code:"FA",name:"Farg'ona"},4:{code:"JI",name:"Jizzax"},5:{code:"NG",name:"Namangan"},6:{code:"NW",name:"Navoiy"},7:{code:"QA",name:"Qashqadaryo"},8:{code:"QR",name:"Qoraqalpog'iston Republikasi"},9:{code:"SA",name:"Samarqand"},10:{code:"SI",name:"Sirdaryo"},11:{code:"SU",name:"Surxondaryo"},12:{code:"TK",name:"Toshkent City"},13:{code:"TO",name:"Toshkent Region"},14:{code:"XO",name:"Xorazm"}},VU:{1:{code:"MA",name:"Malampa"},2:{code:"PE",name:"Penama"},3:{code:"SA",name:"Sanma"},4:{code:"SH",name:"Shefa"},5:{code:"TA",name:"Tafea"},6:{code:"TO",name:"Torba"}},VE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Anzoategui"},3:{code:"AP",name:"Apure"},4:{code:"AR",name:"Aragua"},5:{code:"BA",name:"Barinas"},6:{code:"BO",name:"Bolivar"},7:{code:"CA",name:"Carabobo"},8:{code:"CO",name:"Cojedes"},9:{code:"DA",name:"Delta Amacuro"},10:{code:"DF",name:"Dependencias Federales"},11:{code:"DI",name:"Distrito Federal"},12:{code:"FA",name:"Falcon"},13:{code:"GU",name:"Guarico"},14:{code:"LA",name:"Lara"},15:{code:"ME",name:"Merida"},16:{code:"MI",name:"Miranda"},17:{code:"MO",name:"Monagas"},18:{code:"NE",name:"Nueva Esparta"},19:{code:"PO",name:"Portuguesa"},20:{code:"SU",name:"Sucre"},21:{code:"TA",name:"Tachira"},22:{code:"TR",name:"Trujillo"},23:{code:"VA",name:"Vargas"},24:{code:"YA",name:"Yaracuy"},25:{code:"ZU",name:"Zulia"}},VN:{1:{code:"AG",name:"An Giang"},2:{code:"BG",name:"Bac Giang"},3:{code:"BK",name:"Bac Kan"},4:{code:"BL",name:"Bac Lieu"},5:{code:"BC",name:"Bac Ninh"},6:{code:"BR",name:"Ba Ria-Vung Tau"},7:{code:"BN",name:"Ben Tre"},8:{code:"BH",name:"Binh Dinh"},9:{code:"BU",name:"Binh Duong"},10:{code:"BP",name:"Binh Phuoc"},11:{code:"BT",name:"Binh Thuan"},12:{code:"CM",name:"Ca Mau"},13:{code:"CT",name:"Can Tho"},14:{code:"CB",name:"Cao Bang"},15:{code:"DL",name:"Dak Lak"},16:{code:"DG",name:"Dak Nong"},17:{code:"DN",name:"Da Nang"},18:{code:"DB",name:"Dien Bien"},19:{code:"DI",name:"Dong Nai"},20:{code:"DT",name:"Dong Thap"},21:{code:"GL",name:"Gia Lai"},22:{code:"HG",name:"Ha Giang"},23:{code:"HD",name:"Hai Duong"},24:{code:"HP",name:"Hai Phong"},25:{code:"HM",name:"Ha Nam"},26:{code:"HI",name:"Ha Noi"},27:{code:"HT",name:"Ha Tay"},28:{code:"HH",name:"Ha Tinh"},29:{code:"HB",name:"Hoa Binh"},30:{code:"HC",name:"Ho Chin Minh"},31:{code:"HU",name:"Hau Giang"},32:{code:"HY",name:"Hung Yen"}},VI:{1:{code:"C",name:"Saint Croix"},2:{code:"J",name:"Saint John"},3:{code:"T",name:"Saint Thomas"}},WF:{1:{code:"A",name:"Alo"},2:{code:"S",name:"Sigave"},3:{code:"W",name:"Wallis"}},YE:{1:{code:"AB",name:"Abyan"},2:{code:"AD",name:"Adan"},3:{code:"AM",name:"Amran"},4:{code:"BA",name:"Al Bayda"},5:{code:"DA",name:"Ad Dali"},6:{code:"DH",name:"Dhamar"},7:{code:"HD",name:"Hadramawt"},8:{code:"HJ",name:"Hajjah"},9:{code:"HU",name:"Al Hudaydah"},10:{code:"IB",name:"Ibb"},11:{code:"JA",name:"Al Jawf"},12:{code:"LA",name:"Lahij"},13:{code:"MA",name:"Ma'rib"},14:{code:"MR",name:"Al Mahrah"},15:{code:"MW",name:"Al Mahwit"},16:{code:"SD",name:"Sa'dah"},17:{code:"SN",name:"San'a"},18:{code:"SH",name:"Shabwah"},19:{code:"TA",name:"Ta'izz"}},YU:{1:{code:"KOS",name:"Kosovo"},2:{code:"MON",name:"Montenegro"},3:{code:"SER",name:"Serbia"},4:{code:"VOJ",name:"Vojvodina"}},ZR:{1:{code:"BC",name:"Bas-Congo"},2:{code:"BN",name:"Bandundu"},3:{code:"EQ",name:"Equateur"},4:{code:"KA",name:"Katanga"},5:{code:"KE",name:"Kasai-Oriental"},6:{code:"KN",name:"Kinshasa"},7:{code:"KW",name:"Kasai-Occidental"},8:{code:"MA",name:"Maniema"},9:{code:"NK",name:"Nord-Kivu"},10:{code:"OR",name:"Orientale"},11:{code:"SK",name:"Sud-Kivu"}},ZM:{1:{code:"CE",name:"Central"},2:{code:"CB",name:"Copperbelt"},3:{code:"EA",name:"Eastern"},4:{code:"LP",name:"Luapula"},5:{code:"LK",name:"Lusaka"},6:{code:"NO",name:"Northern"},7:{code:"NW",name:"North-Western"},8:{code:"SO",name:"Southern"},9:{code:"WE",name:"Western"}},ZW:{1:{code:"BU",name:"Bulawayo"},2:{code:"HA",name:"Harare"},3:{code:"ML",name:"Manicaland"},4:{code:"MC",name:"Mashonaland Central"},5:{code:"ME",name:"Mashonaland East"},6:{code:"MW",name:"Mashonaland West"},7:{code:"MV",name:"Masvingo"},8:{code:"MN",name:"Matabeleland North"},9:{code:"MS",name:"Matabeleland South"},10:{code:"MD",name:"Midlands"}}},BFHTimePickerDelimiter=":",BFHTimePickerModes={am:"AM",pm:"PM"},BFHTimezonesList={AF:{"Asia/Kabul":"Kabul"},AL:{"Europe/Tirane":"Tirane"},DZ:{"Africa/Algiers":"Algiers"},AS:{"Pacific/Pago_Pago":"Pago Pago"},AD:{"Europe/Andorra":"Andorra"},AO:{"Africa/Luanda":"Luanda"},AI:{"America/Anguilla":"Anguilla"},AQ:{"Antarctica/Casey":"Casey","Antarctica/Davis":"Davis","Antarctica/DumontDUrville":"DumontDUrville","Antarctica/Macquarie":"Macquarie","Antarctica/Mawson":"Mawson","Antarctica/McMurdo":"McMurdo","Antarctica/Palmer":"Palmer","Antarctica/Rothera":"Rothera","Antarctica/South_Pole":"South Pole","Antarctica/Syowa":"Syowa","Antarctica/Vostok":"Vostok"},AG:{"America/Antigua":"Antigua"},AR:{"America/Argentina/Buenos_Aires":"Argentina / Buenos Aires","America/Argentina/Catamarca":"Argentina / Catamarca","America/Argentina/Cordoba":"Argentina / Cordoba","America/Argentina/Jujuy":"Argentina / Jujuy","America/Argentina/La_Rioja":"Argentina / La Rioja","America/Argentina/Mendoza":"Argentina / Mendoza","America/Argentina/Rio_Gallegos":"Argentina / Rio Gallegos","America/Argentina/Salta":"Argentina / Salta","America/Argentina/San_Juan":"Argentina / San Juan","America/Argentina/San_Luis":"Argentina / San Luis","America/Argentina/Tucuman":"Argentina / Tucuman","America/Argentina/Ushuaia":"Argentina / Ushuaia"},AM:{"Asia/Yerevan":"Yerevan"},AW:{"America/Aruba":"Aruba"},AU:{"Australia/Adelaide":"Adelaide","Australia/Brisbane":"Brisbane","Australia/Broken_Hill":"Broken Hill","Australia/Currie":"Currie","Australia/Darwin":"Darwin","Australia/Eucla":"Eucla","Australia/Hobart":"Hobart","Australia/Lindeman":"Lindeman","Australia/Lord_Howe":"Lord Howe","Australia/Melbourne":"Melbourne","Australia/Perth":"Perth","Australia/Sydney":"Sydney"},AT:{"Europe/Vienna":"Vienna"},AZ:{"Asia/Baku":"Baku"},BH:{"Asia/Bahrain":"Bahrain"},BD:{"Asia/Dhaka":"Dhaka"},BB:{"America/Barbados":"Barbados"},BY:{"Europe/Minsk":"Minsk"},BE:{"Europe/Brussels":"Brussels"},BZ:{"America/Belize":"Belize"},BJ:{"Africa/Porto-Novo":"Porto-Novo"},BM:{"Atlantic/Bermuda":"Bermuda"},BT:{"Asia/Thimphu":"Thimphu"},BO:{"America/La_Paz":"La Paz"},BA:{"Europe/Sarajevo":"Sarajevo"},BW:{"Africa/Gaborone":"Gaborone"},BR:{"America/Araguaina":"Araguaina","America/Bahia":"Bahia","America/Belem":"Belem","America/Boa_Vista":"Boa Vista","America/Campo_Grande":"Campo Grande","America/Cuiaba":"Cuiaba","America/Eirunepe":"Eirunepe","America/Fortaleza":"Fortaleza","America/Maceio":"Maceio","America/Manaus":"Manaus","America/Noronha":"Noronha","America/Porto_Velho":"Porto Velho","America/Recife":"Recife","America/Rio_Branco":"Rio Branco","America/Santarem":"Santarem","America/Sao_Paulo":"Sao Paulo"},VG:{"America/Tortola":"Tortola"},BN:{"Asia/Brunei":"Brunei"},BG:{"Europe/Sofia":"Sofia"},BF:{"Africa/Ouagadougou":"Ouagadougou"},BI:{"Africa/Bujumbura":"Bujumbura"},CI:{"Africa/Abidjan":"Abidjan"},KH:{"Asia/Phnom_Penh":"Phnom Penh"},CM:{"Africa/Douala":"Douala"},CA:{"America/Atikokan":"Atikokan","America/Blanc-Sablon":"Blanc-Sablon","America/Cambridge_Bay":"Cambridge Bay","America/Creston":"Creston","America/Dawson":"Dawson","America/Dawson_Creek":"Dawson Creek","America/Edmonton":"Edmonton","America/Glace_Bay":"Glace Bay","America/Goose_Bay":"Goose Bay","America/Halifax":"Halifax","America/Inuvik":"Inuvik","America/Iqaluit":"Iqaluit","America/Moncton":"Moncton","America/Montreal":"Montreal","America/Nipigon":"Nipigon","America/Pangnirtung":"Pangnirtung","America/Rainy_River":"Rainy River","America/Rankin_Inlet":"Rankin Inlet","America/Regina":"Regina","America/Resolute":"Resolute","America/St_Johns":"St Johns","America/Swift_Current":"Swift Current","America/Thunder_Bay":"Thunder Bay","America/Toronto":"Toronto","America/Vancouver":"Vancouver","America/Whitehorse":"Whitehorse","America/Winnipeg":"Winnipeg","America/Yellowknife":"Yellowknife"},CV:{"Atlantic/Cape_Verde":"Cape Verde"},KY:{"America/Cayman":"Cayman"},CF:{"Africa/Bangui":"Bangui"},TD:{"Africa/Ndjamena":"Ndjamena"},CL:{"America/Santiago":"Santiago","Pacific/Easter":"Easter"},CN:{"Asia/Chongqing":"Chongqing","Asia/Harbin":"Harbin","Asia/Kashgar":"Kashgar","Asia/Shanghai":"Shanghai","Asia/Urumqi":"Urumqi"},CO:{"America/Bogota":"Bogota"},KM:{"Indian/Comoro":"Comoro"},CG:{"Africa/Brazzaville":"Brazzaville"},CR:{"America/Costa_Rica":"Costa Rica"},HR:{"Europe/Zagreb":"Zagreb"},CU:{"America/Havana":"Havana"},CY:{"Asia/Nicosia":"Nicosia"},CZ:{"Europe/Prague":"Prague"},CD:{"Africa/Kinshasa":"Kinshasa","Africa/Lubumbashi":"Lubumbashi"},DK:{"Europe/Copenhagen":"Copenhagen"},DJ:{"Africa/Djibouti":"Djibouti"},DM:{"America/Dominica":"Dominica"},DO:{"America/Santo_Domingo":"Santo Domingo"},TP:{},EC:{"America/Guayaquil":"Guayaquil","Pacific/Galapagos":"Galapagos"},EG:{"Africa/Cairo":"Cairo"},SV:{"America/El_Salvador":"El Salvador"},GQ:{"Africa/Malabo":"Malabo"},ER:{"Africa/Asmara":"Asmara"},EE:{"Europe/Tallinn":"Tallinn"},ET:{"Africa/Addis_Ababa":"Addis Ababa"},FO:{"Atlantic/Faroe":"Faroe"},FK:{"Atlantic/Stanley":"Stanley"},FJ:{"Pacific/Fiji":"Fiji"},FI:{"Europe/Helsinki":"Helsinki"},MK:{"Europe/Skopje":"Skopje"},FR:{"Europe/Paris":"Paris"},GA:{"Africa/Libreville":"Libreville"},GE:{"Asia/Tbilisi":"Tbilisi"},DE:{"Europe/Berlin":"Berlin"},GH:{"Africa/Accra":"Accra"},GR:{"Europe/Athens":"Athens"},GL:{"America/Danmarkshavn":"Danmarkshavn","America/Godthab":"Godthab","America/Scoresbysund":"Scoresbysund","America/Thule":"Thule"},GD:{"America/Grenada":"Grenada"},GU:{"Pacific/Guam":"Guam"},GT:{"America/Guatemala":"Guatemala"},GN:{"Africa/Conakry":"Conakry"},GW:{"Africa/Bissau":"Bissau"},GY:{"America/Guyana":"Guyana"},HT:{"America/Port-au-Prince":"Port-au-Prince"},HN:{"America/Tegucigalpa":"Tegucigalpa"},HK:{"Asia/Hong_Kong":"Hong Kong"},HU:{"Europe/Budapest":"Budapest"},IS:{"Atlantic/Reykjavik":"Reykjavik"},IN:{"Asia/Kolkata":"Kolkata"},ID:{"Asia/Jakarta":"Jakarta","Asia/Jayapura":"Jayapura","Asia/Makassar":"Makassar","Asia/Pontianak":"Pontianak"},IR:{"Asia/Tehran":"Tehran"},IQ:{"Asia/Baghdad":"Baghdad"},IE:{"Europe/Dublin":"Dublin"},IL:{"Asia/Jerusalem":"Jerusalem"},IT:{"Europe/Rome":"Rome"},JM:{"America/Jamaica":"Jamaica"},JP:{"Asia/Tokyo":"Tokyo"},JO:{"Asia/Amman":"Amman"},KZ:{"Asia/Almaty":"Almaty","Asia/Aqtau":"Aqtau","Asia/Aqtobe":"Aqtobe","Asia/Oral":"Oral","Asia/Qyzylorda":"Qyzylorda"},KE:{"Africa/Nairobi":"Nairobi"},KI:{"Pacific/Enderbury":"Enderbury","Pacific/Kiritimati":"Kiritimati","Pacific/Tarawa":"Tarawa"},KW:{"Asia/Kuwait":"Kuwait"},KG:{"Asia/Bishkek":"Bishkek"},LA:{"Asia/Vientiane":"Vientiane"},LV:{"Europe/Riga":"Riga"},LB:{"Asia/Beirut":"Beirut"},LS:{"Africa/Maseru":"Maseru"},LR:{"Africa/Monrovia":"Monrovia"},LY:{"Africa/Tripoli":"Tripoli"},LI:{"Europe/Vaduz":"Vaduz"},LT:{"Europe/Vilnius":"Vilnius"},LU:{"Europe/Luxembourg":"Luxembourg"},MO:{"Asia/Macau":"Macau"},MG:{"Indian/Antananarivo":"Antananarivo"},MW:{"Africa/Blantyre":"Blantyre"},MY:{"Asia/Kuala_Lumpur":"Kuala Lumpur","Asia/Kuching":"Kuching"},MV:{"Indian/Maldives":"Maldives"},ML:{"Africa/Bamako":"Bamako"},MT:{"Europe/Malta":"Malta"},MH:{"Pacific/Kwajalein":"Kwajalein","Pacific/Majuro":"Majuro"},MR:{"Africa/Nouakchott":"Nouakchott"},MU:{"Indian/Mauritius":"Mauritius"},MX:{"America/Bahia_Banderas":"Bahia Banderas","America/Cancun":"Cancun","America/Chihuahua":"Chihuahua","America/Hermosillo":"Hermosillo","America/Matamoros":"Matamoros","America/Mazatlan":"Mazatlan","America/Merida":"Merida","America/Mexico_City":"Mexico City","America/Monterrey":"Monterrey","America/Ojinaga":"Ojinaga","America/Santa_Isabel":"Santa Isabel","America/Tijuana":"Tijuana"},FM:{"Pacific/Chuuk":"Chuuk","Pacific/Kosrae":"Kosrae","Pacific/Pohnpei":"Pohnpei"},MD:{"Europe/Chisinau":"Chisinau"},MC:{"Europe/Monaco":"Monaco"},MN:{"Asia/Choibalsan":"Choibalsan","Asia/Hovd":"Hovd","Asia/Ulaanbaatar":"Ulaanbaatar"},ME:{"Europe/Podgorica":"Podgorica"},MS:{"America/Montserrat":"Montserrat"},MA:{"Africa/Casablanca":"Casablanca"},MZ:{"Africa/Maputo":"Maputo"},MM:{"Asia/Rangoon":"Rangoon"},NA:{"Africa/Windhoek":"Windhoek"},NR:{"Pacific/Nauru":"Nauru"},NP:{"Asia/Kathmandu":"Kathmandu"},NL:{"Europe/Amsterdam":"Amsterdam"},AN:{},NZ:{"Pacific/Auckland":"Auckland","Pacific/Chatham":"Chatham"},NI:{"America/Managua":"Managua"},NE:{"Africa/Niamey":"Niamey"},NG:{"Africa/Lagos":"Lagos"},NF:{"Pacific/Norfolk":"Norfolk"},KP:{"Asia/Pyongyang":"Pyongyang"},MP:{"Pacific/Saipan":"Saipan"},NO:{"Europe/Oslo":"Oslo"},OM:{"Asia/Muscat":"Muscat"},PK:{"Asia/Karachi":"Karachi"},PW:{"Pacific/Palau":"Palau"},PA:{"America/Panama":"Panama"},PG:{"Pacific/Port_Moresby":"Port Moresby"},PY:{"America/Asuncion":"Asuncion"},PE:{"America/Lima":"Lima"},PH:{"Asia/Manila":"Manila"},PN:{"Pacific/Pitcairn":"Pitcairn"},PL:{"Europe/Warsaw":"Warsaw"},PT:{"Atlantic/Azores":"Azores","Atlantic/Madeira":"Madeira","Europe/Lisbon":"Lisbon"},PR:{"America/Puerto_Rico":"Puerto Rico"},QA:{"Asia/Qatar":"Qatar"},RO:{"Europe/Bucharest":"Bucharest"},RU:{"Asia/Anadyr":"Anadyr","Asia/Irkutsk":"Irkutsk","Asia/Kamchatka":"Kamchatka","Asia/Krasnoyarsk":"Krasnoyarsk","Asia/Magadan":"Magadan","Asia/Novokuznetsk":"Novokuznetsk","Asia/Novosibirsk":"Novosibirsk","Asia/Omsk":"Omsk","Asia/Sakhalin":"Sakhalin","Asia/Vladivostok":"Vladivostok","Asia/Yakutsk":"Yakutsk","Asia/Yekaterinburg":"Yekaterinburg","Europe/Kaliningrad":"Kaliningrad","Europe/Moscow":"Moscow","Europe/Samara":"Samara","Europe/Volgograd":"Volgograd"},RW:{"Africa/Kigali":"Kigali"},ST:{"Africa/Sao_Tome":"Sao Tome"},SH:{"Atlantic/St_Helena":"St Helena"},KN:{"America/St_Kitts":"St Kitts"},LC:{"America/St_Lucia":"St Lucia"},VC:{"America/St_Vincent":"St Vincent"},WS:{"Pacific/Apia":"Apia"},SM:{"Europe/San_Marino":"San Marino"},SA:{"Asia/Riyadh":"Riyadh"},SN:{"Africa/Dakar":"Dakar"},RS:{"Europe/Belgrade":"Belgrade"},SC:{"Indian/Mahe":"Mahe"},SL:{"Africa/Freetown":"Freetown"},SG:{"Asia/Singapore":"Singapore"},SK:{"Europe/Bratislava":"Bratislava"},SI:{"Europe/Ljubljana":"Ljubljana"},SB:{"Pacific/Guadalcanal":"Guadalcanal"},SO:{"Africa/Mogadishu":"Mogadishu"},ZA:{"Africa/Johannesburg":"Johannesburg"},GS:{"Atlantic/South_Georgia":"South Georgia"},KR:{"Asia/Seoul":"Seoul"},ES:{"Africa/Ceuta":"Ceuta","Atlantic/Canary":"Canary","Europe/Madrid":"Madrid"},LK:{"Asia/Colombo":"Colombo"},SD:{"Africa/Khartoum":"Khartoum"},SR:{"America/Paramaribo":"Paramaribo"},SZ:{"Africa/Mbabane":"Mbabane"},SE:{"Europe/Stockholm":"Stockholm"},CH:{"Europe/Zurich":"Zurich"},SY:{"Asia/Damascus":"Damascus"},TW:{"Asia/Taipei":"Taipei"},TJ:{"Asia/Dushanbe":"Dushanbe"},TZ:{"Africa/Dar_es_Salaam":"Dar es Salaam"},TH:{"Asia/Bangkok":"Bangkok"},BS:{"America/Nassau":"Nassau"},GM:{"Africa/Banjul":"Banjul"},TG:{"Africa/Lome":"Lome"},TO:{"Pacific/Tongatapu":"Tongatapu"},TT:{"America/Port_of_Spain":"Port of Spain"},TN:{"Africa/Tunis":"Tunis"},TR:{"Europe/Istanbul":"Istanbul"},TM:{"Asia/Ashgabat":"Ashgabat"},TC:{"America/Grand_Turk":"Grand Turk"},TV:{"Pacific/Funafuti":"Funafuti"},VI:{"America/St_Thomas":"St Thomas"},UG:{"Africa/Kampala":"Kampala"},UA:{"Europe/Kiev":"Kiev","Europe/Simferopol":"Simferopol","Europe/Uzhgorod":"Uzhgorod","Europe/Zaporozhye":"Zaporozhye"},AE:{"Asia/Dubai":"Dubai"},GB:{"Europe/London":"London"},US:{"America/Adak":"Adak","America/Anchorage":"Anchorage","America/Boise":"Boise","America/Chicago":"Chicago","America/Denver":"Denver","America/Detroit":"Detroit","America/Indiana/Indianapolis":"Indiana / Indianapolis","America/Indiana/Knox":"Indiana / Knox","America/Indiana/Marengo":"Indiana / Marengo","America/Indiana/Petersburg":"Indiana / Petersburg","America/Indiana/Tell_City":"Indiana / Tell City","America/Indiana/Vevay":"Indiana / Vevay","America/Indiana/Vincennes":"Indiana / Vincennes","America/Indiana/Winamac":"Indiana / Winamac","America/Juneau":"Juneau","America/Kentucky/Louisville":"Kentucky / Louisville","America/Kentucky/Monticello":"Kentucky / Monticello","America/Los_Angeles":"Los Angeles","America/Menominee":"Menominee","America/Metlakatla":"Metlakatla","America/New_York":"New York","America/Nome":"Nome","America/North_Dakota/Beulah":"North Dakota / Beulah","America/North_Dakota/Center":"North Dakota / Center","America/North_Dakota/New_Salem":"North Dakota / New Salem","America/Phoenix":"Phoenix","America/Shiprock":"Shiprock","America/Sitka":"Sitka","America/Yakutat":"Yakutat","Pacific/Honolulu":"Honolulu"},UY:{"America/Montevideo":"Montevideo"},UZ:{"Asia/Samarkand":"Samarkand","Asia/Tashkent":"Tashkent"},VU:{"Pacific/Efate":"Efate"},VA:{"Europe/Vatican":"Vatican"},VE:{"America/Caracas":"Caracas"},VN:{"Asia/Ho_Chi_Minh":"Ho Chi Minh"},EH:{"Africa/El_Aaiun":"El Aaiun"},YE:{"Asia/Aden":"Aden"},ZM:{"Africa/Lusaka":"Lusaka"},ZW:{"Africa/Harare":"Harare"}};
+function(e){"use strict";function a(e){var a=e.toString(16);return 1===a.length?"0"+a:a}function t(e,t,n){return"#"+a(e)+a(t)+a(n)}function n(){var a;e(i).each(function(t){return a=o(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhcolorpicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhcolorpicker"),void 0)):!0})}function o(e){return e.closest(".bfh-colorpicker")}var i="[data-toggle=bfh-colorpicker]",r=function(a,t){this.options=e.extend({},e.fn.bfhcolorpicker.defaults,t),this.$element=e(a),this.initPopover()};r.prototype={constructor:r,initPalette:function(){var e,a,t;e=this.$element.find("canvas"),a=e[0].getContext("2d"),t=a.createLinearGradient(0,0,e.width(),0),t.addColorStop(0,"rgb(255, 255, 255)"),t.addColorStop(.1,"rgb(255,   0,   0)"),t.addColorStop(.25,"rgb(255,   0, 255)"),t.addColorStop(.4,"rgb(0,     0, 255)"),t.addColorStop(.55,"rgb(0,   255, 255)"),t.addColorStop(.7,"rgb(0,   255,   0)"),t.addColorStop(.85,"rgb(255, 255,   0)"),t.addColorStop(1,"rgb(255,   0,   0)"),a.fillStyle=t,a.fillRect(0,0,a.canvas.width,a.canvas.height),t=a.createLinearGradient(0,0,0,e.height()),t.addColorStop(0,"rgba(255, 255, 255, 1)"),t.addColorStop(.5,"rgba(255, 255, 255, 0)"),t.addColorStop(.5,"rgba(0,     0,   0, 0)"),t.addColorStop(1,"rgba(0,     0,   0, 1)"),a.fillStyle=t,a.fillRect(0,0,a.canvas.width,a.canvas.height)},initPopover:function(){var e,a;e="",a="","right"===this.options.align?a='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>':e='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>',this.$element.html('<div class="input-group bfh-colorpicker-toggle" data-toggle="bfh-colorpicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-colorpicker-popover"><canvas class="bfh-colorpicker-palette" width="384" height="256"></canvas></div>'),this.$element.on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",i,r.prototype.toggle).on("mousedown.bfhcolorpicker.data-api","canvas",r.prototype.mouseDown).on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",".bfh-colorpicker-popover",function(){return!1}),this.initPalette(),this.$element.val(this.options.color)},updateVal:function(e,a){var n,o,i,r,s,d,l;s=5,n=this.$element.find("canvas"),o=n[0].getContext("2d"),i=e-n.offset().left,r=a-n.offset().top,i=Math.round(i/s)*s,r=Math.round(r/s)*s,0>i&&(i=0),i>=n.width()&&(i=n.width()-1),0>r&&(r=0),r>n.height()&&(r=n.height()),d=o.getImageData(i,r,1,1),l=t(d.data[0],d.data[1],d.data[2]),l!==this.$element.val()&&(this.$element.val(l),this.$element.trigger("change.bfhcolorpicker"))},mouseDown:function(){var a,t;a=e(this),t=o(a),e(document).on("mousemove.bfhcolorpicker.data-api",{colorpicker:t},r.prototype.mouseMove).one("mouseup.bfhcolorpicker.data-api",{colorpicker:t},r.prototype.mouseUp)},mouseMove:function(e){var a;a=e.data.colorpicker,a.data("bfhcolorpicker").updateVal(e.pageX,e.pageY)},mouseUp:function(a){var t;t=a.data.colorpicker,t.data("bfhcolorpicker").updateVal(a.pageX,a.pageY),e(document).off("mousemove.bfhcolorpicker.data-api"),t.data("bfhcolorpicker").options.close===!0&&n()},toggle:function(a){var t,i,r;if(t=e(this),i=o(t),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),n(),!r){if(i.trigger(a=e.Event("show.bfhcolorpicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhcolorpicker"),t.focus()}return!1}};var s=e.fn.bfhcolorpicker;e.fn.bfhcolorpicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhcolorpicker"),o="object"==typeof a&&a,this.type="bfhcolorpicker",n||t.data("bfhcolorpicker",n=new r(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhcolorpicker.Constructor=r,e.fn.bfhcolorpicker.defaults={align:"left",input:"form-control",placeholder:"",name:"",color:"#000000",close:!0},e.fn.bfhcolorpicker.noConflict=function(){return e.fn.bfhcolorpicker=s,this};var d;e.valHooks.div&&(d=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-colorpicker")?e(a).find('input[type="text"]').val():d?d.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-colorpicker"))e(a).find(".bfh-colorpicker-icon").css("background-color",t),e(a).find('input[type="text"]').val(t);else if(d)return d.set(a,t)}},e(document).ready(function(){e("div.bfh-colorpicker").each(function(){var a;a=e(this),a.bfhcolorpicker(a.data())})}),e(document).on("click.bfhcolorpicker.data-api",n)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhcountries.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addCountries(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCountries(),this.$element.is("span")&&this.displayCountry()};a.prototype={constructor:a,getCountries:function(){var a,t;if(this.options.available){if("string"==typeof this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHCountriesList)BFHCountriesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHCountriesList[a])}else t=this.options.available;return t}return BFHCountriesList},addCountries:function(){var e,a,t;e=this.options.country,t=this.getCountries(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a]+"</option>");this.$element.val(e)},addBootstrapCountries:function(){var e,a,t,n,o,i;n=this.options.country,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getCountries(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?t.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+o+'"></i>'+i[o]+"</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>"));this.$element.val(n)},displayCountry:function(){var e;e=this.options.country,this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e+'"></i> '+BFHCountriesList[e]):this.$element.html(BFHCountriesList[e])}};var t=e.fn.bfhcountries;e.fn.bfhcountries=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhcountries"),i="object"==typeof t&&t,o||n.data("bfhcountries",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhcountries.Constructor=a,e.fn.bfhcountries.defaults={country:"",available:"",flags:!1,blank:!0},e.fn.bfhcountries.noConflict=function(){return e.fn.bfhcountries=t,this},e(document).ready(function(){e("form select.bfh-countries, span.bfh-countries, div.bfh-countries").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcountries(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhcurrencies.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addCurrencies(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCurrencies(),this.$element.is("span")&&this.displayCurrency()};a.prototype={constructor:a,getCurrencies:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHCurrenciesList)BFHCurrenciesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHCurrenciesList[a]);return t}return BFHCurrenciesList},addCurrencies:function(){var e,a,t;e=this.options.currency,t=this.getCurrencies(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a].label+"</option>");this.$element.val(e)},addBootstrapCurrencies:function(){var e,a,t,n,o,i,r;n=this.options.currency,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getCurrencies(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?(r=i[o].currencyflag?i[o].currencyflag:o.substr(0,2),t.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+r+'"></i>'+i[o].label+"</a></li>")):t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o].label+"</a></li>"));this.$element.val(n)},displayCurrency:function(){var e,a;e=this.options.currency,this.options.flags===!0?(a=BFHCurrenciesList[e].currencyflag?BFHCurrenciesList[e].currencyflag:e.substr(0,2),this.$element.html('<i class="glyphicon bfh-flag-'+a+'"></i> '+BFHCurrenciesList[e].label)):this.$element.html(BFHCurrenciesList[e].label)}};var t=e.fn.bfhcurrencies;e.fn.bfhcurrencies=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhcurrencies"),i="object"==typeof t&&t,o||n.data("bfhcurrencies",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhcurrencies.Constructor=a,e.fn.bfhcurrencies.defaults={currency:"",available:"",flags:!1,blank:!0},e.fn.bfhcurrencies.noConflict=function(){return e.fn.bfhcurrencies=t,this},e(document).ready(function(){e("form select.bfh-currencies, span.bfh-currencies, div.bfh-currencies").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcurrencies(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return new Date(a,e,0).getDate()}function t(e,a,t){return new Date(a,e,t).getDay()}function n(e,a,t,n){return a+=1,a=String(a),n=String(n),1===a.length&&(a="0"+a),1===n.length&&(n="0"+n),e.replace("m",a).replace("y",t).replace("d",n)}function o(e,a,t){var n,o,i;n=[{part:"m",position:e.indexOf("m")},{part:"y",position:e.indexOf("y")},{part:"d",position:e.indexOf("d")}],n.sort(function(e,a){return e.position-a.position}),i=a.match(/(\d+)/g);for(o in n)if(n.hasOwnProperty(o)&&n[o].part===t)return Number(i[o]).toString()}function i(){var a;e(s).each(function(t){return a=r(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhdatepicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhdatepicker"),void 0)):!0})}function r(e){return e.closest(".bfh-datepicker")}var s="[data-toggle=bfh-datepicker]",d=function(a,t){this.options=e.extend({},e.fn.bfhdatepicker.defaults,t),this.$element=e(a),this.initCalendar()};d.prototype={constructor:d,setDate:function(){var e,a,t;e=this.options.date,t=this.options.format,""===e||"today"===e||void 0===e?(a=new Date,"today"===e&&this.$element.val(n(t,a.getMonth(),a.getFullYear(),a.getDate())),this.$element.data("month",a.getMonth()),this.$element.data("year",a.getFullYear())):(this.$element.val(e),this.$element.data("month",Number(o(t,e,"m")-1)),this.$element.data("year",Number(o(t,e,"y"))))},setDateLimit:function(e,a){var t,n;n=this.options.format,""!==e?(this.$element.data(a+"limit",!0),"today"===e?(t=new Date,this.$element.data(a+"day",t.getDate()),this.$element.data(a+"month",t.getMonth()),this.$element.data(a+"year",t.getFullYear())):(this.$element.data(a+"day",Number(o(n,e,"d"))),this.$element.data(a+"month",Number(o(n,e,"m")-1)),this.$element.data(a+"year",Number(o(n,e,"y"))))):this.$element.data(a+"limit",!1)},initCalendar:function(){var e,a,t;e="",a="",t="",""!==this.options.icon&&("right"===this.options.align?a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':e='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',t="input-group"),this.$element.html('<div class="'+t+' bfh-datepicker-toggle" data-toggle="bfh-datepicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-datepicker-calendar"><table class="calendar table table-bordered"><thead><tr class="months-header"><th class="month" colspan="4"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th><th class="year" colspan="3"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th></tr><tr class="days-header"></tr></thead><tbody></tbody></table></div>'),this.$element.on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",s,d.prototype.toggle).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .previous",d.prototype.previousMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .next",d.prototype.nextMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .previous",d.prototype.previousYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .next",d.prototype.nextYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar td:not(.off)",d.prototype.select).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar",function(){return!1}),this.setDate(),this.setDateLimit(this.options.min,"lower"),this.setDateLimit(this.options.max,"higher"),this.updateCalendar()},updateCalendarHeader:function(e,a,t){var n,o;for(e.find("table > thead > tr > th.month > span").text(BFHMonthsList[a]),e.find("table > thead > tr > th.year > span").text(t),n=e.find("table > thead > tr.days-header"),n.html(""),o=BFHDayOfWeekStart;o<BFHDaysList.length;o+=1)n.append("<th>"+BFHDaysList[o]+"</th>");for(o=0;BFHDayOfWeekStart>o;o+=1)n.append("<th>"+BFHDaysList[o]+"</th>")},checkMinDate:function(e,a,t){var n,o,i,r;return n=this.$element.data("lowerlimit"),n===!0&&(o=this.$element.data("lowerday"),i=this.$element.data("lowermonth"),r=this.$element.data("loweryear"),o>e&&a===i&&t===r||i>a&&t===r||r>t)?!0:!1},checkMaxDate:function(e,a,t){var n,o,i,r;return n=this.$element.data("higherlimit"),n===!0&&(o=this.$element.data("higherday"),i=this.$element.data("highermonth"),r=this.$element.data("higheryear"),e>o&&a===i&&t===r||a>i&&t===r||t>r)?!0:!1},checkToday:function(e,a,t){var n;return n=new Date,e===n.getDate()&&a===n.getMonth()&&t===n.getFullYear()?!0:!1},updateCalendarDays:function(e,n,o){var i,r,s,d,l,c,m;for(i=e.find("table > tbody").html(""),r=a(n,o),s=a(n+1,o),d=t(n,o,1),l=t(n,o,s),c="",m=0;(d-BFHDayOfWeekStart+7)%7>m;m+=1)c+='<td class="off">'+(r-(d-BFHDayOfWeekStart+7)%7+m+1)+"</td>";for(m=1;s>=m;m+=1)c+=this.checkMinDate(m,n,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkMaxDate(m,n,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkToday(m,n,o)?'<td data-day="'+m+'" class="today">'+m+"</td>":'<td data-day="'+m+'">'+m+"</td>",t(n,o,m)===(6+BFHDayOfWeekStart)%7&&(i.append("<tr>"+c+"</tr>"),c="");for(m=1;(7-(l+1-BFHDayOfWeekStart+7)%7)%7+1>=m;m+=1)c+='<td class="off">'+m+"</td>",m===(7-(l+1-BFHDayOfWeekStart+7)%7)%7&&i.append("<tr>"+c+"</tr>")},updateCalendar:function(){var e,a,t;e=this.$element.find(".bfh-datepicker-calendar"),a=this.$element.data("month"),t=this.$element.data("year"),this.updateCalendarHeader(e,a,t),this.updateCalendarDays(e,a,t)},previousMonth:function(){var a,t,n;return a=e(this),t=r(a),0===Number(t.data("month"))?(t.data("month",11),t.data("year",Number(t.data("year"))-1)):t.data("month",Number(t.data("month"))-1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},nextMonth:function(){var a,t,n;return a=e(this),t=r(a),11===Number(t.data("month"))?(t.data("month",0),t.data("year",Number(t.data("year"))+1)):t.data("month",Number(t.data("month"))+1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},previousYear:function(){var a,t,n;return a=e(this),t=r(a),t.data("year",Number(t.data("year"))-1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},nextYear:function(){var a,t,n;return a=e(this),t=r(a),t.data("year",Number(t.data("year"))+1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},select:function(a){var t,o,s,d,l,c;t=e(this),a.preventDefault(),a.stopPropagation(),o=r(t),s=o.data("bfhdatepicker"),d=o.data("month"),l=o.data("year"),c=t.data("day"),o.val(n(s.options.format,d,l,c)),o.trigger("change.bfhdatepicker"),s.options.close===!0&&i()},toggle:function(a){var t,n,o;if(t=e(this),n=r(t),n.is(".disabled")||void 0!==n.attr("disabled"))return!0;if(o=n.hasClass("open"),i(),!o){if(n.trigger(a=e.Event("show.bfhdatepicker")),a.isDefaultPrevented())return!0;n.toggleClass("open").trigger("shown.bfhdatepicker"),t.focus()}return!1}};var l=e.fn.bfhdatepicker;e.fn.bfhdatepicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhdatepicker"),o="object"==typeof a&&a,this.type="bfhdatepicker",n||t.data("bfhdatepicker",n=new d(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhdatepicker.Constructor=d,e.fn.bfhdatepicker.defaults={icon:"glyphicon glyphicon-calendar",align:"left",input:"form-control",placeholder:"",name:"",date:"today",format:"m/d/y",min:"",max:"",close:!0},e.fn.bfhdatepicker.noConflict=function(){return e.fn.bfhdatepicker=l,this};var c;e.valHooks.div&&(c=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-datepicker")?e(a).find('input[type="text"]').val():c?c.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-datepicker"))e(a).find('input[type="text"]').val(t);else if(c)return c.set(a,t)}},e(document).ready(function(){e("div.bfh-datepicker").each(function(){var a;a=e(this),a.bfhdatepicker(a.data())})}),e(document).on("click.bfhdatepicker.data-api",i)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhfonts.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHFontsList)BFHFontsList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHFontsList[a]);return t}return BFHFontsList},addFonts:function(){var e,a,t;e=this.options.font,t=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+a+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,t,n,o,i;n=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFonts(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: '+i[o]+"' data-option=\""+o+'">'+o+"</a></li>");this.options.showCustom&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(n)}};var t=e.fn.bfhfonts;e.fn.bfhfonts=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhfonts"),i="object"==typeof t&&t,o||n.data("bfhfonts",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhfonts.Constructor=a,e.fn.bfhfonts.defaults={font:"",available:"",blank:!0,showCustom:!1,showMore:!1},e.fn.bfhfonts.noConflict=function(){return e.fn.bfhfonts=t,this},e(document).ready(function(){e("form select.bfh-fonts, span.bfh-fonts, div.bfh-fonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfonts(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhfontsizes.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFontSizes(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFontSizes()};a.prototype={constructor:a,getFontsizes:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHFontSizesList)BFHFontSizesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHFontSizesList[a]);return t}return BFHFontSizesList},addFontSizes:function(){var e,a,t;e=this.options.fontsize,t=this.getFontsizes(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a]+"</option>");this.$element.val(e)},addBootstrapFontSizes:function(){var e,a,t,n,o,i;n=this.options.fontsize,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFontsizes(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>");this.$element.val(n)}};var t=e.fn.bfhfontsizes;e.fn.bfhfontsizes=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhfontsizes"),i="object"==typeof t&&t,o||n.data("bfhfontsizes",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhfontsizes.Constructor=a,e.fn.bfhfontsizes.defaults={fontsize:"",available:"",blank:!0},e.fn.bfhfontsizes.noConflict=function(){return e.fn.bfhfontsizes=t,this},e(document).ready(function(){e("form select.bfh-fontsizes, span.bfh-fontsizes, div.bfh-fontsizes").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfontsizes(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhgooglefonts.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,t;if(t=[],this.options.subset)for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(this.options.subset,BFHGoogleFontsList.items[a].subsets)>=0&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});else if(this.options.available){this.options.available=this.options.available.split(",");for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(BFHGoogleFontsList.items[a].family,this.options.available)>=0&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)})}else for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});return t},addFonts:function(){var e,a,t;e=this.options.font,t=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+t[a].info.family+'">'+t[a].info.family+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,t,n,o,i;n=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFonts(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option="" style="background-image: none;"></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" style="background-position: 0 -'+(30*i[o].index-2)+'px;" data-option="'+i[o].info.family+'">'+i[o].info.family+"</a></li>");this.options.showCustom&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(n)}};var t=e.fn.bfhgooglefonts;e.fn.bfhgooglefonts=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhgooglefonts"),i="object"==typeof t&&t,o||n.data("bfhgooglefonts",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhgooglefonts.Constructor=a,e.fn.bfhgooglefonts.defaults={font:"",available:"",subset:"",blank:!0},e.fn.bfhgooglefonts.noConflict=function(){return e.fn.bfhgooglefonts=t,this},e(document).ready(function(){e("form select.bfh-googlefonts, span.bfh-googlefonts, div.bfh-googlefonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhgooglefonts(a.data())})})}(window.jQuery),!function(e){"use strict";var a=function(a,t){var n,o;this.options=e.extend({},e.fn.bfhgooglefontlist.defaults,t),this.$element=e(a),this.familyList={};for(n in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(n)&&(o=BFHGoogleFontsList.items[n],this.familyList[o.family]={font:BFHGoogleFontsList.items[n],i:parseInt(n,10)});this.addFonts()};a.prototype={constructor:a,addFonts:function(){var a,t,n,o,i=this;a=this.options.family,this.$element.html("");var r=function(a){a.preventDefault(),i.$element.trigger("select",e(this).data("option"))};for(t in this.familyList)this.familyList.hasOwnProperty(t)&&(o=this.familyList[t],n=e('<a href="#" class="list-group-item" style="background-position: 0 -'+(30*o.i-2)+'px;" data-option="'+o.font.family+'">'+o.font.family+"</a>"),n.bind("click",r),this.$element.append(n))}},e.fn.bfhgooglefontlist=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhgooglefontlist"),i="object"==typeof t&&t,this.type="bfhgooglefontlist",o||n.data("bfhgooglefontlist",o=new a(this,i)),"string"==typeof t&&o[t]()})},e.fn.bfhgooglefontlist.Constructor=a,e.fn.bfhgooglefontlist.defaults={family:""},e(window).on("load",function(){e("div.bfh-googlefontlist").each(function(){var a;a=e(this),a.bfhgooglefontlist(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhlanguages.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addLanguages(),this.$element.is("span")&&this.displayLanguage(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapLanguages()};a.prototype={constructor:a,getLanguages:function(){var e,a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in this.options.available)this.options.available.hasOwnProperty(a)&&(-1!==this.options.available[a].indexOf("_")?(e=this.options.available[a].split("_"),t[e[0]]={name:BFHLanguagesList[e[0]],country:e[1]}):t[this.options.available[a]]=BFHLanguagesList[this.options.available[a]]);return t}return BFHLanguagesList},addLanguages:function(){var e,a,t;e=this.options.language,a=this.getLanguages(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in a)a.hasOwnProperty(t)&&(a[t].hasOwnProperty("name")?this.$element.append('<option value="'+t+"_"+a[t].country+'">'+a[t].name.toProperCase()+" ("+BFHCountriesList[a[t].country]+")</option>"):this.$element.append('<option value="'+t+'">'+a[t].toProperCase()+"</option>"));this.$element.val(e)},addBootstrapLanguages:function(){var e,a,t,n,o,i;n=this.options.language,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),o=this.getLanguages(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in o)o.hasOwnProperty(i)&&(o[i].hasOwnProperty("name")?this.options.flags===!0?t.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'"><i class="glyphicon bfh-flag-'+o[i].country+'"></i>'+o[i].name.toProperCase()+"</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'">'+o[i].name.toProperCase()+" ("+BFHCountriesList[o[i].country]+")</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+o[i]+"</a></li>"));this.$element.val(n)},displayLanguage:function(){var e;e=this.options.language,-1!==e.indexOf("_")?(e=e.split("_"),this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e[1]+'"></i> '+BFHLanguagesList[e[0]].toProperCase()):this.$element.html(BFHLanguagesList[e[0]].toProperCase()+" ("+BFHCountriesList[e[1]]+")")):this.$element.html(BFHLanguagesList[e].toProperCase())}};var t=e.fn.bfhlanguages;e.fn.bfhlanguages=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhlanguages"),i="object"==typeof t&&t,o||n.data("bfhlanguages",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhlanguages.Constructor=a,e.fn.bfhlanguages.defaults={language:"",available:"",flags:!1,blank:!0},e.fn.bfhlanguages.noConflict=function(){return e.fn.bfhlanguages=t,this},e(document).ready(function(){e("form select.bfh-languages, span.bfh-languages, div.bfh-languages").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhlanguages(a.data())})}),String.prototype.toProperCase=function(){return this.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhnumber.defaults,t),this.$element=e(a),this.initInput()};a.prototype={constructor:a,initInput:function(){this.options.buttons===!0&&(this.$element.wrap('<div class="input-group"></div>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn inc"><span class="glyphicon glyphicon-chevron-up"></span></span>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn dec"><span class="glyphicon glyphicon-chevron-down"></span></span>')),this.$element.on("change.bfhnumber.data-api",a.prototype.change),this.options.keyboard===!0&&this.$element.on("keydown.bfhnumber.data-api",a.prototype.keydown),this.options.buttons===!0&&this.$element.parent().on("mousedown.bfhnumber.data-api",".inc",a.prototype.btninc).on("mousedown.bfhnumber.data-api",".dec",a.prototype.btndec),this.formatNumber()},keydown:function(a){var t;if(t=e(this).data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled"))return!0;switch(a.which){case 38:t.increment();break;case 40:t.decrement()}return!0},mouseup:function(e){var a,t,n;a=e.data.btn,t=a.$element.data("timer"),n=a.$element.data("interval"),clearTimeout(t),clearInterval(n)},btninc:function(){var t,n;return t=e(this).parent().find(".bfh-number").data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled")?!0:(t.increment(),n=setTimeout(function(){var e;e=setInterval(function(){t.increment()},80),t.$element.data("interval",e)},750),t.$element.data("timer",n),e(document).one("mouseup",{btn:t},a.prototype.mouseup),!0)},btndec:function(){var t,n;return t=e(this).parent().find(".bfh-number").data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled")?!0:(t.decrement(),n=setTimeout(function(){var e;e=setInterval(function(){t.decrement()},80),t.$element.data("interval",e)},750),t.$element.data("timer",n),e(document).one("mouseup",{btn:t},a.prototype.mouseup),!0)},change:function(){var a;return a=e(this).data("bfhnumber"),a.$element.is(".disabled")||void 0!==a.$element.attr("disabled")?!0:(a.formatNumber(),!0)},increment:function(){var e;e=this.getValue(),e+=1,this.$element.val(e).change()
},decrement:function(){var e;e=this.getValue(),e-=1,this.$element.val(e).change()},getValue:function(){var e;return e=this.$element.val(),"-1"!==e&&(e=String(e).replace(/\D/g,"")),0===String(e).length&&(e=this.options.min),parseInt(e)},formatNumber:function(){var e,a,t,n;if(e=this.getValue(),e>this.options.max&&(e=this.options.wrap===!0?this.options.min:this.options.max),e<this.options.min&&(e=this.options.wrap===!0?this.options.max:this.options.min),this.options.zeros===!0)for(a=String(this.options.max).length,t=String(e).length,n=t;a>n;n+=1)e="0"+e;e!==this.$element.val()&&this.$element.val(e)}};var t=e.fn.bfhnumber;e.fn.bfhnumber=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhnumber"),i="object"==typeof t&&t,o||n.data("bfhnumber",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhnumber.Constructor=a,e.fn.bfhnumber.defaults={min:0,max:9999,zeros:!1,keyboard:!0,buttons:!0,wrap:!1},e.fn.bfhnumber.noConflict=function(){return e.fn.bfhnumber=t,this},e(document).ready(function(){e('form input[type="text"].bfh-number, form input[type="number"].bfh-number').each(function(){var a;a=e(this),a.bfhnumber(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){var t,n,o,i;for(t="",a=String(a).replace(/\D/g,""),n=0,o=0;n<e.length;n+=1)/\d/g.test(e.charAt(n))?e.charAt(n)===a.charAt(o)?(t+=a.charAt(o),o+=1):t+=e.charAt(n):"d"!==e.charAt(n)?(""!==a.charAt(o)||"+"===e.charAt(n))&&(t+=e.charAt(n)):""===a.charAt(o)?t+="":(t+=a.charAt(o),o+=1);return i=e.charAt(t.length),"d"!==i&&(t+=i),t}function t(e){var a,t=0;return document.selection?(e.focus(),a=document.selection.createRange(),a.moveStart("character",-e.value.length),t=a.text.length):(e.selectionStart||0===e.selectionStart)&&(t=e.selectionStart),t}function n(e,a){var t;document.selection?(e.focus(),t=document.selection.createRange(),t.moveStart("character",-e.value.length),t.moveStart("character",a),t.moveEnd("character",0),t.select()):(e.selectionStart||0===e.selectionStart)&&(e.selectionStart=a,e.selectionEnd=a,e.focus())}var o=function(a,t){this.options=e.extend({},e.fn.bfhphone.defaults,t),this.$element=e(a),(this.$element.is('input[type="text"]')||this.$element.is('input[type="tel"]'))&&this.addFormatter(),this.$element.is("span")&&this.displayFormatter()};o.prototype={constructor:o,addFormatter:function(){var a;""!==this.options.country&&(a=e(document).find("#"+this.options.country),0!==a.length?(this.options.format=BFHPhoneFormatList[a.val()],a.on("change",{phone:this},this.changeCountry)):this.options.format=BFHPhoneFormatList[this.options.country]),this.$element.on("keyup.bfhphone.data-api",o.prototype.change),this.loadFormatter()},loadFormatter:function(){var e;e=a(this.options.format,this.$element.val()),this.$element.val(e)},displayFormatter:function(){var e;""!==this.options.country&&(this.options.format=BFHPhoneFormatList[this.options.country]),e=a(this.options.format,this.options.number),this.$element.html(e)},changeCountry:function(a){var t,n;t=e(this),n=a.data.phone,n.$element.val(String(n.$element.val()).replace(/\+\d*/g,"")),n.options.format=BFHPhoneFormatList[t.val()],n.loadFormatter()},change:function(o){var i,r,s,d;return i=e(this).data("bfhphone"),i.$element.is(".disabled")||void 0!==i.$element.attr("disabled")?!0:(r=t(i.$element[0]),s=!1,r===i.$element.val().length&&(s=!0),8===o.which&&"d"!==i.options.format.charAt(i.$element.val().length)&&i.$element.val(String(i.$element.val()).substring(0,i.$element.val().length-1)),d=a(i.options.format,i.$element.val()),d===i.$element.val()?!0:(i.$element.val(d),s&&(r=i.$element.val().length),n(i.$element[0],r),!0))}};var i=e.fn.bfhphone;e.fn.bfhphone=function(a){return this.each(function(){var t,n,i;t=e(this),n=t.data("bfhphone"),i="object"==typeof a&&a,n||t.data("bfhphone",n=new o(this,i)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhphone.Constructor=o,e.fn.bfhphone.defaults={format:"",number:"",country:""},e.fn.bfhphone.noConflict=function(){return e.fn.bfhphone=i,this},e(document).ready(function(){e('form input[type="text"].bfh-phone, form input[type="tel"].bfh-phone, span.bfh-phone').each(function(){var a;a=e(this),a.bfhphone(a.data())})})}(window.jQuery),+function(e){"use strict";function a(){var a;e(n).each(function(n){return a=t(e(this)),a.hasClass("open")?(a.trigger(n=e.Event("hide.bfhselectbox")),n.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhselectbox"),void 0)):!0})}function t(e){return e.closest(".bfh-selectbox")}var n="[data-toggle=bfh-selectbox]",o=function(a,t){this.options=e.extend({},e.fn.bfhselectbox.defaults,t),this.$element=e(a),this.initSelectBox()};o.prototype={constructor:o,initSelectBox:function(){var a;a="",0===this.$element.find(".bfh-selectbox-options").length&&(this.$element.find("div").each(function(){a=a+'<li><a tabindex="-1" href="#" data-option="'+e(this).data("value")+'">'+e(this).html()+"</a></li>"}),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><a class="bfh-selectbox-toggle '+this.options.input+'" role="button" data-toggle="bfh-selectbox" href="#"><span class="bfh-selectbox-option"></span><span class="'+this.options.icon+' selectbox-caret"></span></a><div class="bfh-selectbox-options"><div role="listbox"><ul role="option"></ul></div></div>'),this.$element.find("[role=option]").html(a),this.options.filter===!0&&this.$element.find(".bfh-selectbox-options").prepend('<div class="bfh-selectbox-filter-container"><input type="text" class="bfh-selectbox-filter form-control"></div>'),this.$element.val(this.options.value)),this.$element.on("click.bfhselectbox.data-api touchstart.bfhselectbox.data-api",n,o.prototype.toggle).on("keydown.bfhselectbox.data-api",n+", [role=option]",o.prototype.keydown).on("mouseenter.bfhselectbox.data-api","[role=option] > li > a",o.prototype.mouseenter).on("click.bfhselectbox.data-api","[role=option] > li > a",o.prototype.select).on("click.bfhselectbox.data-api",".bfh-selectbox-filter",function(){return!1}).on("propertychange.bfhselectbox.data-api change.bfhselectbox.data-api input.bfhselectbox.data-api paste.bfhselectbox.data-api",".bfh-selectbox-filter",o.prototype.filter)},toggle:function(n){var o,i,r;if(o=e(this),i=t(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),a(),!r){if(i.trigger(n=e.Event("show.bfhselectbox")),n.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhselectbox").find('[role=option] > li > [data-option="'+i.val()+'"]').focus()}return!1},filter:function(){var a,n,o;a=e(this),n=t(a),o=e("[role=option] li a",n),o.hide().filter(function(){return-1!==e(this).text().toUpperCase().indexOf(a.val().toUpperCase())}).show()},keydown:function(a){var i,r,s,d,l;return/(38|40|27)/.test(a.keyCode)?(i=e(this),a.preventDefault(),a.stopPropagation(),s=t(i),d=s.hasClass("open"),!d||d&&27===a.keyCode?(27===a.which&&s.find(n).focus(),i.click()):(r=e("[role=option] li:not(.divider) a:visible",s),r.length?(e("body").off("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),l=r.index(r.filter(":focus")),38===a.keyCode&&l>0&&(l-=1),40===a.keyCode&&l<r.length-1&&(l+=1),l||(l=0),r.eq(l).focus(),e("body").on("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),void 0):!0)):!0},mouseenter:function(){var a;a=e(this),a.focus()},select:function(n){var o,i;return o=e(this),n.preventDefault(),n.stopPropagation(),o.is(".disabled")||void 0!==o.attr("disabled")?!0:(i=t(o),i.val(o.data("option")),i.trigger("change.bfhselectbox"),a(),void 0)}};var i=e.fn.bfhselectbox;e.fn.bfhselectbox=function(a){return this.each(function(){var t,n,i;t=e(this),n=t.data("bfhselectbox"),i="object"==typeof a&&a,this.type="bfhselectbox",n||t.data("bfhselectbox",n=new o(this,i)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhselectbox.Constructor=o,e.fn.bfhselectbox.defaults={icon:"caret",input:"form-control",name:"",value:"",filter:!1},e.fn.bfhselectbox.noConflict=function(){return e.fn.bfhselectbox=i,this};var r;e.valHooks.div&&(r=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-selectbox")?e(a).find('input[type="hidden"]').val():r?r.get(a):void 0},set:function(a,t){var n,o;if(e(a).hasClass("bfh-selectbox"))n=e(a),n.find("li a[data-option='"+t+"']").length>0?o=n.find("li a[data-option='"+t+"']").html():n.find("li a").length>0?o=n.find("li a").eq(0).html():(t="",o=""),n.find('input[type="hidden"]').val(t),n.find(".bfh-selectbox-option").html(o);else if(r)return r.set(a,t)}},e(document).ready(function(){e("div.bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data())})}),e(document).on("click.bfhselectbox.data-api",a)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhslider.defaults,t),this.$element=e(a),this.initSlider()};a.prototype={constructor:a,initSlider:function(){""===this.options.value&&(this.options.value=this.options.min),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><div class="bfh-slider-handle"><div class="bfh-slider-value"></div></div>'),this.$element.find('input[type="hidden"]').val(this.options.value),this.updateHandle(this.options.value),this.$element.on("mousedown.bfhslider.data-api",a.prototype.mouseDown)},updateHandle:function(e){var a,t,n,o;o=this.options.max-this.options.min,t=this.$element.width(),n=this.$element.position().left,a=Math.round((e-this.options.min)*(t-20)/o+n),this.$element.find(".bfh-slider-handle").css("left",a+"px"),this.$element.find(".bfh-slider-value").text(e)},updateVal:function(e){var a,t,n,o,i;return i=this.options.max-this.options.min,a=this.$element.width(),t=this.$element.offset().left,n=t+a,t>e&&(e=t),e+20>n&&(e=n),o=(e-t)/a,o=Math.ceil(o*i+this.options.min),o===this.$element.val()?!0:(this.$element.val(o),this.$element.trigger("change.bfhslider"),void 0)},mouseDown:function(){var t;return t=e(this),t.is(".disabled")||void 0!==t.attr("disabled")?!0:(e(document).on("mousemove.bfhslider.data-api",{slider:t},a.prototype.mouseMove).one("mouseup.bfhslider.data-api",{slider:t},a.prototype.mouseUp),void 0)},mouseMove:function(e){var a;a=e.data.slider,a.data("bfhslider").updateVal(e.pageX)},mouseUp:function(a){var t;t=a.data.slider,t.data("bfhslider").updateVal(a.pageX),e(document).off("mousemove.bfhslider.data-api")}};var t=e.fn.bfhslider;e.fn.bfhslider=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhslider"),i="object"==typeof t&&t,this.type="bfhslider",o||n.data("bfhslider",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhslider.Constructor=a,e.fn.bfhslider.defaults={name:"",value:"",min:0,max:100},e.fn.bfhslider.noConflict=function(){return e.fn.bfhslider=t,this};var n;e.valHooks.div&&(n=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-slider")?e(a).find('input[type="hidden"]').val():n?n.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-slider"))e(a).find('input[type="hidden"]').val(t),e(a).data("bfhslider").updateHandle(t);else if(n)return n.set(a,t)}},e(document).ready(function(){e("div.bfh-slider").each(function(){var a;a=e(this),a.bfhslider(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhstates.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addStates(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapStates(),this.$element.is("span")&&this.displayState()};a.prototype={constructor:a,addStates:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.val(),t.on("change",{state:this},this.changeCountry))),this.loadStates(a)},loadStates:function(e){var a,t;a=this.options.state,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(t)&&this.$element.append('<option value="'+BFHStatesList[e][t].code+'">'+BFHStatesList[e][t].name+"</option>");this.$element.val(a)},changeCountry:function(a){var t,n,o;t=e(this),n=a.data.state,o=t.val(),n.loadStates(o)},addBootstrapStates:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.find('input[type="hidden"]').val(),t.on("change.bfhselectbox",{state:this},this.changeBootstrapCountry))),this.loadBootstrapStates(a)},loadBootstrapStates:function(e){var a,t,n,o,i,r;o=this.options.state,i="",a=this.$element.find('input[type="hidden"]'),t=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(r in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(r)&&(n.append('<li><a tabindex="-1" href="#" data-option="'+BFHStatesList[e][r].code+'">'+BFHStatesList[e][r].name+"</a></li>"),BFHStatesList[e][r].code===o&&(i=BFHStatesList[e][r].name));this.$element.val(o)},changeBootstrapCountry:function(a){var t,n,o;t=e(this),n=a.data.state,o=t.val(),n.loadBootstrapStates(o)},displayState:function(){var e,a,t,n;e=this.options.country,a=this.options.state,t="";for(n in BFHStatesList[e])if(BFHStatesList[e].hasOwnProperty(n)&&BFHStatesList[e][n].code===a){t=BFHStatesList[e][n].name;break}this.$element.html(t)}};var t=e.fn.bfhstates;e.fn.bfhstates=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhstates"),i="object"==typeof t&&t,o||n.data("bfhstates",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhstates.Constructor=a,e.fn.bfhstates.defaults={country:"",state:"",blank:!0},e.fn.bfhstates.noConflict=function(){return e.fn.bfhstates=t,this},e(document).ready(function(){e("form select.bfh-states, span.bfh-states, div.bfh-states").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhstates(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return e=String(e),1===e.length&&(e="0"+e),a=String(a),1===a.length&&(a="0"+a),e+BFHTimePickerDelimiter+a}function t(){var a;e(o).each(function(t){return a=n(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhtimepicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhtimepicker"),void 0)):!0})}function n(e){return e.closest(".bfh-timepicker")}var o="[data-toggle=bfh-timepicker]",i=function(a,t){this.options=e.extend({},e.fn.bfhtimepicker.defaults,t),this.$element=e(a),this.initPopover()};i.prototype={constructor:i,setTime:function(){var e,t,n,o,i,r,s;e=this.options.time,r="",s="",""===e||"now"===e||void 0===e?(t=new Date,o=t.getHours(),i=t.getMinutes(),"12h"===this.options.mode&&(o>12?(o-=12,r=" "+BFHTimePickerModes.pm,s="pm"):(r=" "+BFHTimePickerModes.am,s="am")),"now"===e&&this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(a(o,i)+r),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s)):(n=String(e).split(BFHTimePickerDelimiter),o=n[0],i=n[1],"12h"===this.options.mode&&(n=String(i).split(" "),i=n[0],s=n[1]===BFHTimePickerModes.pm?"pm":"am"),this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(e),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s))},initPopover:function(){var a,t,n,r,s;a="",t="",n="",""!==this.options.icon&&("right"===this.options.align?t='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',n="input-group"),r="",s="23","12h"===this.options.mode&&(r='<td><div class="bfh-selectbox" data-input="'+this.options.input+'" data-value="am"><div data-value="am">'+BFHTimePickerModes.am+'</div><div data-value="pm">'+BFHTimePickerModes.pm+"</div></div>",s="11"),this.$element.html('<div class="'+n+' bfh-timepicker-toggle" data-toggle="bfh-timepicker">'+a+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+t+'</div><div class="bfh-timepicker-popover"><table class="table"><tbody><tr><td class="hour"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="'+s+'" data-zeros="true" data-wrap="true"></td><td class="separator">'+BFHTimePickerDelimiter+'</td><td class="minute"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="59" data-zeros="true" data-wrap="true"></td>'+r+"</tr></tbody></table></div>"),this.$element.on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",o,i.prototype.toggle).on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",".bfh-timepicker-popover > table",function(){return!1}),this.$element.find(".bfh-number").each(function(){var a;a=e(this),a.bfhnumber(a.data()),a.on("change",i.prototype.change)}),this.$element.find(".bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data()),a.on("change.bfhselectbox",i.prototype.change)}),this.setTime(),this.updatePopover()},updatePopover:function(){var e,a,t;e=this.$element.data("hour"),a=this.$element.data("minute"),t=this.$element.data("mode"),this.$element.find(".hour input[type=text]").val(e).change(),this.$element.find(".minute input[type=text]").val(a).change(),this.$element.find(".bfh-selectbox").val(t)},change:function(){var a,t,o,i;return a=e(this),t=n(a),o=t.data("bfhtimepicker"),o&&"undefined"!==o&&(i="","12h"===o.options.mode&&(i=" "+BFHTimePickerModes[t.find(".bfh-selectbox").val()]),t.find('.bfh-timepicker-toggle > input[type="text"]').val(t.find(".hour input[type=text]").val()+BFHTimePickerDelimiter+t.find(".minute input[type=text]").val()+i),t.trigger("change.bfhtimepicker")),!1},toggle:function(a){var o,i,r;if(o=e(this),i=n(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),t(),!r){if(i.trigger(a=e.Event("show.bfhtimepicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhtimepicker"),o.focus()}return!1}};var r=e.fn.bfhtimepicker;e.fn.bfhtimepicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhtimepicker"),o="object"==typeof a&&a,this.type="bfhtimepicker",n||t.data("bfhtimepicker",n=new i(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhtimepicker.Constructor=i,e.fn.bfhtimepicker.defaults={icon:"glyphicon glyphicon-time",align:"left",input:"form-control",placeholder:"",name:"",time:"now",mode:"24h"},e.fn.bfhtimepicker.noConflict=function(){return e.fn.bfhtimepicker=r,this};var s;e.valHooks.div&&(s=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-timepicker")?e(a).find('.bfh-timepicker-toggle > input[type="text"]').val():s?s.get(a):void 0},set:function(a,t){var n;if(e(a).hasClass("bfh-timepicker"))n=e(a).data("bfhtimepicker"),n.options.time=t,n.setTime(),n.updatePopover();else if(s)return s.set(a,t)}},e(document).ready(function(){e("div.bfh-timepicker").each(function(){var a;a=e(this),a.bfhtimepicker(a.data())})}),e(document).on("click.bfhtimepicker.data-api",t)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhtimezones.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addTimezones(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapTimezones()};a.prototype={constructor:a,addTimezones:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.val(),t.on("change",{timezone:this},this.changeCountry))),this.loadTimezones(a)},loadTimezones:function(e){var a,t;a=this.options.timezone,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(t)&&this.$element.append('<option value="'+t+'">'+BFHTimezonesList[e][t]+"</option>");this.$element.val(a)},changeCountry:function(a){var t,n,o;t=e(this),n=a.data.timezone,o=t.val(),n.loadTimezones(o)},addBootstrapTimezones:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.find('input[type="hidden"]').val(),t.on("change.bfhselectbox",{timezone:this},this.changeBootstrapCountry))),this.loadBootstrapTimezones(a)},loadBootstrapTimezones:function(e){var a,t,n,o,i;o=this.options.timezone,a=this.$element.find('input[type="hidden"]'),t=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(i)&&n.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+BFHTimezonesList[e][i]+"</a></li>");this.$element.val(o)},changeBootstrapCountry:function(a){var t,n,o;t=e(this),n=a.data.timezone,o=t.val(),n.loadBootstrapTimezones(o)}};var t=e.fn.bfhtimezones;e.fn.bfhtimezones=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhtimezones"),i="object"==typeof t&&t,o||n.data("bfhtimezones",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhtimezones.Constructor=a,e.fn.bfhtimezones.defaults={country:"",timezone:"",blank:!0},e.fn.bfhtimezones.noConflict=function(){return e.fn.bfhtimezones=t,this},e(document).ready(function(){e("form select.bfh-timezones, div.bfh-timezones").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhtimezones(a.data())})})}(window.jQuery),!function(e){e.expr[":"].icontains=function(a,t,n){return e(a).text().toUpperCase().indexOf(n[3].toUpperCase())>=0};var a=function(t,n,o){o&&(o.stopPropagation(),o.preventDefault()),this.$element=e(t),this.$newElement=null,this.$button=null,this.$menu=null,this.$lis=null,this.options=e.extend({},e.fn.selectpicker.defaults,this.$element.data(),"object"==typeof n&&n),null===this.options.title&&(this.options.title=this.$element.attr("title")),this.val=a.prototype.val,this.render=a.prototype.render,this.refresh=a.prototype.refresh,this.setStyle=a.prototype.setStyle,this.selectAll=a.prototype.selectAll,this.deselectAll=a.prototype.deselectAll,this.init()};a.prototype={constructor:a,init:function(){var a=this,t=this.$element.attr("id");this.$element.hide(),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),this.$newElement=this.createView(),this.$element.after(this.$newElement),this.$menu=this.$newElement.find("> .dropdown-menu"),this.$button=this.$newElement.find("> button"),this.$searchbox=this.$newElement.find("input"),void 0!==t&&(this.$button.attr("data-id",t),e('label[for="'+t+'"]').click(function(e){e.preventDefault(),a.$button.focus()})),this.checkDisabled(),this.clickListener(),this.options.liveSearch&&this.liveSearchListener(),this.render(),this.liHeight(),this.setStyle(),this.setWidth(),this.options.container&&this.selectPosition(),this.$menu.data("this",this),this.$newElement.data("this",this)},createDropdown:function(){var a=this.multiple?" show-tick":"",t=this.$element.parent().hasClass("input-group")?" input-group-btn":"",n=this.autofocus?" autofocus":"",o=this.options.header?'<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>":"",i=this.options.liveSearch?'<div class="bootstrap-select-searchbox"><input type="text" class="input-block-level form-control" /></div>':"",r=this.options.actionsBox?'<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">Select All</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">Deselect All</button></div></div>':"",s='<div class="btn-group bootstrap-select'+a+t+'"><button type="button" class="btn dropdown-toggle selectpicker" data-toggle="dropdown"'+n+'><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">'+o+i+r+'<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';return e(s)},createView:function(){var e=this.createDropdown(),a=this.createLi();return e.find("ul").append(a),e},reloadLi:function(){this.destroyLi();var e=this.createLi();this.$menu.find("ul").append(e)},destroyLi:function(){this.$menu.find("li").remove()},createLi:function(){var a=this,t=[],n="";return this.$element.find("option").each(function(){var n=e(this),o=n.attr("class")||"",i=n.attr("style")||"",r=n.data("content")?n.data("content"):n.html(),s=void 0!==n.data("subtext")?'<small class="muted text-muted">'+n.data("subtext")+"</small>":"",d=void 0!==n.data("icon")?'<i class="'+a.options.iconBase+" "+n.data("icon")+'"></i> ':"";if(""!==d&&(n.is(":disabled")||n.parent().is(":disabled"))&&(d="<span>"+d+"</span>"),n.data("content")||(r=d+'<span class="text">'+r+s+"</span>"),a.options.hideDisabled&&(n.is(":disabled")||n.parent().is(":disabled")))t.push('<a style="min-height: 0; padding: 0"></a>');else if(n.parent().is("optgroup")&&n.data("divider")!==!0)if(0===n.index()){var l=n.parent().attr("label"),c=void 0!==n.parent().data("subtext")?'<small class="muted text-muted">'+n.parent().data("subtext")+"</small>":"",m=n.parent().data("icon")?'<i class="'+n.parent().data("icon")+'"></i> ':"";l=m+'<span class="text">'+l+c+"</span>",0!==n[0].index?t.push('<div class="div-contain"><div class="divider"></div></div><dt>'+l+"</dt>"+a.createA(r,"opt "+o,i)):t.push("<dt>"+l+"</dt>"+a.createA(r,"opt "+o,i))}else t.push(a.createA(r,"opt "+o,i));else n.data("divider")===!0?t.push('<div class="div-contain"><div class="divider"></div></div>'):e(this).data("hidden")===!0?t.push("<a></a>"):t.push(a.createA(r,o,i))}),e.each(t,function(e,a){var t="<a></a>"===a?'class="hide is-hidden"':"";n+='<li rel="'+e+'"'+t+">"+a+"</li>"}),this.multiple||0!==this.$element.find("option:selected").length||this.options.title||this.$element.find("option").eq(0).prop("selected",!0).attr("selected","selected"),e(n)},createA:function(e,a,t){return'<a tabindex="0" class="'+a+'" style="'+t+'">'+e+'<i class="'+this.options.iconBase+" "+this.options.tickIcon+' icon-ok check-mark"></i></a>'},render:function(a){var t=this;a!==!1&&this.$element.find("option").each(function(a){t.setDisabled(a,e(this).is(":disabled")||e(this).parent().is(":disabled")),t.setSelected(a,e(this).is(":selected"))}),this.tabIndex();var n=this.$element.find("option:selected").map(function(){var a,n=e(this),o=n.data("icon")&&t.options.showIcon?'<i class="'+t.options.iconBase+" "+n.data("icon")+'"></i> ':"";return a=t.options.showSubtext&&n.attr("data-subtext")&&!t.multiple?' <small class="muted text-muted">'+n.data("subtext")+"</small>":"",n.data("content")&&t.options.showContent?n.data("content"):void 0!==n.attr("title")?n.attr("title"):o+n.html()+a}).toArray(),o=this.multiple?n.join(this.options.multipleSeparator):n[0];if(this.multiple&&this.options.selectedTextFormat.indexOf("count")>-1){var i=this.options.selectedTextFormat.split(">"),r=this.options.hideDisabled?":not([disabled])":"";(i.length>1&&n.length>i[1]||1==i.length&&n.length>=2)&&(o=this.options.countSelectedText.replace("{0}",n.length).replace("{1}",this.$element.find('option:not([data-divider="true"]):not([data-hidden="true"])'+r).length))}this.options.title=this.$element.attr("title"),o||(o=void 0!==this.options.title?this.options.title:this.options.noneSelectedText),this.$button.attr("title",e.trim(o)),this.$newElement.find(".filter-option").html(o)},setStyle:function(e,a){this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device/gi,""));var t=e?e:this.options.style;"add"==a?this.$button.addClass(t):"remove"==a?this.$button.removeClass(t):(this.$button.removeClass(this.options.style),this.$button.addClass(t))},liHeight:function(){if(this.options.size!==!1){var e=this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus",!1).end().appendTo("body"),a=e.addClass("open").find("> .dropdown-menu"),t=a.find("li > a").outerHeight(),n=this.options.header?a.find(".popover-title").outerHeight():0,o=this.options.liveSearch?a.find(".bootstrap-select-searchbox").outerHeight():0,i=this.options.actionsBox?a.find(".bs-actionsbox").outerHeight():0;e.remove(),this.$newElement.data("liHeight",t).data("headerHeight",n).data("searchHeight",o).data("actionsHeight",i)}},setSize:function(){var a,t,n,o=this,i=this.$menu,r=i.find(".inner"),s=this.$newElement.outerHeight(),d=this.$newElement.data("liHeight"),l=this.$newElement.data("headerHeight"),c=this.$newElement.data("searchHeight"),m=this.$newElement.data("actionsHeight"),u=i.find("li .divider").outerHeight(!0),f=parseInt(i.css("padding-top"))+parseInt(i.css("padding-bottom"))+parseInt(i.css("border-top-width"))+parseInt(i.css("border-bottom-width")),h=this.options.hideDisabled?":not(.disabled)":"",p=e(window),g=f+parseInt(i.css("margin-top"))+parseInt(i.css("margin-bottom"))+2,b=function(){t=o.$newElement.offset().top-p.scrollTop(),n=p.height()-t-s};if(b(),this.options.header&&i.css("padding-top",0),"auto"==this.options.size){var v=function(){var e,s=o.$lis.not(".hide");b(),a=n-g,o.options.dropupAuto&&o.$newElement.toggleClass("dropup",t>n&&a-g<i.height()),o.$newElement.hasClass("dropup")&&(a=t-g),e=s.length+s.find("dt").length>3?3*d+g-2:0,i.css({"max-height":a+"px",overflow:"hidden","min-height":e+l+c+m+"px"}),r.css({"max-height":a-l-c-m-f+"px","overflow-y":"auto","min-height":Math.max(e-f,0)+"px"})};v(),this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize",v),e(window).off("resize.getSize").on("resize.getSize",v),e(window).off("scroll.getSize").on("scroll.getSize",v)}else if(this.options.size&&"auto"!=this.options.size&&i.find("li"+h).length>this.options.size){var y=i.find("li"+h+" > *").filter(":not(.div-contain)").slice(0,this.options.size).last().parent().index(),w=i.find("li").slice(0,y+1).find(".div-contain").length;a=d*this.options.size+w*u+f,o.options.dropupAuto&&this.$newElement.toggleClass("dropup",t>n&&a<i.height()),i.css({"max-height":a+l+c+m+"px",overflow:"hidden"}),r.css({"max-height":a-f+"px","overflow-y":"auto"})}},setWidth:function(){if("auto"==this.options.width){this.$menu.css("min-width","0");var e=this.$newElement.clone().appendTo("body"),a=e.find("> .dropdown-menu").css("width"),t=e.css("width","auto").find("> button").css("width");e.remove(),this.$newElement.css("width",Math.max(parseInt(a),parseInt(t))+"px")}else"fit"==this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width",""));this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement.removeClass("fit-width")},selectPosition:function(){var a,t,n=this,o="<div />",i=e(o),r=function(e){i.addClass(e.attr("class").replace(/form-control/gi,"")).toggleClass("dropup",e.hasClass("dropup")),a=e.offset(),t=e.hasClass("dropup")?0:e[0].offsetHeight,i.css({top:a.top+t,left:a.left,width:e[0].offsetWidth,position:"absolute"})};this.$newElement.on("click",function(){n.isDisabled()||(r(e(this)),i.appendTo(n.options.container),i.toggleClass("open",!e(this).hasClass("open")),i.append(n.$menu))}),e(window).resize(function(){r(n.$newElement)}),e(window).on("scroll",function(){r(n.$newElement)}),e("html").on("click",function(a){e(a.target).closest(n.$newElement).length<1&&i.removeClass("open")})},mobile:function(){this.$element.addClass("mobile-device").appendTo(this.$newElement),this.options.container&&this.$menu.hide()},refresh:function(){this.$lis=null,this.reloadLi(),this.render(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},update:function(){this.reloadLi(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},setSelected:function(a,t){null==this.$lis&&(this.$lis=this.$menu.find("li")),e(this.$lis[a]).toggleClass("selected",t)},setDisabled:function(a,t){null==this.$lis&&(this.$lis=this.$menu.find("li")),t?e(this.$lis[a]).addClass("disabled").find("a").attr("href","#").attr("tabindex",-1):e(this.$lis[a]).removeClass("disabled").find("a").removeAttr("href").attr("tabindex",0)
},isDisabled:function(){return this.$element.is(":disabled")},checkDisabled:function(){var e=this;this.isDisabled()?this.$button.addClass("disabled").attr("tabindex",-1):(this.$button.hasClass("disabled")&&this.$button.removeClass("disabled"),-1==this.$button.attr("tabindex")&&(this.$element.data("tabindex")||this.$button.removeAttr("tabindex"))),this.$button.click(function(){return!e.isDisabled()})},tabIndex:function(){this.$element.is("[tabindex]")&&(this.$element.data("tabindex",this.$element.attr("tabindex")),this.$button.attr("tabindex",this.$element.data("tabindex")))},clickListener:function(){var a=this;e("body").on("touchstart.dropdown",".dropdown-menu",function(e){e.stopPropagation()}),this.$newElement.on("click",function(){a.setSize(),a.options.liveSearch||a.multiple||setTimeout(function(){a.$menu.find(".selected a").focus()},10)}),this.$menu.on("click","li a",function(t){var n=e(this).parent().index(),o=a.$element.val(),i=a.$element.prop("selectedIndex");if(a.multiple&&t.stopPropagation(),t.preventDefault(),!a.isDisabled()&&!e(this).parent().hasClass("disabled")){var r=a.$element.find("option"),s=r.eq(n),d=s.prop("selected"),l=s.parent("optgroup"),c=a.options.maxOptions,m=l.data("maxOptions")||!1;if(a.multiple){if(s.prop("selected",!d),a.setSelected(n,!d),c!==!1||m!==!1){var u=c<r.filter(":selected").length,f=m<l.find("option:selected").length,h=a.options.maxOptionsText,p=h[0].replace("{n}",c),g=h[1].replace("{n}",m),b=e('<div class="notify"></div>');(c&&u||m&&f)&&(h[2]&&(p=p.replace("{var}",h[2][c>1?0:1]),g=g.replace("{var}",h[2][m>1?0:1])),s.prop("selected",!1),a.$menu.append(b),c&&u&&(b.append(e("<div>"+p+"</div>")),a.$element.trigger("maxReached.bs.select")),m&&f&&(b.append(e("<div>"+g+"</div>")),a.$element.trigger("maxReachedGrp.bs.select")),setTimeout(function(){a.setSelected(n,!1)},10),b.delay(750).fadeOut(300,function(){e(this).remove()}))}}else r.prop("selected",!1),s.prop("selected",!0),a.$menu.find(".selected").removeClass("selected"),a.setSelected(n,!0);a.multiple?a.options.liveSearch&&a.$searchbox.focus():a.$button.focus(),(o!=a.$element.val()&&a.multiple||i!=a.$element.prop("selectedIndex")&&!a.multiple)&&a.$element.change()}}),this.$menu.on("click","li.disabled a, li dt, li .div-contain, .popover-title, .popover-title :not(.close)",function(e){e.target==this&&(e.preventDefault(),e.stopPropagation(),a.options.liveSearch?a.$searchbox.focus():a.$button.focus())}),this.$menu.on("click",".popover-title .close",function(){a.$button.focus()}),this.$searchbox.on("click",function(e){e.stopPropagation()}),this.$menu.on("click",".actions-btn",function(t){a.options.liveSearch?a.$searchbox.focus():a.$button.focus(),t.preventDefault(),t.stopPropagation(),e(this).is(".bs-select-all")?a.selectAll():a.deselectAll(),a.$element.change()}),this.$element.change(function(){a.render(!1)})},liveSearchListener:function(){var a=this,t=e('<li class="no-results"></li>');this.$newElement.on("click.dropdown.data-api",function(){a.$menu.find(".active").removeClass("active"),a.$searchbox.val()&&(a.$searchbox.val(""),a.$lis.not(".is-hidden").removeClass("hide"),t.parent().length&&t.remove()),a.multiple||a.$menu.find(".selected").addClass("active"),setTimeout(function(){a.$searchbox.focus()},10)}),this.$searchbox.on("input propertychange",function(){a.$searchbox.val()?(a.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains("+a.$searchbox.val()+")").parent().addClass("hide"),a.$menu.find("li").filter(":visible:not(.no-results)").length?t.parent().length&&t.remove():(t.parent().length&&t.remove(),t.html(a.options.noneResultsText+' "'+a.$searchbox.val()+'"').show(),a.$menu.find("li").last().after(t))):(a.$lis.not(".is-hidden").removeClass("hide"),t.parent().length&&t.remove()),a.$menu.find("li.active").removeClass("active"),a.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(),e(this).focus()}),this.$menu.on("mouseenter","a",function(t){a.$menu.find(".active").removeClass("active"),e(t.currentTarget).parent().not(".disabled").addClass("active")}),this.$menu.on("mouseleave","a",function(){a.$menu.find(".active").removeClass("active")})},val:function(e){return void 0!==e?(this.$element.val(e),this.$element.change(),this.$element):this.$element.val()},selectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!0),e(this.$lis).filter(":not(.disabled)").addClass("selected"),this.render(!1)},deselectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!1),e(this.$lis).filter(":not(.disabled)").removeClass("selected"),this.render(!1)},keydown:function(a){var t,n,o,i,r,s,d,l,c,m,u,f,h={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"};if(t=e(this),o=t.parent(),t.is("input")&&(o=t.parent().parent()),m=o.data("this"),m.options.liveSearch&&(o=t.parent().parent()),m.options.container&&(o=m.$menu),n=e("[role=menu] li:not(.divider) a",o),f=m.$menu.parent().hasClass("open"),!f&&/([0-9]|[A-z])/.test(String.fromCharCode(a.keyCode))&&(m.options.container?m.$newElement.trigger("click"):(m.setSize(),m.$menu.parent().addClass("open"),f=m.$menu.parent().hasClass("open")),m.$searchbox.focus()),m.options.liveSearch&&(/(^9$|27)/.test(a.keyCode)&&f&&0===m.$menu.find(".active").length&&(a.preventDefault(),m.$menu.parent().removeClass("open"),m.$button.focus()),n=e("[role=menu] li:not(.divider):visible",o),t.val()||/(38|40)/.test(a.keyCode)||0===n.filter(".active").length&&(n=m.$newElement.find("li").filter(":icontains("+h[a.keyCode]+")"))),n.length){if(/(38|40)/.test(a.keyCode))i=n.index(n.filter(":focus")),s=n.parent(":not(.disabled):visible").first().index(),d=n.parent(":not(.disabled):visible").last().index(),r=n.eq(i).parent().nextAll(":not(.disabled):visible").eq(0).index(),l=n.eq(i).parent().prevAll(":not(.disabled):visible").eq(0).index(),c=n.eq(r).parent().prevAll(":not(.disabled):visible").eq(0).index(),m.options.liveSearch&&(n.each(function(a){e(this).is(":not(.disabled)")&&e(this).data("index",a)}),i=n.index(n.filter(".active")),s=n.filter(":not(.disabled):visible").first().data("index"),d=n.filter(":not(.disabled):visible").last().data("index"),r=n.eq(i).nextAll(":not(.disabled):visible").eq(0).data("index"),l=n.eq(i).prevAll(":not(.disabled):visible").eq(0).data("index"),c=n.eq(r).prevAll(":not(.disabled):visible").eq(0).data("index")),u=t.data("prevIndex"),38==a.keyCode&&(m.options.liveSearch&&(i-=1),i!=c&&i>l&&(i=l),s>i&&(i=s),i==u&&(i=d)),40==a.keyCode&&(m.options.liveSearch&&(i+=1),-1==i&&(i=0),i!=c&&r>i&&(i=r),i>d&&(i=d),i==u&&(i=s)),t.data("prevIndex",i),m.options.liveSearch?(a.preventDefault(),t.is(".dropdown-toggle")||(n.removeClass("active"),n.eq(i).addClass("active").find("a").focus(),t.focus())):n.eq(i).focus();else if(!t.is("input")){var p,g,b=[];n.each(function(){e(this).parent().is(":not(.disabled)")&&e.trim(e(this).text().toLowerCase()).substring(0,1)==h[a.keyCode]&&b.push(e(this).parent().index())}),p=e(document).data("keycount"),p++,e(document).data("keycount",p),g=e.trim(e(":focus").text().toLowerCase()).substring(0,1),g!=h[a.keyCode]?(p=1,e(document).data("keycount",p)):p>=b.length&&(e(document).data("keycount",0),p>b.length&&(p=1)),n.eq(b[p-1]).focus()}/(13|32|^9$)/.test(a.keyCode)&&f&&(/(32)/.test(a.keyCode)||a.preventDefault(),m.options.liveSearch?/(32)/.test(a.keyCode)||(m.$menu.find(".active a").click(),t.focus()):e(":focus").click(),e(document).data("keycount",0)),(/(^9$|27)/.test(a.keyCode)&&f&&(m.multiple||m.options.liveSearch)||/(27)/.test(a.keyCode)&&!f)&&(m.$menu.parent().removeClass("open"),m.$button.focus())}},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},destroy:function(){this.$newElement.remove(),this.$element.remove()}},e.fn.selectpicker=function(t,n){var o,i=arguments,r=this.each(function(){if(e(this).is("select")){var r=e(this),s=r.data("selectpicker"),d="object"==typeof t&&t;if(s){if(d)for(var l in d)s.options[l]=d[l]}else r.data("selectpicker",s=new a(this,d,n));if("string"==typeof t){var c=t;s[c]instanceof Function?([].shift.apply(i),o=s[c].apply(s,i)):o=s.options[c]}}});return void 0!==o?o:r},e.fn.selectpicker.defaults={style:"btn-default",size:"auto",title:null,selectedTextFormat:"values",noneSelectedText:"Nothing selected",noneResultsText:"No results match",countSelectedText:"{0} of {1} selected",maxOptionsText:["Limit reached ({n} {var} max)","Group limit reached ({n} {var} max)",["items","item"]],width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,actionsBox:!1,multipleSeparator:", ",iconBase:"glyphicon",tickIcon:"glyphicon-ok",maxOptions:!1},e(document).data("keycount",0).on("keydown",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",a.prototype.keydown).on("focusin.modal",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",function(e){e.stopPropagation()})}(window.jQuery);var CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["font-picker-template.html"]='<!-- Font Family -->\n<!-- Can\'t use an HTML select because the items in the drop-down need to be\n     styled individually. -->\n<div class="bfh-selectbox">\n  <input class="font-family" type="hidden" value="">\n  <button type="button" class="btn btn-default btn-sm dropdown-toggle font-select-btn"\n    data-toggle="bfh-selectbox">\n    <span class="bfh-selectbox-option"></span>\n    <span class="caret selectbox-caret"></span>\n  </button>\n  <div class="bfh-selectbox-options">\n    <div role="listbox">\n      <ul role="option"></ul>\n    </div>\n  </div>\n</div>\n\n<!-- Google Fonts -->\n<div class="google-fonts modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Google Fonts</h2>\n      </div>\n      <div class="modal-body">\n        <div class="list-group bfh-googlefontlist"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Custom Font -->\n<div class="custom-font modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Custom Font</h2>\n      </div>\n      <div class="modal-body">\n        <div class="custom-font-error alert alert-danger">\n          Unable to validate the URL entered. Please un-check "Validate URL" to bypass validation.\n        </div>\n        <div class="url-field"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="save-custom-font btn btn-success btn-fixed-width" >\n          <span data-i18n="select">Select</span> <i class="fa fa-check fa-white icon-right"></i>\n        </button>\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n';var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,a){var t="font-family:"+a.font.family+"; ",n="color: "+a.color+"; ",o="font-size: "+a.size+"px; ",i="font-weight: "+(a.bold?"bold":"normal")+"; ",r="font-style: "+(a.italic?"italic":"normal")+"; ",s="text-decoration: "+(a.underline?"underline":"none")+"; ",d="background-color: "+a.highlightColor+"; ";return"."+e+" {"+t+n+o+i+r+s+d+"}"}function a(e){for(var a=document.createElement("style"),t=0,n=e.length;n>t;t++)a.appendChild(document.createTextNode(e[t]));document.head.appendChild(a)}function t(t,i){t.forEach(function(t){t.class&&t.fontSetting&&a([e(t.class,t.fontSetting)]),t.fontSetting.font.type&&("custom"===t.fontSetting.font.type&&t.fontSetting.font.family&&t.fontSetting.font.url?n(t.fontSetting.font.family,t.fontSetting.font.url,i):"google"===t.fontSetting.font.type&&t.fontSetting.font.family&&o(t.fontSetting.font.family,i))})}function n(e,a,t){var n=null,o="font-family: "+e+"; src: url('"+a+"');";t=t||document,n=t.styleSheets[0],null!==n&&n.addRule("@font-face",o)}function o(e,a){var t=document.createElement("link");a=a||document,t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","https://fonts.googleapis.com/css?family="+e),null!==t&&a.getElementsByTagName("head")[0].appendChild(t)}function i(e){for(var a=e.length,t=[],n=0;a>n;n++)t[n]=new Image,t[n].src=e[n]}function r(e){for(var a,t=window.location.search.substring(1),n=t.split("&"),o=0;o<n.length;o++)if(a=n[o].split("="),a[0]==e)return decodeURIComponent(a[1]);return""}return{getQueryParameter:r,getFontCssStyle:e,addCSSRules:a,loadFonts:t,loadCustomFont:n,loadGoogleFont:o,preloadImages:i}}(),function(e,a,t,n){"use strict";function o(a,t){function o(){w.append(n["font-picker-template.html"]),S=w.find(".bfh-selectbox"),A=w.find(".font-family"),k=w.find(".custom-font"),C=k.find(".url-field"),T=w.find(".custom-font-error"),S.bfhfonts(t),w.find(".bfh-googlefontlist").bfhgooglefontlist(),C.urlField({url:t["font-url"]}),C=C.data("plugin_urlField"),x=t["font-url"],i(),s(),"function"==typeof t.load&&t.load.call(w)}function i(){var a=!1;N=A.val(),""!==x?(y.loadCustomFont(N,x,M),N=r):null!==N&&(S.find(".bfh-selectbox-options a").each(function(){return e(this).text()===N?(a=!0,!1):void 0}),a||b(N,!0))}function s(){var e=w.find(".google-fonts");S.on("change.bfhselectbox",function(a){"More Fonts..."===a.target.value?e.modal("show"):a.target.value===r?(N=A.val(),T.hide(),k.modal("show")):(N=A.val(),S.trigger("standardFontSelected",[N,w.find("a[data-option='"+N+"']").css("font-family")]))}),w.find(".save-custom-font").on("click",function(){var e="";x=C.getUrl(),e=d(),C.validateUrl()?(y.loadCustomFont(e,x,M),k.modal("hide"),S.trigger("customFontSelected",[e,x])):T.show()}),e.on("select",function(a,t){b(t,!0),e.modal("hide"),N=A.val(),S.trigger("googleFontSelected",t)}),e.find(".close").on("click",function(){S.find(".bfh-selectbox-option").data("option",N).html(N),A.val(N)})}function d(){return x.split("/").pop().split(".")[0]}function l(){var a=S.find("[role=option] li").length,t=S.find("[role=option] li:nth-last-child(2)"),n=S.find("[role=option] li:last"),o=S.find("[role=option] li").slice(0,a-2).sort(function(a,t){var n=e(a).find("a").text(),o=e(t).find("a").text();return n==o?0:o>n?-1:1});S.find("[role=option]").html(o).append(t).append(n)}function c(e){S.find(".bfh-selectbox-option").data("option",e).html(e),S.find(".font-family").val(e)}function m(){return""!==x?d():A.val()}function u(){return w.find("a[data-option='"+A.val()+"']").css("font-family")}function f(){return C.getUrl()}function h(a){var t=a.split(","),n=null,o=!1;e.each(t,function(e,a){return a=a.replace(/'/g,"").trim(),n=S.find("a[data-option='"+a+"']"),1===n.length?(S.find(".bfh-selectbox-option").text(n.text()).data("option",a),A.val(a),o=!0,!1):void 0}),o||(S.find(".bfh-selectbox-option").text(r).data("option",r),A.val(r))}function p(){h("Arial, 'Helvetica Neue', Helvetica, sans-serif")}function g(e){M=e}function b(e,a){var t=S.find("[role=option]");y.loadGoogleFont(e,M),0===t.find("li.google-font a[data-option='"+e+"']").length&&t.prepend("<li class='google-font'><a tabindex='-1' href='#' style='font-family: Google' data-option='"+e+"'>"+e+"</a></li>"),a&&c(e),l()}function v(e,a){y.loadCustomFont(e,a,M),x=a,N=r}var y=RiseVision.Common.Utilities,w=e(a),S=null,A=null,k=null,C=null,T=null,M=null,N="",x="";return t=e.extend({},{blank:!1,font:"Arial","font-url":"",load:null,showCustom:!0,showMore:!0},t),o(),{getFont:m,getFontStyle:u,getFontURL:f,setFont:h,reset:p,setContentDoc:g,addGoogleFont:b,addCustomFont:v}}var i="fontPicker",r="Use Custom Font";e.fn.fontPicker=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES,CONFIG);var CONFIG={};if(function(e){"use strict";function a(a,t){function n(){s.append("<select class='form-control bfh-fontsizes' data-style='btn-default btn-sm'></select>"),s.find(".bfh-fontsizes").bfhfontsizes({fontsize:t["font-size"],blank:t.blank}).selectpicker(),s.find(".bfh-fontsizes").on("change.bfhselectbox",function(){s.trigger("sizeChanged",o())})}function o(){return s.find(".bfh-fontsizes").val()}function i(a){var t=s.find(".bfh-fontsizes");a&&(a=parseInt(a,10),t.find("> .dropdown-menu li").each(function(){e(this).find("span").text()==a?e(this).toggleClass("selected",!0):e(this).toggleClass("selected",!1)}),t.find("> button").attr("title",a),t.find(".filter-option").html(a),t.val(a))}function r(){i(d)}var s=e(a),d="14";return t=e.extend({},{"font-size":d,blank:!1},t),n(),{getFontSize:o,setFontSize:i,reset:r}}var t="fontSizePicker";e.fn.fontSizePicker=function(n){return this.each(function(){e.data(this,"plugin_"+t)||e.data(this,"plugin_"+t,new a(this,n))})}}(jQuery,window,document,CONFIG),function(e,a,t){"use strict";function n(e,t,n,o){for(var i=[],r=0;r<e.length;r++){var s=e[r];if(s){var d=tinycolor(s),l=d.toHsl().l<.5?"sp-thumb-el sp-thumb-dark":"sp-thumb-el sp-thumb-light";l+=tinycolor.equals(t,s)?" sp-thumb-active":"";var c=d.toString(o.preferredFormat||"rgb"),m=b?"background-color:"+d.toRgbString():"filter:"+d.toFilter();i.push('<span title="'+c+'" data-color="'+d.toRgbString()+'" class="'+l+'"><span class="sp-thumb-inner" style="'+m+';" /></span>')}else{var u="sp-clear-display";i.push(a("<div />").append(a('<span data-color="" style="background-color:transparent;" class="'+u+'"></span>').attr("title",o.noColorSelectedText)).html())}}return"<div class='sp-cf "+n+"'>"+i.join("")+"</div>"}function o(){for(var e=0;e<p.length;e++)p[e]&&p[e].hide()}function i(e,t){var n=a.extend({},h,e);return n.callbacks={move:c(n.move,t),change:c(n.change,t),show:c(n.show,t),hide:c(n.hide,t),beforeShow:c(n.beforeShow,t)},"text"===n.type?f=["<div class='sp-replacer text-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<div class='sp-preview-char'>A</div>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"highlight"===n.type?f=["<div class='sp-replacer highlight-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<img src='http://s3.amazonaws.com/rise-common-test/scripts/spectrum/images/text-highlight.png'>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"background"===n.type&&(f=["<div class='sp-replacer background-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'></div>","</div>","<b class='caret'></b>","</div>"].join("")),n}function r(r,d){function c(){if(_.showPaletteOnly&&(_.showPalette=!0),_.palette){ca=_.palette.slice(0),ma=a.isArray(ca[0])?ca:[ca],ua={};for(var e=0;e<ma.length;e++)for(var t=0;t<ma[e].length;t++){var n=tinycolor(ma[e][t]).toRgbString();ua[n]=!0}}wa.toggleClass("sp-flat",z),wa.toggleClass("sp-input-disabled",!_.showInput),wa.toggleClass("sp-alpha-enabled",_.showAlpha),wa.toggleClass("sp-clear-enabled",ja),wa.toggleClass("sp-buttons-disabled",!_.showButtons),wa.toggleClass("sp-palette-disabled",!_.showPalette),wa.toggleClass("sp-palette-only",_.showPaletteOnly),wa.toggleClass("sp-initial-disabled",!_.showInitial),wa.addClass(_.className).addClass(_.containerClassName),K()}function h(){function e(e){return e.data&&e.data.ignore?(R(a(e.target).closest(".sp-thumb-el").data("color")),O()):(R(a(e.target).closest(".sp-thumb-el").data("color")),O(),H(!0),B()),!1}if(g&&wa.find("*:not(input)").attr("unselectable","on"),c(),Ia&&va.after($a).hide(),ja||Ra.hide(),z)va.after(wa).hide();else{var t="parent"===_.appendTo?va.parent():a(_.appendTo);1!==t.length&&(t=a("body")),t.append(wa)}w(),Ha.bind("click.spectrum touchstart.spectrum",function(e){ya||x(),e.stopPropagation(),a(e.target).is("input")||e.preventDefault()}),(va.is(":disabled")||_.disabled===!0)&&V(),wa.click(l),xa.change(N),xa.bind("paste",function(){setTimeout(N,1)}),xa.keydown(function(e){13==e.keyCode&&N()}),La[0].innerHTML=_.cancelText+" "+La[0].innerHTML,La.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),B("cancel")}),Ra.attr("title",_.clearText),Ra.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),za=!0,O(),z&&H(!0)}),Pa[0].innerHTML=_.chooseText+" "+Pa[0].innerHTML,Pa.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),D()&&(H(!0),B())}),m(Ma,function(e,a,t){la=e/na,za=!1,t.shiftKey&&(la=Math.round(10*la)/10),O()},T,M),m(ka,function(e,a){ra=parseFloat(a/aa),za=!1,_.showAlpha||(la=1),O()},T,M),m(Sa,function(e,a,t){if(t.shiftKey){if(!ga){var n=sa*Q,o=X-da*X,i=Math.abs(e-n)>Math.abs(a-o);ga=i?"x":"y"}}else ga=null;var r=!ga||"x"===ga,s=!ga||"y"===ga;r&&(sa=parseFloat(e/Q)),s&&(da=parseFloat((X-a)/X)),za=!1,_.showAlpha||(la=1),O()},T,M),Ga?(R(Ga),I(),Va=Ua||tinycolor(Ga).format,S(Ga)):I(),z&&E();var n=g?"mousedown.spectrum":"click.spectrum touchstart.spectrum";Ea.delegate(".sp-thumb-el",n,e),Ba.delegate(".sp-thumb-el:nth-child(1)",n,{ignore:!0},e)}function w(){if(W&&e.localStorage){try{var t=e.localStorage[W].split(",#");t.length>1&&(delete e.localStorage[W],a.each(t,function(e,a){S(a)}))}catch(n){}try{fa=e.localStorage[W].split(";")}catch(n){}}}function S(t){if(j){var n=tinycolor(t).toRgbString();if(!ua[n]&&-1===a.inArray(n,fa))for(fa.push(n);fa.length>ha;)fa.shift();if(W&&e.localStorage)try{e.localStorage[W]=fa.join(";")}catch(o){}}}function A(){var e=[];if(_.showPalette)for(var a=0;a<fa.length;a++){var t=tinycolor(fa[a]).toRgbString();ua[t]||e.push(fa[a])}return e.reverse().slice(0,_.maxSelectionSize)}function k(){var e=P(),t=a.map(ma,function(a,t){return n(a,e,"sp-palette-row sp-palette-row-"+t,_)});w(),fa&&t.push(n(A(),e,"sp-palette-row sp-palette-row-selection",_)),Ea.html(t.join(""))}function C(){if(_.showInitial){var e=Fa,a=P();Ba.html(n([e,a],a,"sp-palette-row-initial",_))}}function T(){(0>=X||0>=Q||0>=aa)&&K(),wa.addClass(pa),ga=null,va.trigger("dragstart.spectrum",[P()])}function M(){wa.removeClass(pa),va.trigger("dragstop.spectrum",[P()])}function N(){var e=xa.val();if(null!==e&&""!==e||!ja){var a=tinycolor(e);a.isValid()?(R(a),H(!0)):xa.addClass("sp-validation-error")}else R(null),H(!0)}function x(){q?B():E()}function E(){var t=a.Event("beforeShow.spectrum");return q?(K(),void 0):(va.trigger(t,[P()]),J.beforeShow(P())===!1||t.isDefaultPrevented()||(o(),q=!0,a(ba).bind("click.spectrum",B),a(e).bind("resize.spectrum",Z),$a.addClass("sp-active"),wa.removeClass("sp-hidden"),K(),I(),Fa=P(),C(),J.show(Fa),va.trigger("show.spectrum",[Fa])),void 0)}function B(t){if((!t||"click"!=t.type||2!=t.button)&&q&&!z){q=!1,a(ba).unbind("click.spectrum",B),a(e).unbind("resize.spectrum",Z),$a.removeClass("sp-active"),wa.addClass("sp-hidden");var n=!tinycolor.equals(P(),Fa);n&&(_a&&"cancel"!==t?H(!0):L()),J.hide(P()),va.trigger("hide.spectrum",[P()])}}function L(){R(Fa,!0)}function R(e,a){if(tinycolor.equals(e,P()))return I(),void 0;var t,n;!e&&ja?za=!0:(za=!1,t=tinycolor(e),n=t.toHsv(),ra=n.h%360/360,sa=n.s,da=n.v,la=n.a),I(),t&&t.isValid()&&!a&&(Va=Ua||t.getFormat())}function P(e){return e=e||{},ja&&za?null:tinycolor.fromRatio({h:ra,s:sa,v:da,a:Math.round(100*la)/100},{format:e.format||Va})}function D(){return!xa.hasClass("sp-validation-error")}function O(){I(),J.move(P()),va.trigger("move.spectrum",[P()])}function I(){xa.removeClass("sp-validation-error"),$();var e=tinycolor.fromRatio({h:ra,s:1,v:1});Sa.css("background-color",e.toHexString());var a=Va;1>la&&(0!==la||"name"!==a)&&("hex"===a||"hex3"===a||"hex6"===a||"name"===a)&&(a="rgb");var t=P({format:a}),n="";if(Ka.removeClass("sp-clear-display"),"text"===_.type?Ka.css("border-color","transparent"):Ka.css("background-color","transparent"),!t&&ja)Ka.addClass("sp-clear-display");else{var o=t.toHexString(),i=t.toRgbString();if(b||1===t.alpha?"text"===_.type?Ka.css("border-color",i):Ka.css("background-color",i):("text"===_.type?Ka.css("border-color","transparent"):Ka.css("background-color","transparent"),Ka.css("filter",t.toFilter())),_.showAlpha){var r=t.toRgb();r.a=0;var s=tinycolor(r).toRgbString(),d="linear-gradient(left, "+s+", "+o+")";g?Ta.css("filter",tinycolor(s).toFilter({gradientType:1},o)):(Ta.css("background","-webkit-"+d),Ta.css("background","-moz-"+d),Ta.css("background","-ms-"+d),Ta.css("background","linear-gradient(to right, "+s+", "+o+")"))}n=t.toString(a)}_.showInput&&xa.val(n),_.showPalette&&k(),C()}function $(){var e=sa,a=da;if(ja&&za)Na.hide(),Ca.hide(),Aa.hide();else{Na.show(),Ca.show(),Aa.show();var t=e*Q,n=X-a*X;t=Math.max(-ea,Math.min(Q-ea,t-ea)),n=Math.max(-ea,Math.min(X-ea,n-ea)),Aa.css({top:n+"px",left:t+"px"});var o=la*na;Na.css({left:o-oa/2+"px"});var i=ra*aa;Ca.css({top:i-ia+"px"})}}function H(e){var a=P(),t="",n=!tinycolor.equals(a,Fa);a&&(t=a.toString(Va),S(a)),Da&&va.val(t),Fa=a,e&&n&&(J.change(a),va.trigger("change",[a]))}function K(){Q=Sa.width(),X=Sa.height(),ea=Aa.height(),ta=ka.width(),aa=ka.height(),ia=Ca.height(),na=Ma.width(),oa=Na.width(),z||(wa.css("position","absolute"),wa.offset(s(wa,Ha))),$(),_.showPalette&&k(),va.trigger("reflow.spectrum")}function G(){va.show(),Ha.unbind("click.spectrum touchstart.spectrum"),wa.remove(),$a.remove(),p[Wa.id]=null}function F(e,n){return e===t?a.extend({},_):n===t?_[e]:(_[e]=n,c(),void 0)}function U(){ya=!1,va.attr("disabled",!1),Ha.removeClass("sp-disabled")}function V(){B(),ya=!0,va.attr("disabled",!0),Ha.addClass("sp-disabled")}var _=i(d,r),z=_.flat,j=_.showSelectionPalette,W=_.localStorageKey,Y=_.theme,J=_.callbacks,Z=u(K,10),q=!1,Q=0,X=0,ea=0,aa=0,ta=0,na=0,oa=0,ia=0,ra=0,sa=0,da=0,la=1,ca=[],ma=[],ua={},fa=_.selectionPalette.slice(0),ha=_.maxSelectionSize,pa="sp-dragging",ga=null,ba=r.ownerDocument,va=(ba.body,a(r)),ya=!1,wa=a(y,ba).addClass(Y),Sa=wa.find(".sp-color"),Aa=wa.find(".sp-dragger"),ka=wa.find(".sp-hue"),Ca=wa.find(".sp-slider"),Ta=wa.find(".sp-alpha-inner"),Ma=wa.find(".sp-alpha"),Na=wa.find(".sp-alpha-handle"),xa=wa.find(".sp-input"),Ea=wa.find(".sp-palette"),Ba=wa.find(".sp-initial"),La=wa.find(".sp-cancel"),Ra=wa.find(".sp-clear"),Pa=wa.find(".sp-choose"),Da=va.is("input"),Oa=Da&&v&&"color"===va.attr("type"),Ia=Da&&!z,$a=Ia?a(f).addClass(Y).addClass(_.className).addClass(_.replacerClassName):a([]),Ha=Ia?$a:va,Ka="text"===_.type?$a.find(".sp-preview"):$a.find(".sp-preview-inner"),Ga=_.color||Da&&va.val(),Fa=!1,Ua=_.preferredFormat,Va=Ua,_a=!_.showButtons||_.clickoutFiresChange,za=!Ga,ja=_.allowEmpty&&!Oa;h();var Wa={show:E,hide:B,toggle:x,reflow:K,option:F,enable:U,disable:V,set:function(e){R(e),H()},get:P,destroy:G,container:wa};return Wa.id=p.push(Wa)-1,Wa}function s(e,t){var n=0,o=e.outerWidth(),i=e.outerHeight(),r=t.outerHeight(),s=e[0].ownerDocument,d=s.documentElement,l=d.clientWidth+a(s).scrollLeft(),c=d.clientHeight+a(s).scrollTop(),m=t.offset();return m.top+=r,m.left-=Math.min(m.left,m.left+o>l&&l>o?Math.abs(m.left+o-l):0),m.top-=Math.min(m.top,m.top+i>c&&c>i?Math.abs(i+r-n):n),m}function d(){}function l(e){e.stopPropagation()}function c(e,a){var t=Array.prototype.slice,n=t.call(arguments,2);return function(){return e.apply(a,n.concat(t.call(arguments)))}}function m(t,n,o,i){function r(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),e.returnValue=!1}function s(e){if(m){if(g&&document.documentMode<9&&!e.button)return l();var a=e.originalEvent.touches,o=a?a[0].pageX:e.pageX,i=a?a[0].pageY:e.pageY,s=Math.max(0,Math.min(o-u.left,h)),d=Math.max(0,Math.min(i-u.top,f));p&&r(e),n.apply(t,[s,d,e])}}function d(e){{var n=e.which?3==e.which:2==e.button;e.originalEvent.touches}n||m||o.apply(t,arguments)!==!1&&(m=!0,f=a(t).height(),h=a(t).width(),u=a(t).offset(),a(c).bind(b),a(c.body).addClass("sp-dragging"),p||s(e),r(e))}function l(){m&&(a(c).unbind(b),a(c.body).removeClass("sp-dragging"),i.apply(t,arguments)),m=!1}n=n||function(){},o=o||function(){},i=i||function(){};var c=t.ownerDocument||document,m=!1,u={},f=0,h=0,p="ontouchstart"in e,b={};b.selectstart=r,b.dragstart=r,b["touchmove mousemove"]=s,b["touchend mouseup"]=l,a(t).bind("touchstart mousedown",d)}function u(e,a,t){var n;return function(){var o=this,i=arguments,r=function(){n=null,e.apply(o,i)};t&&clearTimeout(n),(t||!n)&&(n=setTimeout(r,a))}}var f,h={beforeShow:d,move:d,change:d,show:d,hide:d,color:!1,flat:!1,showInput:!1,allowEmpty:!1,showButtons:!0,clickoutFiresChange:!1,showInitial:!1,showPalette:!1,showPaletteOnly:!1,showSelectionPalette:!0,localStorageKey:!1,appendTo:"body",maxSelectionSize:7,cancelText:"cancel",chooseText:"choose",clearText:"Clear Color Selection",noColorSelectedText:"No Color Selected",preferredFormat:!1,className:"",containerClassName:"",replacerClassName:"",type:"text",showAlpha:!1,theme:"sp-light",palette:[["#ffffff","#000000","#ff0000","#ff8000","#ffff00","#008000","#0000ff","#4b0082","#9400d3"]],selectionPalette:[],disabled:!1},p=[],g=!!/msie/i.exec(e.navigator.userAgent),b=function(){function e(e,a){return!!~(""+e).indexOf(a)}var a=document.createElement("div"),t=a.style;return t.cssText="background-color:rgba(0,0,0,.5)",e(t.backgroundColor,"rgba")||e(t.backgroundColor,"hsla")}(),v=function(){var e=a("<input type='color' value='!' />")[0];return"color"===e.type&&"!"!==e.value}(),y=function(){var e="";if(g)for(var a=1;6>=a;a++)e+="<div class='sp-"+a+"'></div>";return["<div class='sp-container sp-hidden'>","<div class='sp-palette-container'>","<div class='sp-palette sp-thumb sp-cf'></div>","</div>","<div class='sp-picker-container'>","<div class='sp-top sp-cf'>","<div class='sp-fill'></div>","<div class='sp-top-inner'>","<div class='sp-color'>","<div class='sp-sat'>","<div class='sp-val'>","<div class='sp-dragger'></div>","</div>","</div>","</div>","<div class='sp-clear sp-clear-display'>","</div>","<div class='sp-hue'>","<div class='sp-slider'></div>",e,"</div>","</div>","<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>","</div>","<div class='sp-input-container sp-cf'>","<input class='sp-input' type='text' spellcheck='false'  />","</div>","<div class='sp-initial sp-thumb sp-cf'></div>","<div class='sp-button-container sp-cf'>","<button type='button' class='sp-choose'><i class='fa fa-check fa-white '></i></button>","<span class='sp-btn-spacer'/>","<button type='button' class='sp-cancel'><i class='fa fa-times fa-white '></i></button>","</div>","</div>","</div>"].join("")}(),w="spectrum.id";a.fn.spectrum=function(e){if("string"==typeof e){var t=this,n=Array.prototype.slice.call(arguments,1);return this.each(function(){var o=p[a(this).data(w)];if(o){var i=o[e];if(!i)throw new Error("Spectrum: no such method: '"+e+"'");"get"==e?t=o.get():"container"==e?t=o.container:"option"==e?t=o.option.apply(o,n):"destroy"==e?(o.destroy(),a(this).removeData(w)):i.apply(o,n)}}),t}return this.spectrum("destroy").each(function(){var t=a.extend({},e,a(this).data()),n=r(this,t);a(this).data(w,n.id)})},a.fn.spectrum.load=!0,a.fn.spectrum.loadOpts={},a.fn.spectrum.draggable=m,a.fn.spectrum.defaults=h,a.spectrum={},a.spectrum.localization={},a.spectrum.palettes={},a.fn.spectrum.processNativeColorInputs=function(){v||a("input[type=color]").spectrum({preferredFormat:"hex6"})
},function(){function a(e){var a={r:0,g:0,b:0},n=1,i=!1,s=!1;return"string"==typeof e&&(e=w(e)),"object"==typeof e&&(e.hasOwnProperty("r")&&e.hasOwnProperty("g")&&e.hasOwnProperty("b")?(a=t(e.r,e.g,e.b),i=!0,s="%"===String(e.r).substr(-1)?"prgb":"rgb"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("v")?(e.s=b(e.s),e.v=b(e.v),a=r(e.h,e.s,e.v),i=!0,s="hsv"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("l")&&(e.s=b(e.s),e.l=b(e.l),a=o(e.h,e.s,e.l),i=!0,s="hsl"),e.hasOwnProperty("a")&&(n=e.a)),n=c(n),{ok:i,format:e.format||s,r:M(255,N(a.r,0)),g:M(255,N(a.g,0)),b:M(255,N(a.b,0)),a:n}}function t(e,a,t){return{r:255*m(e,255),g:255*m(a,255),b:255*m(t,255)}}function n(e,a,t){e=m(e,255),a=m(a,255),t=m(t,255);var n,o,i=N(e,a,t),r=M(e,a,t),s=(i+r)/2;if(i==r)n=o=0;else{var d=i-r;switch(o=s>.5?d/(2-i-r):d/(i+r),i){case e:n=(a-t)/d+(t>a?6:0);break;case a:n=(t-e)/d+2;break;case t:n=(e-a)/d+4}n/=6}return{h:n,s:o,l:s}}function o(e,a,t){function n(e,a,t){return 0>t&&(t+=1),t>1&&(t-=1),1/6>t?e+6*(a-e)*t:.5>t?a:2/3>t?e+(a-e)*(2/3-t)*6:e}var o,i,r;if(e=m(e,360),a=m(a,100),t=m(t,100),0===a)o=i=r=t;else{var s=.5>t?t*(1+a):t+a-t*a,d=2*t-s;o=n(d,s,e+1/3),i=n(d,s,e),r=n(d,s,e-1/3)}return{r:255*o,g:255*i,b:255*r}}function i(e,a,t){e=m(e,255),a=m(a,255),t=m(t,255);var n,o,i=N(e,a,t),r=M(e,a,t),s=i,d=i-r;if(o=0===i?0:d/i,i==r)n=0;else{switch(i){case e:n=(a-t)/d+(t>a?6:0);break;case a:n=(t-e)/d+2;break;case t:n=(e-a)/d+4}n/=6}return{h:n,s:o,v:s}}function r(e,a,t){e=6*m(e,360),a=m(a,100),t=m(t,100);var n=C.floor(e),o=e-n,i=t*(1-a),r=t*(1-o*a),s=t*(1-(1-o)*a),d=n%6,l=[t,r,i,i,s,t][d],c=[s,t,t,r,i,i][d],u=[i,i,s,t,t,r][d];return{r:255*l,g:255*c,b:255*u}}function s(e,a,t,n){var o=[g(T(e).toString(16)),g(T(a).toString(16)),g(T(t).toString(16))];return n&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0):o.join("")}function d(e,a,t,n){var o=[g(v(n)),g(T(e).toString(16)),g(T(a).toString(16)),g(T(t).toString(16))];return o.join("")}function l(e){var a={};for(var t in e)e.hasOwnProperty(t)&&(a[e[t]]=t);return a}function c(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function m(e,a){h(e)&&(e="100%");var t=p(e);return e=M(a,N(0,parseFloat(e))),t&&(e=parseInt(e*a,10)/100),C.abs(e-a)<1e-6?1:e%a/parseFloat(a)}function u(e){return M(1,N(0,e))}function f(e){return parseInt(e,16)}function h(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)}function p(e){return"string"==typeof e&&-1!=e.indexOf("%")}function g(e){return 1==e.length?"0"+e:""+e}function b(e){return 1>=e&&(e=100*e+"%"),e}function v(e){return Math.round(255*parseFloat(e)).toString(16)}function y(e){return f(e)/255}function w(e){e=e.replace(S,"").replace(A,"").toLowerCase();var a=!1;if(B[e])e=B[e],a=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};var t;return(t=R.rgb.exec(e))?{r:t[1],g:t[2],b:t[3]}:(t=R.rgba.exec(e))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=R.hsl.exec(e))?{h:t[1],s:t[2],l:t[3]}:(t=R.hsla.exec(e))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=R.hsv.exec(e))?{h:t[1],s:t[2],v:t[3]}:(t=R.hex8.exec(e))?{a:y(t[1]),r:f(t[2]),g:f(t[3]),b:f(t[4]),format:a?"name":"hex8"}:(t=R.hex6.exec(e))?{r:f(t[1]),g:f(t[2]),b:f(t[3]),format:a?"name":"hex"}:(t=R.hex3.exec(e))?{r:f(t[1]+""+t[1]),g:f(t[2]+""+t[2]),b:f(t[3]+""+t[3]),format:a?"name":"hex"}:!1}var S=/^[\s,#]+/,A=/\s+$/,k=0,C=Math,T=C.round,M=C.min,N=C.max,x=C.random,E=function P(e,t){if(e=e?e:"",t=t||{},e instanceof P)return e;if(!(this instanceof P))return new P(e,t);var n=a(e);this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=T(100*this._a)/100,this._format=t.format||n.format,this._gradientType=t.gradientType,this._r<1&&(this._r=T(this._r)),this._g<1&&(this._g=T(this._g)),this._b<1&&(this._b=T(this._b)),this._ok=n.ok,this._tc_id=k++};E.prototype={isValid:function(){return this._ok},getFormat:function(){return this._format},getAlpha:function(){return this._a},setAlpha:function(e){this._a=c(e),this._roundA=T(100*this._a)/100},toHsv:function(){var e=i(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=i(this._r,this._g,this._b),a=T(360*e.h),t=T(100*e.s),n=T(100*e.v);return 1==this._a?"hsv("+a+", "+t+"%, "+n+"%)":"hsva("+a+", "+t+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=n(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=n(this._r,this._g,this._b),a=T(360*e.h),t=T(100*e.s),o=T(100*e.l);return 1==this._a?"hsl("+a+", "+t+"%, "+o+"%)":"hsla("+a+", "+t+"%, "+o+"%, "+this._roundA+")"},toHex:function(e){return s(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(){return d(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:T(this._r),g:T(this._g),b:T(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+T(this._r)+", "+T(this._g)+", "+T(this._b)+")":"rgba("+T(this._r)+", "+T(this._g)+", "+T(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:T(100*m(this._r,255))+"%",g:T(100*m(this._g,255))+"%",b:T(100*m(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+T(100*m(this._r,255))+"%, "+T(100*m(this._g,255))+"%, "+T(100*m(this._b,255))+"%)":"rgba("+T(100*m(this._r,255))+"%, "+T(100*m(this._g,255))+"%, "+T(100*m(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":this._a<1?!1:L[s(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var a="#"+d(this._r,this._g,this._b,this._a),t=a,n=this._gradientType?"GradientType = 1, ":"";if(e){var o=E(e);t=o.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+a+",endColorstr="+t+")"},toString:function(e){var a=!!e;e=e||this._format;var t=!1,n=this._a<1&&this._a>=0,o=!a&&n&&("hex"===e||"hex6"===e||"hex3"===e||"name"===e);return o?"name"===e&&0===this._a?this.toName():this.toRgbString():("rgb"===e&&(t=this.toRgbString()),"prgb"===e&&(t=this.toPercentageRgbString()),("hex"===e||"hex6"===e)&&(t=this.toHexString()),"hex3"===e&&(t=this.toHexString(!0)),"hex8"===e&&(t=this.toHex8String()),"name"===e&&(t=this.toName()),"hsl"===e&&(t=this.toHslString()),"hsv"===e&&(t=this.toHsvString()),t||this.toHexString())}},E.fromRatio=function(e,a){if("object"==typeof e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]="a"===n?e[n]:b(e[n]));e=t}return E(e,a)},E.equals=function(e,a){return e&&a?E(e).toRgbString()==E(a).toRgbString():!1},E.random=function(){return E.fromRatio({r:x(),g:x(),b:x()})},E.desaturate=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.s-=a/100,t.s=u(t.s),E(t)},E.saturate=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.s+=a/100,t.s=u(t.s),E(t)},E.greyscale=function(e){return E.desaturate(e,100)},E.lighten=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.l+=a/100,t.l=u(t.l),E(t)},E.brighten=function(e,a){a=0===a?0:a||10;var t=E(e).toRgb();return t.r=N(0,M(255,t.r-T(255*-(a/100)))),t.g=N(0,M(255,t.g-T(255*-(a/100)))),t.b=N(0,M(255,t.b-T(255*-(a/100)))),E(t)},E.darken=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.l-=a/100,t.l=u(t.l),E(t)},E.complement=function(e){var a=E(e).toHsl();return a.h=(a.h+180)%360,E(a)},E.triad=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+120)%360,s:a.s,l:a.l}),E({h:(t+240)%360,s:a.s,l:a.l})]},E.tetrad=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+90)%360,s:a.s,l:a.l}),E({h:(t+180)%360,s:a.s,l:a.l}),E({h:(t+270)%360,s:a.s,l:a.l})]},E.splitcomplement=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+72)%360,s:a.s,l:a.l}),E({h:(t+216)%360,s:a.s,l:a.l})]},E.analogous=function(e,a,t){a=a||6,t=t||30;var n=E(e).toHsl(),o=360/t,i=[E(e)];for(n.h=(n.h-(o*a>>1)+720)%360;--a;)n.h=(n.h+o)%360,i.push(E(n));return i},E.monochromatic=function(e,a){a=a||6;for(var t=E(e).toHsv(),n=t.h,o=t.s,i=t.v,r=[],s=1/a;a--;)r.push(E({h:n,s:o,v:i})),i=(i+s)%1;return r},E.readability=function(e,a){var t=E(e).toRgb(),n=E(a).toRgb(),o=(299*t.r+587*t.g+114*t.b)/1e3,i=(299*n.r+587*n.g+114*n.b)/1e3,r=Math.max(t.r,n.r)-Math.min(t.r,n.r)+Math.max(t.g,n.g)-Math.min(t.g,n.g)+Math.max(t.b,n.b)-Math.min(t.b,n.b);return{brightness:Math.abs(o-i),color:r}},E.readable=function(e,a){var t=E.readability(e,a);return t.brightness>125&&t.color>500},E.mostReadable=function(e,a){for(var t=null,n=0,o=!1,i=0;i<a.length;i++){var r=E.readability(e,a[i]),s=r.brightness>125&&r.color>500,d=3*(r.brightness/125)+r.color/500;(s&&!o||s&&o&&d>n||!s&&!o&&d>n)&&(o=s,n=d,t=E(a[i]))}return t};var B=E.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},L=E.hexNames=l(B),R=function(){var e="[-\\+]?\\d+%?",a="[-\\+]?\\d*\\.\\d+%?",t="(?:"+a+")|(?:"+e+")",n="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",o="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?";return{rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+o),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+o),hsv:new RegExp("hsv"+n),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();e.tinycolor=E}(),a(function(){a.fn.spectrum.load&&a.fn.spectrum.processNativeColorInputs()})}(window,jQuery),angular.module("risevision.widget.common",[]),angular.module("risevision.widget.common").controller("settingsController",["$scope","settingsSaver","settingsGetter","settingsCloser",function(e,a,t,n){e.settings={params:{},additionalParams:{}},e.alerts=[],e.getAdditionalParam=function(a,t){var n=e.settings.additionalParams[a];return angular.isUndefined(n)?t:n},e.setAdditionalParam=function(a,t){e.settings.additionalParams[a]=t},e.loadAdditionalParams=function(){t.getAdditionalParams().then(function(a){e.settings.additionalParams=a,e.$broadcast("loadAdditionalParams",a)},function(e){alert(e)})},e.setAdditionalParams=function(a,t){e.settings.additionalParams[a]=t},e.saveSettings=function(){e.alerts=[],e.$broadcast("collectAdditionalParams"),a.saveSettings(e.settings).then(function(){},function(a){e.alerts=a.alerts})},e.closeSettings=function(){n.closeSettings().then(function(){},function(a){e.alerts=a.alerts})},e.settings.params=t.getParams(),e.loadAdditionalParams()}]).directive("scrollOnAlerts",function(){return{restrict:"A",scope:!1,link:function(e,a){e.$watchCollection("alerts",function(e,t){e.length>0&&0===t.length&&$("body").animate({scrollTop:a.offset().top},"fast")})}}}),angular.module("risevision.widget.common").constant("STORAGE_FILE_URL_BASE","storage.googleapis.com/risemedialibrary-").constant("STORAGE_FOLDER_URL_BASE","googleapis.com/storage/").factory("commonSettings",["$log","STORAGE_FILE_URL_BASE","STORAGE_FOLDER_URL_BASE",function(e,a,t){var n={getStorageUrlData:function(e){function n(e){return-1!==e.indexOf(a)?"file":-1!==e.indexOf(t)?"folder":null}function o(e){var a=e.split("risemedialibrary-");return a[1].slice(0,a[1].indexOf("/"))}var i,r,s,d,l={};if("file"===n(e))i=e.split(a)[1],i=decodeURIComponent(i.slice(i.indexOf("/")+1)),r=i.split("/"),l.companyId=o(e),l.fileName=r.pop(),l.folder=r.length>0?r.join("/"):"",""!==l.folder&&(l.folder+="/");else if("folder"===n(e)){s=e.split("?");for(var c=0;c<s.length;c++)if(d=s[c].split("="),"prefix"===d[0]&&"undefined"!=typeof d[1]&&""!==d[1]){l.companyId=o(e),l.folder=decodeURIComponent(d[1]),l.fileName="";break}}return l}};return n}]),angular.module("risevision.widget.common").factory("gadgetsApi",["$window",function(e){return e.gadgets}]),angular.module("risevision.widget.common").service("i18nLoader",["$window","$q",function(e,a){var t=a.defer();e.i18n.init({fallbackLng:"en",resGetPath:"locales/__ns_____lng__.json"},function(){t.resolve(e.i18n)}),this.get=function(){return t.promise}}]),angular.module("risevision.widget.common").factory("imageValidator",["$q",function(e){var a={isImage:function(a){var t=e.defer(),n=new Image;return n.onload=function(){t.resolve(!0)},n.onerror=function(){t.resolve(!1)},n.src=a,t.promise}};return a}]),angular.module("risevision.widget.common").service("settingsSaver",["$q","$log","gadgetsApi","settingsParser",function(e,a,t,n){function o(e){var a=angular.copy(e);return delete a.params.id,delete a.params.companyId,delete a.params.rsW,delete a.params.rsH,a}this.saveSettings=function(i,r){var s=e.defer(),d=[],l="";i=o(i),r&&(d=r(i)),d.length>0&&(a.debug("Validation failed.",d),s.reject({alerts:d})),i.params.hasOwnProperty("layoutURL")&&(l+=i.params.layoutURL+"?",delete i.params.layoutURL),l+=n.encodeParams(i.params);var c=n.encodeAdditionalParams(i.additionalParams);return t.rpc.call("","rscmd_saveSettings",function(e){a.debug("encoded settings",JSON.stringify(e)),a.debug("Settings saved. ",i),s.resolve(e)},{params:l,additionalParams:c}),s.promise}}]).service("settingsGetter",["$q","gadgetsApi","$log","settingsParser","$window","defaultSettings",function(e,a,t,n,o,i){this.getAdditionalParams=function(){var o=e.defer(),r=i.additionalParams||{};return a.rpc.call("","rscmd_getAdditionalParams",function(e){e=e?n.parseAdditionalParams(e):{},t.debug("getAdditionalParams returns ",e),o.resolve(angular.extend(r,e))}),o.promise},this.getParams=function(){var e=i.params||{};return angular.extend(e,n.parseParams(o.location.search))}}]).service("settingsParser",[function(){function e(e){return 0===e.indexOf("up_")?e.slice(3):null}this.parseAdditionalParams=function(e){return e?JSON.parse(e):{}},this.encodeAdditionalParams=function(e){return JSON.stringify(e)},this.encodeParams=function(e){var a=[];for(var t in e)if(e.hasOwnProperty(t)){var n;n="object"==typeof e[t]?JSON.stringify(e[t]):e[t],a.push("up_"+encodeURIComponent(t)+"="+encodeURIComponent(n))}return a.join("&")},this.parseParams=function(a){"?"===a[0]&&(a=a.slice(1));for(var t={},n=a.split("&"),o=0;o<n.length;o++){var i=n[o].split("="),r=e(decodeURIComponent(i[0]));if(r)try{t[r]=JSON.parse(decodeURIComponent(i[1]))}catch(s){t[r]=decodeURIComponent(i[1])}}return t}}]).service("settingsCloser",["$q","$log","gadgetsApi",function(e,a,t){this.closeSettings=function(){var a=e.defer();return t.rpc.call("","rscmd_closeSettings",function(){a.resolve(!0)}),a.promise}}]).value("defaultSettings",{}),function(e){"use strict";e.module("risevision.widget.common.visualization",[]).factory("visualizationApi",["$q","$window",function(e,a){var t,n=e.defer(),o={get:function(){return t||(t=n.promise,a.google.visualization?n.resolve(a.google.visualization):a.google.setOnLoadCallback(function(){n.resolve(a.google.visualization)})),t}};return o}])}(angular),"undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["alignment.html"]='<div class="btn-group alignment">\n  <button type="button" class="btn btn-default btn-sm btn-alignment dropdown-toggle"\n    data-toggle="dropdown" data-wysihtml5-command-value="left">\n    <i class="fa fa-align-left"></i>\n    <span class="caret"></span>\n  </button>\n  <div class="dropdown-menu" role="menu">\n    <div class="btn-group">\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="left" tabindex="-1">\n        <i class="fa fa-align-left"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="center" tabindex="-1">\n        <i class="fa fa-align-center"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="right" tabindex="-1">\n        <i class="fa fa-align-right"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="justify" tabindex="-1">\n        <i class="fa fa-align-justify"></i>\n      </button>\n    </div>\n  </div>\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){d.append(n["alignment.html"]),l=d.find(".btn-alignment"),r(t.align),d.find(".dropdown-menu button").on("click",function(){var a=e(this).data("wysihtml5-command-value");r(a),d.trigger("alignmentChanged",a)})}function i(){return l.data("wysihtml5-command-value")}function r(e){var a=d.find(".btn-alignment .fa"),t=a.attr("class").match(/fa-align-[a-z]+/g),n="fa-align-"+e;t&&t.length>0&&a.removeClass(t[0]),a.addClass(n),l.data("wysihtml5-command-value",e)}function s(){r(c)}var d=e(a),l=null,c="left";return t=e.extend({},{align:c},t),o(),{getAlignment:i,setAlignment:r,reset:s}}var i="alignment";e.fn.alignment=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES);var WIDGET_SETTINGS_UI_CONFIG={families:"Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats;",sizes:"8px 9px 10px 11px 12px 14px 18px 24px 30px 36px 48px 60px 72px 96px"};if("undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["font-style.html"]='<div class="btn-group">\n  <a class="btn btn-sm btn-default bold" data-wysihtml5-command="bold" title="CTRL+B" tabindex="-1">B</a>\n  <a class="btn btn-sm btn-default italic" data-wysihtml5-command="italic" title="CTRL+I" tabindex="-1">I</a>\n  <a class="btn btn-sm btn-default underline" data-wysihtml5-command="underline" title="CTRL+U" tabindex="-1">U</a>\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){g.append(n["font-style.html"]),b=g.find(".bold"),v=g.find(".italic"),y=g.find(".underline"),h({bold:t.bold,italic:t.italic,underline:t.underline}),g.find(".btn").on("click",function(){var a=!e(this).hasClass("active");r(e(this),a),g.trigger("styleChanged",[e(this).attr("data-wysihtml5-command"),a])})}function i(e){return e.hasClass("active")}function r(e,a){a?e.addClass("active"):e.removeClass("active")}function s(){return i(b)}function d(e){r(b,e)}function l(){return i(v)}function c(e){r(v,e)}function m(){return i(y)}function u(e){r(y,e)}function f(){return{bold:s(),italic:l(),underline:m()}}function h(e){r(b,e.bold),r(v,e.italic),r(y,e.underline)}function p(){h(w)}var g=e(a),b=null,v=null,y=null,w={bold:!1,italic:!1,underline:!1};return t=e.extend({},w,t),o(),{isBold:s,isItalic:l,isUnderline:m,setBold:d,setItalic:c,setUnderline:u,getStyles:f,setStyles:h,reset:p}}var i="fontStyle";e.fn.fontStyle=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES);var WIDGET_SETTINGS_UI_CONFIG={families:"Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats;",sizes:"8px 9px 10px 11px 12px 14px 18px 24px 30px 36px 48px 60px 72px 96px"};if("undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["url-field-template.html"]='<div class="form-group validate-url">\n  <div class="checkbox">\n    <label>\n      <input name="validate-url" type="checkbox" value="validate-url" checked="checked"> Validate URL\n    </label>\n  </div>\n</div>\n<div class="form-group">\n  <label>URL</label>\n  <input name="url" type="text" class="form-control" />\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){return e.trim(c.val())}function i(e){return-1===e.indexOf("://")&&(e="http://"+e),f.test(e)}function r(e){"string"==typeof e&&c&&c.val(e)}function s(){if(!h)return!0;var e=i(o());return e||m.is(":visible")||m.show(),e}function d(){l.append(n["url-field-template.html"]),c=l.find("input[name='url']"),m=l.find("div.validate-url"),u=l.find("input[name='validate-url']"),m.hide(),r(t.url),u.on("click",function(){h=e(this).is(":checked")})}var l=e(a),c=null,m=null,u=null,f=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,h=!0;return t=e.extend({},{url:"http://"},t),d(),{setUrl:r,getUrl:o,validateUrl:s}}var i="urlField";e.fn.urlField=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES);var WIDGET_SETTINGS_UI_CONFIG={families:"Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats;",sizes:"8px 9px 10px 11px 12px 14px 18px 24px 30px 36px 48px 60px 72px 96px"};!function(){"use strict";angular.module("risevision.widget.common.tooltip",["ui.bootstrap"]).directive("rvTooltip",[function(){return{restrict:"A",link:function(e,a){a.addClass("fa"),a.addClass("fa-question-circle"),a.addClass("fa-lg")}}}])}(),function(){"use strict";angular.module("risevision.widget.common.scroll-setting",["risevision.common.i18n","risevision.widget.common.tooltip"]).directive("scrollSetting",["$templateCache",function(e){return{restrict:"E",scope:{scroll:"="},template:e.get("_angular/scroll-setting/scroll-setting.html"),transclude:!1,link:function(e){e.defaultSetting={by:"none",speed:"medium",pause:5,pud:10},e.defaults=function(e){if(e)for(var a=1,t=arguments.length;t>a;a++){var n=arguments[a];for(var o in n)void 0===e[o]&&(e[o]=n[o])}return e},e.$watch("scroll",function(a){e.defaults(a,e.defaultSetting)})}}}])}(),function(e){try{e=angular.module("risevision.widget.common.scroll-setting")}catch(a){e=angular.module("risevision.widget.common.scroll-setting",[])}e.run(["$templateCache",function(e){"use strict";e.put("_angular/scroll-setting/scroll-setting.html",'<div class="row">\n  <div class="col-md-3">\n    <div class="form-group">\n      <label class="control-label">{{"scroll.heading" | translate}}</label>\n      <select id="scroll-by" ng-model="scroll.by" class="form-control">\n        <option value="none">{{\'scroll.by.none\' | translate}}</option>\n        <option value="continuous">{{\'scroll.by.continuous\' | translate}}</option>\n        <option value="page">{{\'scroll.by.page\' | translate}}</option>\n      </select>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.speed.label\' | translate}}</label>\n      <select id="scroll-speed" ng-model="scroll.speed" class="form-control">\n        <option value="slowest">{{\'scroll.speed.slowest\' | translate}}</option>\n        <option value="slow">{{\'scroll.speed.slow\' | translate}}</option>\n        <option value="medium">{{\'scroll.speed.medium\' | translate}}</option>\n        <option value="fast">{{\'scroll.speed.fast\' | translate}}</option>\n        <option value="fastest">{{\'scroll.speed.fastest\' | translate}}</option>\n      </select>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.pause.label\' | translate}}</label>\n      <div class="input-group">\n        <input id="scroll-pause" type="number" ng-model="scroll.pause" class="form-control" />\n        <span class="input-group-addon">{{\'common.units.seconds\' | translate}}</span>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.pud.label\' | translate}}</label>\n      <span popover="{{\'scroll.pud.tooltip\' | translate}}" popover-trigger="click"\n        popover-placement="right" rv-tooltip></span>\n      <div class="input-group">\n        <input id="scroll-pud" type="number" ng-model="scroll.pud" class="form-control" />\n        <span class="input-group-addon">{{\'common.units.seconds\' | translate}}</span>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(){"use strict";angular.module("risevision.widget.common.widget-button-toolbar",["risevision.common.i18n"]).directive("widgetButtonToolbar",["$templateCache",function(e){return{restrict:"E",scope:{save:"&",cancel:"&",disableSave:"&"},template:e.get("_angular/widget-button-toolbar/widget-button-toolbar.html")}}])}(),function(e){try{e=angular.module("risevision.widget.common.widget-button-toolbar")}catch(a){e=angular.module("risevision.widget.common.widget-button-toolbar",[])}e.run(["$templateCache",function(e){"use strict";e.put("_angular/widget-button-toolbar/widget-button-toolbar.html",'<div class="pull-right">\n  <button id="save" class="btn btn-primary btn-fixed-width" type="button" ng-click="save()" ng-disabled="disableSave()">\n    <span>{{"common.save" | translate}}</span>\n    <i class="fa fa-white fa-check icon-right"></i>\n  </button>\n  <button id="cancel" class="btn btn-default btn-fixed-width" type="button" ng-click="cancel()">\n    <span>{{"common.cancel" | translate}}</span>\n    <i class="fa fa-white fa-times icon-right"></i>\n  </button>\n</div>\n')}])}();var wysihtml5={version:"0.4.0pre",commands:{},dom:{},quirks:{},toolbar:{},lang:{},selection:{},views:{},INVISIBLE_SPACE:"﻿",EMPTY_FUNCTION:function(){},ELEMENT_NODE:1,TEXT_NODE:3,BACKSPACE_KEY:8,ENTER_KEY:13,ESCAPE_KEY:27,SPACE_KEY:32,DELETE_KEY:46};window.rangy=function(){function e(e,a){var t=typeof e[a];return t==m||!(t!=c||!e[a])||"unknown"==t}function a(e,a){return!(typeof e[a]!=c||!e[a])}function t(e,a){return typeof e[a]!=u}function n(e){return function(a,t){for(var n=t.length;n--;)if(!e(a,t[n]))return!1;return!0}}function o(e){return e&&b(e,g)&&y(e,p)}function i(e){window.alert("Rangy not supported in your browser. Reason: "+e),w.initialized=!0,w.supported=!1}function r(e){var a="Rangy warning: "+e;w.config.alertOnWarn?window.alert(a):typeof window.console!=u&&typeof window.console.log!=u&&window.console.log(a)}function s(){if(!w.initialized){var t,n=!1,r=!1;e(document,"createRange")&&(t=document.createRange(),b(t,h)&&y(t,f)&&(n=!0),t.detach());var s=a(document,"body")?document.body:document.getElementsByTagName("body")[0];s&&e(s,"createTextRange")&&(t=s.createTextRange(),o(t)&&(r=!0)),n||r||i("Neither Range nor TextRange are implemented"),w.initialized=!0,w.features={implementsDomRange:n,implementsTextRange:r};for(var d=A.concat(S),l=0,c=d.length;c>l;++l)try{d[l](w)}catch(m){a(window,"console")&&e(window.console,"log")&&window.console.log("Init listener threw an exception. Continuing.",m)}}}function d(e){e=e||window,s();for(var a=0,t=k.length;t>a;++a)k[a](e)}function l(e){this.name=e,this.initialized=!1,this.supported=!1}var c="object",m="function",u="undefined",f=["startContainer","startOffset","endContainer","endOffset","collapsed","commonAncestorContainer","START_TO_START","START_TO_END","END_TO_START","END_TO_END"],h=["setStart","setStartBefore","setStartAfter","setEnd","setEndBefore","setEndAfter","collapse","selectNode","selectNodeContents","compareBoundaryPoints","deleteContents","extractContents","cloneContents","insertNode","surroundContents","cloneRange","toString","detach"],p=["boundingHeight","boundingLeft","boundingTop","boundingWidth","htmlText","text"],g=["collapse","compareEndPoints","duplicate","getBookmark","moveToBookmark","moveToElementText","parentElement","pasteHTML","select","setEndPoint","getBoundingClientRect"],b=n(e),v=n(a),y=n(t),w={version:"1.2.2",initialized:!1,supported:!0,util:{isHostMethod:e,isHostObject:a,isHostProperty:t,areHostMethods:b,areHostObjects:v,areHostProperties:y,isTextRange:o},features:{},modules:{},config:{alertOnWarn:!1,preferTextRange:!1}};w.fail=i,w.warn=r,{}.hasOwnProperty?w.util.extend=function(e,a){for(var t in a)a.hasOwnProperty(t)&&(e[t]=a[t])}:i("hasOwnProperty not supported");var S=[],A=[];w.init=s,w.addInitListener=function(e){w.initialized?e(w):S.push(e)};var k=[];w.addCreateMissingNativeApiListener=function(e){k.push(e)},w.createMissingNativeApi=d,l.prototype.fail=function(e){throw this.initialized=!0,this.supported=!1,new Error("Module '"+this.name+"' failed to load: "+e)
},l.prototype.warn=function(e){w.warn("Module "+this.name+": "+e)},l.prototype.createError=function(e){return new Error("Error in Rangy "+this.name+" module: "+e)},w.createModule=function(e,a){var t=new l(e);w.modules[e]=t,A.push(function(e){a(e,t),t.initialized=!0,t.supported=!0})},w.requireModules=function(e){for(var a,t,n=0,o=e.length;o>n;++n){if(t=e[n],a=w.modules[t],!(a&&a instanceof l))throw new Error("Module '"+t+"' not found");if(!a.supported)throw new Error("Module '"+t+"' not supported")}};var C=!1,T=function(){C||(C=!0,w.initialized||s())};return typeof window==u?(i("No window found"),void 0):typeof document==u?(i("No document found"),void 0):(e(document,"addEventListener")&&document.addEventListener("DOMContentLoaded",T,!1),e(window,"addEventListener")?window.addEventListener("load",T,!1):e(window,"attachEvent")?window.attachEvent("onload",T):i("Window does not have required addEventListener or attachEvent method"),w)}(),rangy.createModule("DomUtil",function(e,a){function t(e){var a;return typeof e.namespaceURI==T||null===(a=e.namespaceURI)||"http://www.w3.org/1999/xhtml"==a}function n(e){var a=e.parentNode;return 1==a.nodeType?a:null}function o(e){for(var a=0;e=e.previousSibling;)a++;return a}function i(e){var a;return l(e)?e.length:(a=e.childNodes)?a.length:0}function r(e,a){var t,n=[];for(t=e;t;t=t.parentNode)n.push(t);for(t=a;t;t=t.parentNode)if(E(n,t))return t;return null}function s(e,a,t){for(var n=t?a:a.parentNode;n;){if(n===e)return!0;n=n.parentNode}return!1}function d(e,a,t){for(var n,o=t?e:e.parentNode;o;){if(n=o.parentNode,n===a)return o;o=n}return null}function l(e){var a=e.nodeType;return 3==a||4==a||8==a}function c(e,a){var t=a.nextSibling,n=a.parentNode;return t?n.insertBefore(e,t):n.appendChild(e),e}function m(e,a){var t=e.cloneNode(!1);return t.deleteData(0,a),e.deleteData(a,e.length-a),c(t,e),t}function u(e){if(9==e.nodeType)return e;if(typeof e.ownerDocument!=T)return e.ownerDocument;if(typeof e.document!=T)return e.document;if(e.parentNode)return u(e.parentNode);throw new Error("getDocument: no document found for node")}function f(e){var a=u(e);if(typeof a.defaultView!=T)return a.defaultView;if(typeof a.parentWindow!=T)return a.parentWindow;throw new Error("Cannot get a window object for node")}function h(e){if(typeof e.contentDocument!=T)return e.contentDocument;if(typeof e.contentWindow!=T)return e.contentWindow.document;throw new Error("getIframeWindow: No Document object found for iframe element")}function p(e){if(typeof e.contentWindow!=T)return e.contentWindow;if(typeof e.contentDocument!=T)return e.contentDocument.defaultView;throw new Error("getIframeWindow: No Window object found for iframe element")}function g(e){return M.isHostObject(e,"body")?e.body:e.getElementsByTagName("body")[0]}function b(e){for(var a;a=e.parentNode;)e=a;return e}function v(e,a,t,n){var i,s,l,c,m;if(e==t)return a===n?0:n>a?-1:1;if(i=d(t,e,!0))return a<=o(i)?-1:1;if(i=d(e,t,!0))return o(i)<n?-1:1;if(s=r(e,t),l=e===s?s:d(e,s,!0),c=t===s?s:d(t,s,!0),l===c)throw new Error("comparePoints got to case 4 and childA and childB are the same!");for(m=s.firstChild;m;){if(m===l)return-1;if(m===c)return 1;m=m.nextSibling}throw new Error("Should not be here!")}function y(e){for(var a,t=u(e).createDocumentFragment();a=e.firstChild;)t.appendChild(a);return t}function w(e){if(!e)return"[No node]";if(l(e))return'"'+e.data+'"';if(1==e.nodeType){var a=e.id?' id="'+e.id+'"':"";return"<"+e.nodeName+a+">["+e.childNodes.length+"]"}return e.nodeName}function S(e){this.root=e,this._next=e}function A(e){return new S(e)}function k(e,a){this.node=e,this.offset=a}function C(e){this.code=this[e],this.codeName=e,this.message="DOMException: "+this.codeName}var T="undefined",M=e.util;M.areHostMethods(document,["createDocumentFragment","createElement","createTextNode"])||a.fail("document missing a Node creation method"),M.isHostMethod(document,"getElementsByTagName")||a.fail("document missing getElementsByTagName method");var N=document.createElement("div");M.areHostMethods(N,["insertBefore","appendChild","cloneNode"]||!M.areHostObjects(N,["previousSibling","nextSibling","childNodes","parentNode"]))||a.fail("Incomplete Element implementation"),M.isHostProperty(N,"innerHTML")||a.fail("Element is missing innerHTML property");var x=document.createTextNode("test");M.areHostMethods(x,["splitText","deleteData","insertData","appendData","cloneNode"]||!M.areHostObjects(N,["previousSibling","nextSibling","childNodes","parentNode"])||!M.areHostProperties(x,["data"]))||a.fail("Incomplete Text Node implementation");var E=function(e,a){for(var t=e.length;t--;)if(e[t]===a)return!0;return!1};S.prototype={_current:null,hasNext:function(){return!!this._next},next:function(){var e,a,t=this._current=this._next;if(this._current)if(e=t.firstChild)this._next=e;else{for(a=null;t!==this.root&&!(a=t.nextSibling);)t=t.parentNode;this._next=a}return this._current},detach:function(){this._current=this._next=this.root=null}},k.prototype={equals:function(e){return this.node===e.node&this.offset==e.offset},inspect:function(){return"[DomPosition("+w(this.node)+":"+this.offset+")]"}},C.prototype={INDEX_SIZE_ERR:1,HIERARCHY_REQUEST_ERR:3,WRONG_DOCUMENT_ERR:4,NO_MODIFICATION_ALLOWED_ERR:7,NOT_FOUND_ERR:8,NOT_SUPPORTED_ERR:9,INVALID_STATE_ERR:11},C.prototype.toString=function(){return this.message},e.dom={arrayContains:E,isHtmlNamespace:t,parentElement:n,getNodeIndex:o,getNodeLength:i,getCommonAncestor:r,isAncestorOf:s,getClosestAncestorIn:d,isCharacterDataNode:l,insertAfter:c,splitDataNode:m,getDocument:u,getWindow:f,getIframeWindow:p,getIframeDocument:h,getBody:g,getRootContainer:b,comparePoints:v,inspectNode:w,fragmentFromNodeChildren:y,createIterator:A,DomPosition:k},e.DOMException=C}),rangy.createModule("DomRange",function(e){function a(e,a){return 3!=e.nodeType&&(I.isAncestorOf(e,a.startContainer,!0)||I.isAncestorOf(e,a.endContainer,!0))}function t(e){return I.getDocument(e.startContainer)}function n(e,a,t){var n=e._listeners[a];if(n)for(var o=0,i=n.length;i>o;++o)n[o].call(e,{target:e,args:t})}function o(e){return new $(e.parentNode,I.getNodeIndex(e))}function i(e){return new $(e.parentNode,I.getNodeIndex(e)+1)}function r(e,a,t){var n=11==e.nodeType?e.firstChild:e;return I.isCharacterDataNode(a)?t==a.length?I.insertAfter(e,a):a.parentNode.insertBefore(e,0==t?a:I.splitDataNode(a,t)):t>=a.childNodes.length?a.appendChild(e):a.insertBefore(e,a.childNodes[t]),n}function s(e){for(var a,n,o,i=t(e.range).createDocumentFragment();n=e.next();){if(a=e.isPartiallySelectedSubtree(),n=n.cloneNode(!a),a&&(o=e.getSubtreeIterator(),n.appendChild(s(o)),o.detach(!0)),10==n.nodeType)throw new H("HIERARCHY_REQUEST_ERR");i.appendChild(n)}return i}function d(e,a,t){var n,o;t=t||{stop:!1};for(var i,r;i=e.next();)if(e.isPartiallySelectedSubtree()){if(a(i)===!1)return t.stop=!0,void 0;if(r=e.getSubtreeIterator(),d(r,a,t),r.detach(!0),t.stop)return}else for(n=I.createIterator(i);o=n.next();)if(a(o)===!1)return t.stop=!0,void 0}function l(e){for(var a;e.next();)e.isPartiallySelectedSubtree()?(a=e.getSubtreeIterator(),l(a),a.detach(!0)):e.remove()}function c(e){for(var a,n,o=t(e.range).createDocumentFragment();a=e.next();){if(e.isPartiallySelectedSubtree()?(a=a.cloneNode(!1),n=e.getSubtreeIterator(),a.appendChild(c(n)),n.detach(!0)):e.remove(),10==a.nodeType)throw new H("HIERARCHY_REQUEST_ERR");o.appendChild(a)}return o}function m(e,a,t){var n,o=!(!a||!a.length),i=!!t;o&&(n=new RegExp("^("+a.join("|")+")$"));var r=[];return d(new f(e,!1),function(e){o&&!n.test(e.nodeType)||i&&!t(e)||r.push(e)}),r}function u(e){var a="undefined"==typeof e.getName?"Range":e.getName();return"["+a+"("+I.inspectNode(e.startContainer)+":"+e.startOffset+", "+I.inspectNode(e.endContainer)+":"+e.endOffset+")]"}function f(e,a){if(this.range=e,this.clonePartiallySelectedTextNodes=a,!e.collapsed){this.sc=e.startContainer,this.so=e.startOffset,this.ec=e.endContainer,this.eo=e.endOffset;var t=e.commonAncestorContainer;this.sc===this.ec&&I.isCharacterDataNode(this.sc)?(this.isSingleCharacterDataNode=!0,this._first=this._last=this._next=this.sc):(this._first=this._next=this.sc!==t||I.isCharacterDataNode(this.sc)?I.getClosestAncestorIn(this.sc,t,!0):this.sc.childNodes[this.so],this._last=this.ec!==t||I.isCharacterDataNode(this.ec)?I.getClosestAncestorIn(this.ec,t,!0):this.ec.childNodes[this.eo-1])}}function h(e){this.code=this[e],this.codeName=e,this.message="RangeException: "+this.codeName}function p(e,a,t){this.nodes=m(e,a,t),this._next=this.nodes[0],this._position=0}function g(e){return function(a,t){for(var n,o=t?a:a.parentNode;o;){if(n=o.nodeType,I.arrayContains(e,n))return o;o=o.parentNode}return null}}function b(e,a){if(W(e,a))throw new h("INVALID_NODE_TYPE_ERR")}function v(e){if(!e.startContainer)throw new H("INVALID_STATE_ERR")}function y(e,a){if(!I.arrayContains(a,e.nodeType))throw new h("INVALID_NODE_TYPE_ERR")}function w(e,a){if(0>a||a>(I.isCharacterDataNode(e)?e.length:e.childNodes.length))throw new H("INDEX_SIZE_ERR")}function S(e,a){if(z(e,!0)!==z(a,!0))throw new H("WRONG_DOCUMENT_ERR")}function A(e){if(j(e,!0))throw new H("NO_MODIFICATION_ALLOWED_ERR")}function k(e,a){if(!e)throw new H(a)}function C(e){return!I.arrayContains(G,e.nodeType)&&!z(e,!0)}function T(e,a){return a<=(I.isCharacterDataNode(e)?e.length:e.childNodes.length)}function M(e){if(v(e),C(e.startContainer)||C(e.endContainer)||!T(e.startContainer,e.startOffset)||!T(e.endContainer,e.endOffset))throw new Error("Range error: Range is no longer valid after DOM mutation ("+e.inspect()+")")}function N(){}function x(e){e.START_TO_START=X,e.START_TO_END=ea,e.END_TO_END=aa,e.END_TO_START=ta,e.NODE_BEFORE=na,e.NODE_AFTER=oa,e.NODE_BEFORE_AND_AFTER=ia,e.NODE_INSIDE=ra}function E(e){x(e),x(e.prototype)}function B(e,a){return function(){M(this);var t,n,o=this.startContainer,r=this.startOffset,s=this.commonAncestorContainer,l=new f(this,!0);o!==s&&(t=I.getClosestAncestorIn(o,s,!0),n=i(t),o=n.node,r=n.offset),d(l,A),l.reset();var c=e(l);return l.detach(),a(this,o,r,o,r),c}}function L(t,n,r){function s(e,a){return function(t){v(this),y(t,K),y(_(t),G);var n=(e?o:i)(t);(a?d:m)(this,n.node,n.offset)}}function d(e,a,t){var o=e.endContainer,i=e.endOffset;(a!==e.startContainer||t!==e.startOffset)&&((_(a)!=_(o)||1==I.comparePoints(a,t,o,i))&&(o=a,i=t),n(e,a,t,o,i))}function m(e,a,t){var o=e.startContainer,i=e.startOffset;(a!==e.endContainer||t!==e.endOffset)&&((_(a)!=_(o)||-1==I.comparePoints(a,t,o,i))&&(o=a,i=t),n(e,o,i,a,t))}function u(e,a,t){(a!==e.startContainer||t!==e.startOffset||a!==e.endContainer||t!==e.endOffset)&&n(e,a,t,a,t)}t.prototype=new N,e.util.extend(t.prototype,{setStart:function(e,a){v(this),b(e,!0),w(e,a),d(this,e,a)},setEnd:function(e,a){v(this),b(e,!0),w(e,a),m(this,e,a)},setStartBefore:s(!0,!0),setStartAfter:s(!1,!0),setEndBefore:s(!0,!1),setEndAfter:s(!1,!1),collapse:function(e){M(this),e?n(this,this.startContainer,this.startOffset,this.startContainer,this.startOffset):n(this,this.endContainer,this.endOffset,this.endContainer,this.endOffset)},selectNodeContents:function(e){v(this),b(e,!0),n(this,e,0,e,I.getNodeLength(e))},selectNode:function(e){v(this),b(e,!1),y(e,K);var a=o(e),t=i(e);n(this,a.node,a.offset,t.node,t.offset)},extractContents:B(c,n),deleteContents:B(l,n),canSurroundContents:function(){M(this),A(this.startContainer),A(this.endContainer);var e=new f(this,!0),t=e._first&&a(e._first,this)||e._last&&a(e._last,this);return e.detach(),!t},detach:function(){r(this)},splitBoundaries:function(){M(this);var e=this.startContainer,a=this.startOffset,t=this.endContainer,o=this.endOffset,i=e===t;I.isCharacterDataNode(t)&&o>0&&o<t.length&&I.splitDataNode(t,o),I.isCharacterDataNode(e)&&a>0&&a<e.length&&(e=I.splitDataNode(e,a),i?(o-=a,t=e):t==e.parentNode&&o>=I.getNodeIndex(e)&&o++,a=0),n(this,e,a,t,o)},normalizeBoundaries:function(){M(this);var e=this.startContainer,a=this.startOffset,t=this.endContainer,o=this.endOffset,i=function(e){var a=e.nextSibling;a&&a.nodeType==e.nodeType&&(t=e,o=e.length,e.appendData(a.data),a.parentNode.removeChild(a))},r=function(n){var i=n.previousSibling;if(i&&i.nodeType==n.nodeType){e=n;var r=n.length;if(a=i.length,n.insertData(0,i.data),i.parentNode.removeChild(i),e==t)o+=a,t=e;else if(t==n.parentNode){var s=I.getNodeIndex(n);o==s?(t=n,o=r):o>s&&o--}}},s=!0;if(I.isCharacterDataNode(t))t.length==o&&i(t);else{if(o>0){var d=t.childNodes[o-1];d&&I.isCharacterDataNode(d)&&i(d)}s=!this.collapsed}if(s){if(I.isCharacterDataNode(e))0==a&&r(e);else if(a<e.childNodes.length){var l=e.childNodes[a];l&&I.isCharacterDataNode(l)&&r(l)}}else e=t,a=o;n(this,e,a,t,o)},collapseToPoint:function(e,a){v(this),b(e,!0),w(e,a),u(this,e,a)}}),E(t)}function R(e){e.collapsed=e.startContainer===e.endContainer&&e.startOffset===e.endOffset,e.commonAncestorContainer=e.collapsed?e.startContainer:I.getCommonAncestor(e.startContainer,e.endContainer)}function P(e,a,t,o,i){var r=e.startContainer!==a||e.startOffset!==t,s=e.endContainer!==o||e.endOffset!==i;e.startContainer=a,e.startOffset=t,e.endContainer=o,e.endOffset=i,R(e),n(e,"boundarychange",{startMoved:r,endMoved:s})}function D(e){v(e),e.startContainer=e.startOffset=e.endContainer=e.endOffset=null,e.collapsed=e.commonAncestorContainer=null,n(e,"detach",null),e._listeners=null}function O(e){this.startContainer=e,this.startOffset=0,this.endContainer=e,this.endOffset=0,this._listeners={boundarychange:[],detach:[]},R(this)}e.requireModules(["DomUtil"]);var I=e.dom,$=I.DomPosition,H=e.DOMException;f.prototype={_current:null,_next:null,_first:null,_last:null,isSingleCharacterDataNode:!1,reset:function(){this._current=null,this._next=this._first},hasNext:function(){return!!this._next},next:function(){var e=this._current=this._next;return e&&(this._next=e!==this._last?e.nextSibling:null,I.isCharacterDataNode(e)&&this.clonePartiallySelectedTextNodes&&(e===this.ec&&(e=e.cloneNode(!0)).deleteData(this.eo,e.length-this.eo),this._current===this.sc&&(e=e.cloneNode(!0)).deleteData(0,this.so))),e},remove:function(){var e,a,t=this._current;!I.isCharacterDataNode(t)||t!==this.sc&&t!==this.ec?t.parentNode&&t.parentNode.removeChild(t):(e=t===this.sc?this.so:0,a=t===this.ec?this.eo:t.length,e!=a&&t.deleteData(e,a-e))},isPartiallySelectedSubtree:function(){var e=this._current;return a(e,this.range)},getSubtreeIterator:function(){var e;if(this.isSingleCharacterDataNode)e=this.range.cloneRange(),e.collapse();else{e=new O(t(this.range));var a=this._current,n=a,o=0,i=a,r=I.getNodeLength(a);I.isAncestorOf(a,this.sc,!0)&&(n=this.sc,o=this.so),I.isAncestorOf(a,this.ec,!0)&&(i=this.ec,r=this.eo),P(e,n,o,i,r)}return new f(e,this.clonePartiallySelectedTextNodes)},detach:function(e){e&&this.range.detach(),this.range=this._current=this._next=this._first=this._last=this.sc=this.so=this.ec=this.eo=null}},h.prototype={BAD_BOUNDARYPOINTS_ERR:1,INVALID_NODE_TYPE_ERR:2},h.prototype.toString=function(){return this.message},p.prototype={_current:null,hasNext:function(){return!!this._next},next:function(){return this._current=this._next,this._next=this.nodes[++this._position],this._current},detach:function(){this._current=this._next=this.nodes=null}};var K=[1,3,4,5,7,8,10],G=[2,9,11],F=[5,6,10,12],U=[1,3,4,5,7,8,10,11],V=[1,3,4,5,7,8],_=I.getRootContainer,z=g([9,11]),j=g(F),W=g([6,10,12]),Y=document.createElement("style"),J=!1;try{Y.innerHTML="<b>x</b>",J=3==Y.firstChild.nodeType}catch(Z){}e.features.htmlParsingConforms=J;var q=J?function(e){var a=this.startContainer,t=I.getDocument(a);if(!a)throw new H("INVALID_STATE_ERR");var n=null;return 1==a.nodeType?n=a:I.isCharacterDataNode(a)&&(n=I.parentElement(a)),n=null===n||"HTML"==n.nodeName&&I.isHtmlNamespace(I.getDocument(n).documentElement)&&I.isHtmlNamespace(n)?t.createElement("body"):n.cloneNode(!1),n.innerHTML=e,I.fragmentFromNodeChildren(n)}:function(e){v(this);var a=t(this),n=a.createElement("body");return n.innerHTML=e,I.fragmentFromNodeChildren(n)},Q=["startContainer","startOffset","endContainer","endOffset","collapsed","commonAncestorContainer"],X=0,ea=1,aa=2,ta=3,na=0,oa=1,ia=2,ra=3;N.prototype={attachListener:function(e,a){this._listeners[e].push(a)},compareBoundaryPoints:function(e,a){M(this),S(this.startContainer,a.startContainer);var t,n,o,i,r=e==ta||e==X?"start":"end",s=e==ea||e==X?"start":"end";return t=this[r+"Container"],n=this[r+"Offset"],o=a[s+"Container"],i=a[s+"Offset"],I.comparePoints(t,n,o,i)},insertNode:function(e){if(M(this),y(e,U),A(this.startContainer),I.isAncestorOf(e,this.startContainer,!0))throw new H("HIERARCHY_REQUEST_ERR");var a=r(e,this.startContainer,this.startOffset);this.setStartBefore(a)},cloneContents:function(){M(this);var e,a;if(this.collapsed)return t(this).createDocumentFragment();if(this.startContainer===this.endContainer&&I.isCharacterDataNode(this.startContainer))return e=this.startContainer.cloneNode(!0),e.data=e.data.slice(this.startOffset,this.endOffset),a=t(this).createDocumentFragment(),a.appendChild(e),a;var n=new f(this,!0);return e=s(n),n.detach(),e},canSurroundContents:function(){M(this),A(this.startContainer),A(this.endContainer);var e=new f(this,!0),t=e._first&&a(e._first,this)||e._last&&a(e._last,this);return e.detach(),!t},surroundContents:function(e){if(y(e,V),!this.canSurroundContents())throw new h("BAD_BOUNDARYPOINTS_ERR");var a=this.extractContents();if(e.hasChildNodes())for(;e.lastChild;)e.removeChild(e.lastChild);r(e,this.startContainer,this.startOffset),e.appendChild(a),this.selectNode(e)},cloneRange:function(){M(this);for(var e,a=new O(t(this)),n=Q.length;n--;)e=Q[n],a[e]=this[e];return a},toString:function(){M(this);var e=this.startContainer;if(e===this.endContainer&&I.isCharacterDataNode(e))return 3==e.nodeType||4==e.nodeType?e.data.slice(this.startOffset,this.endOffset):"";var a=[],t=new f(this,!0);return d(t,function(e){(3==e.nodeType||4==e.nodeType)&&a.push(e.data)}),t.detach(),a.join("")},compareNode:function(e){M(this);var a=e.parentNode,t=I.getNodeIndex(e);if(!a)throw new H("NOT_FOUND_ERR");var n=this.comparePoint(a,t),o=this.comparePoint(a,t+1);return 0>n?o>0?ia:na:o>0?oa:ra},comparePoint:function(e,a){return M(this),k(e,"HIERARCHY_REQUEST_ERR"),S(e,this.startContainer),I.comparePoints(e,a,this.startContainer,this.startOffset)<0?-1:I.comparePoints(e,a,this.endContainer,this.endOffset)>0?1:0},createContextualFragment:q,toHtml:function(){M(this);var e=t(this).createElement("div");return e.appendChild(this.cloneContents()),e.innerHTML},intersectsNode:function(e,a){if(M(this),k(e,"NOT_FOUND_ERR"),I.getDocument(e)!==t(this))return!1;var n=e.parentNode,o=I.getNodeIndex(e);k(n,"NOT_FOUND_ERR");var i=I.comparePoints(n,o,this.endContainer,this.endOffset),r=I.comparePoints(n,o+1,this.startContainer,this.startOffset);return a?0>=i&&r>=0:0>i&&r>0},isPointInRange:function(e,a){return M(this),k(e,"HIERARCHY_REQUEST_ERR"),S(e,this.startContainer),I.comparePoints(e,a,this.startContainer,this.startOffset)>=0&&I.comparePoints(e,a,this.endContainer,this.endOffset)<=0},intersectsRange:function(e,a){if(M(this),t(e)!=t(this))throw new H("WRONG_DOCUMENT_ERR");var n=I.comparePoints(this.startContainer,this.startOffset,e.endContainer,e.endOffset),o=I.comparePoints(this.endContainer,this.endOffset,e.startContainer,e.startOffset);return a?0>=n&&o>=0:0>n&&o>0},intersection:function(e){if(this.intersectsRange(e)){var a=I.comparePoints(this.startContainer,this.startOffset,e.startContainer,e.startOffset),t=I.comparePoints(this.endContainer,this.endOffset,e.endContainer,e.endOffset),n=this.cloneRange();return-1==a&&n.setStart(e.startContainer,e.startOffset),1==t&&n.setEnd(e.endContainer,e.endOffset),n}return null},union:function(e){if(this.intersectsRange(e,!0)){var a=this.cloneRange();return-1==I.comparePoints(e.startContainer,e.startOffset,this.startContainer,this.startOffset)&&a.setStart(e.startContainer,e.startOffset),1==I.comparePoints(e.endContainer,e.endOffset,this.endContainer,this.endOffset)&&a.setEnd(e.endContainer,e.endOffset),a}throw new h("Ranges do not intersect")},containsNode:function(e,a){return a?this.intersectsNode(e,!1):this.compareNode(e)==ra},containsNodeContents:function(e){return this.comparePoint(e,0)>=0&&this.comparePoint(e,I.getNodeLength(e))<=0},containsRange:function(e){return this.intersection(e).equals(e)},containsNodeText:function(e){var a=this.cloneRange();a.selectNode(e);var t=a.getNodes([3]);if(t.length>0){a.setStart(t[0],0);var n=t.pop();a.setEnd(n,n.length);var o=this.containsRange(a);return a.detach(),o}return this.containsNodeContents(e)},createNodeIterator:function(e,a){return M(this),new p(this,e,a)},getNodes:function(e,a){return M(this),m(this,e,a)},getDocument:function(){return t(this)},collapseBefore:function(e){v(this),this.setEndBefore(e),this.collapse(!1)},collapseAfter:function(e){v(this),this.setStartAfter(e),this.collapse(!0)},getName:function(){return"DomRange"},equals:function(e){return O.rangesEqual(this,e)},inspect:function(){return u(this)}},L(O,P,D),e.rangePrototype=N.prototype,O.rangeProperties=Q,O.RangeIterator=f,O.copyComparisonConstants=E,O.createPrototypeRange=L,O.inspect=u,O.getRangeDocument=t,O.rangesEqual=function(e,a){return e.startContainer===a.startContainer&&e.startOffset===a.startOffset&&e.endContainer===a.endContainer&&e.endOffset===a.endOffset},e.DomRange=O,e.RangeException=h}),rangy.createModule("WrappedRange",function(e){function a(e){var a=e.parentElement(),t=e.duplicate();t.collapse(!0);var n=t.parentElement();t=e.duplicate(),t.collapse(!1);var o=t.parentElement(),i=n==o?n:r.getCommonAncestor(n,o);return i==a?i:r.getCommonAncestor(a,i)}function t(e){return 0==e.compareEndPoints("StartToEnd",e)}function n(e,a,t,n){var o=e.duplicate();o.collapse(t);var i=o.parentElement();if(r.isAncestorOf(a,i,!0)||(i=a),!i.canHaveHTML)return new s(i.parentNode,r.getNodeIndex(i));var d,l,c,m,u,f=r.getDocument(i).createElement("span"),h=t?"StartToStart":"StartToEnd";do i.insertBefore(f,f.previousSibling),o.moveToElementText(f);while((d=o.compareEndPoints(h,e))>0&&f.previousSibling);if(u=f.nextSibling,-1==d&&u&&r.isCharacterDataNode(u)){o.setEndPoint(t?"EndToStart":"EndToEnd",e);var p;if(/[\r\n]/.test(u.data)){var g=o.duplicate(),b=g.text.replace(/\r\n/g,"\r").length;for(p=g.moveStart("character",b);-1==(d=g.compareEndPoints("StartToEnd",g));)p++,g.moveStart("character",1)}else p=o.text.length;m=new s(u,p)}else l=(n||!t)&&f.previousSibling,c=(n||t)&&f.nextSibling,m=c&&r.isCharacterDataNode(c)?new s(c,0):l&&r.isCharacterDataNode(l)?new s(l,l.length):new s(i,r.getNodeIndex(f));return f.parentNode.removeChild(f),m}function o(e,a){var t,n,o,i,s=e.offset,d=r.getDocument(e.node),l=d.body.createTextRange(),c=r.isCharacterDataNode(e.node);return c?(t=e.node,n=t.parentNode):(i=e.node.childNodes,t=s<i.length?i[s]:null,n=e.node),o=d.createElement("span"),o.innerHTML="&#feff;",t?n.insertBefore(o,t):n.appendChild(o),l.moveToElementText(o),l.collapse(!a),n.removeChild(o),c&&l[a?"moveStart":"moveEnd"]("character",s),l}e.requireModules(["DomUtil","DomRange"]);var i,r=e.dom,s=r.DomPosition,d=e.DomRange;if(!e.features.implementsDomRange||e.features.implementsTextRange&&e.config.preferTextRange){if(e.features.implementsTextRange){i=function(e){this.textRange=e,this.refresh()},i.prototype=new d(document),i.prototype.refresh=function(){var e,o,i=a(this.textRange);t(this.textRange)?o=e=n(this.textRange,i,!0,!0):(e=n(this.textRange,i,!0,!1),o=n(this.textRange,i,!1,!1)),this.setStart(e.node,e.offset),this.setEnd(o.node,o.offset)},d.copyComparisonConstants(i);var l=function(){return this}();"undefined"==typeof l.Range&&(l.Range=i),e.createNativeRange=function(e){return e=e||document,e.body.createTextRange()}}}else!function(){function a(e){for(var a,t=c.length;t--;)a=c[t],e[a]=e.nativeRange[a]}function t(e,a,t,n,o){var i=e.startContainer!==a||e.startOffset!=t,r=e.endContainer!==n||e.endOffset!=o;(i||r)&&(e.setEnd(n,o),e.setStart(a,t))}function n(e){e.nativeRange.detach(),e.detached=!0;for(var a,t=c.length;t--;)a=c[t],e[a]=null}var o,s,l,c=d.rangeProperties;i=function(e){if(!e)throw new Error("Range must be specified");this.nativeRange=e,a(this)},d.createPrototypeRange(i,t,n),o=i.prototype,o.selectNode=function(e){this.nativeRange.selectNode(e),a(this)},o.deleteContents=function(){this.nativeRange.deleteContents(),a(this)},o.extractContents=function(){var e=this.nativeRange.extractContents();return a(this),e},o.cloneContents=function(){return this.nativeRange.cloneContents()},o.surroundContents=function(e){this.nativeRange.surroundContents(e),a(this)},o.collapse=function(e){this.nativeRange.collapse(e),a(this)},o.cloneRange=function(){return new i(this.nativeRange.cloneRange())},o.refresh=function(){a(this)},o.toString=function(){return this.nativeRange.toString()};var m=document.createTextNode("test");r.getBody(document).appendChild(m);var u=document.createRange();u.setStart(m,0),u.setEnd(m,0);try{u.setStart(m,1),s=!0,o.setStart=function(e,t){this.nativeRange.setStart(e,t),a(this)},o.setEnd=function(e,t){this.nativeRange.setEnd(e,t),a(this)},l=function(e){return function(t){this.nativeRange[e](t),a(this)}}}catch(f){s=!1,o.setStart=function(e,t){try{this.nativeRange.setStart(e,t)}catch(n){this.nativeRange.setEnd(e,t),this.nativeRange.setStart(e,t)}a(this)},o.setEnd=function(e,t){try{this.nativeRange.setEnd(e,t)}catch(n){this.nativeRange.setStart(e,t),this.nativeRange.setEnd(e,t)}a(this)},l=function(e,t){return function(n){try{this.nativeRange[e](n)}catch(o){this.nativeRange[t](n),this.nativeRange[e](n)}a(this)}}}o.setStartBefore=l("setStartBefore","setEndBefore"),o.setStartAfter=l("setStartAfter","setEndAfter"),o.setEndBefore=l("setEndBefore","setStartBefore"),o.setEndAfter=l("setEndAfter","setStartAfter"),u.selectNodeContents(m),o.selectNodeContents=u.startContainer==m&&u.endContainer==m&&0==u.startOffset&&u.endOffset==m.length?function(e){this.nativeRange.selectNodeContents(e),a(this)}:function(e){this.setStart(e,0),this.setEnd(e,d.getEndOffset(e))},u.selectNodeContents(m),u.setEnd(m,3);var h=document.createRange();h.selectNodeContents(m),h.setEnd(m,4),h.setStart(m,2),o.compareBoundaryPoints=-1==u.compareBoundaryPoints(u.START_TO_END,h)&1==u.compareBoundaryPoints(u.END_TO_START,h)?function(e,a){return a=a.nativeRange||a,e==a.START_TO_END?e=a.END_TO_START:e==a.END_TO_START&&(e=a.START_TO_END),this.nativeRange.compareBoundaryPoints(e,a)}:function(e,a){return this.nativeRange.compareBoundaryPoints(e,a.nativeRange||a)},e.util.isHostMethod(u,"createContextualFragment")&&(o.createContextualFragment=function(e){return this.nativeRange.createContextualFragment(e)}),r.getBody(document).removeChild(m),u.detach(),h.detach()}(),e.createNativeRange=function(e){return e=e||document,e.createRange()};e.features.implementsTextRange&&(i.rangeToTextRange=function(e){if(e.collapsed){var a=o(new s(e.startContainer,e.startOffset),!0);return a}var t=o(new s(e.startContainer,e.startOffset),!0),n=o(new s(e.endContainer,e.endOffset),!1),i=r.getDocument(e.startContainer).body.createTextRange();return i.setEndPoint("StartToStart",t),i.setEndPoint("EndToEnd",n),i}),i.prototype.getName=function(){return"WrappedRange"},e.WrappedRange=i,e.createRange=function(a){return a=a||document,new i(e.createNativeRange(a))},e.createRangyRange=function(e){return e=e||document,new d(e)},e.createIframeRange=function(a){return e.createRange(r.getIframeDocument(a))},e.createIframeRangyRange=function(a){return e.createRangyRange(r.getIframeDocument(a))},e.addCreateMissingNativeApiListener(function(a){var t=a.document;"undefined"==typeof t.createRange&&(t.createRange=function(){return e.createRange(this)}),t=a=null})}),rangy.createModule("WrappedSelection",function(e,a){function t(e){return(e||window).getSelection()}function n(e){return(e||window).document.selection}function o(e,a,t){var n=t?"end":"start",o=t?"start":"end";e.anchorNode=a[n+"Container"],e.anchorOffset=a[n+"Offset"],e.focusNode=a[o+"Container"],e.focusOffset=a[o+"Offset"]}function i(e){var a=e.nativeSelection;e.anchorNode=a.anchorNode,e.anchorOffset=a.anchorOffset,e.focusNode=a.focusNode,e.focusOffset=a.focusOffset}function r(e){e.anchorNode=e.focusNode=null,e.anchorOffset=e.focusOffset=0,e.rangeCount=0,e.isCollapsed=!0,e._ranges.length=0}function s(a){var t;return a instanceof C?(t=a._selectionNativeRange,t||(t=e.createNativeRange(A.getDocument(a.startContainer)),t.setEnd(a.endContainer,a.endOffset),t.setStart(a.startContainer,a.startOffset),a._selectionNativeRange=t,a.attachListener("detach",function(){this._selectionNativeRange=null}))):a instanceof T?t=a.nativeRange:e.features.implementsDomRange&&a instanceof A.getWindow(a.startContainer).Range&&(t=a),t}function d(e){if(!e.length||1!=e[0].nodeType)return!1;for(var a=1,t=e.length;t>a;++a)if(!A.isAncestorOf(e[0],e[a]))return!1;return!0}function l(e){var a=e.getNodes();if(!d(a))throw new Error("getSingleElementFromRange: range "+e.inspect()+" did not consist of a single element");return a[0]}function c(e){return!!e&&"undefined"!=typeof e.text}function m(e,a){var t=new T(a);e._ranges=[t],o(e,t,!1),e.rangeCount=1,e.isCollapsed=t.collapsed}function u(a){if(a._ranges.length=0,"None"==a.docSelection.type)r(a);else{var t=a.docSelection.createRange();if(c(t))m(a,t);else{a.rangeCount=t.length;for(var n,i=A.getDocument(t.item(0)),s=0;s<a.rangeCount;++s)n=e.createRange(i),n.selectNode(t.item(s)),a._ranges.push(n);a.isCollapsed=1==a.rangeCount&&a._ranges[0].collapsed,o(a,a._ranges[a.rangeCount-1],!1)}}}function f(e,a){for(var t=e.docSelection.createRange(),n=l(a),o=A.getDocument(t.item(0)),i=A.getBody(o).createControlRange(),r=0,s=t.length;s>r;++r)i.add(t.item(r));try{i.add(n)}catch(d){throw new Error("addRange(): Element within the specified Range could not be added to control selection (does it have layout?)")}i.select(),u(e)}function h(e,a,t){this.nativeSelection=e,this.docSelection=a,this._ranges=[],this.win=t,this.refresh()}function p(e,a){for(var t,n=A.getDocument(a[0].startContainer),o=A.getBody(n).createControlRange(),i=0;rangeCount>i;++i){t=l(a[i]);try{o.add(t)}catch(r){throw new Error("setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)")}}o.select(),u(e)}function g(e,a){if(e.anchorNode&&A.getDocument(e.anchorNode)!==A.getDocument(a))throw new M("WRONG_DOCUMENT_ERR")}function b(e){var a=[],t=new N(e.anchorNode,e.anchorOffset),n=new N(e.focusNode,e.focusOffset),o="function"==typeof e.getName?e.getName():"Selection";if("undefined"!=typeof e.rangeCount)for(var i=0,r=e.rangeCount;r>i;++i)a[i]=C.inspect(e.getRangeAt(i));return"["+o+"(Ranges: "+a.join(", ")+")(anchor: "+t.inspect()+", focus: "+n.inspect()+"]"}e.requireModules(["DomUtil","DomRange","WrappedRange"]),e.config.checkSelectionRanges=!0;var v,y,w="boolean",S="_rangySelection",A=e.dom,k=e.util,C=e.DomRange,T=e.WrappedRange,M=e.DOMException,N=A.DomPosition,x="Control",E=e.util.isHostMethod(window,"getSelection"),B=e.util.isHostObject(document,"selection"),L=B&&(!E||e.config.preferTextRange);L?(v=n,e.isSelectionValid=function(e){var a=(e||window).document,t=a.selection;return"None"!=t.type||A.getDocument(t.createRange().parentElement())==a}):E?(v=t,e.isSelectionValid=function(){return!0}):a.fail("Neither document.selection or window.getSelection() detected."),e.getNativeSelection=v;var R=v(),P=e.createNativeRange(document),D=A.getBody(document),O=k.areHostObjects(R,["anchorNode","focusNode"]&&k.areHostProperties(R,["anchorOffset","focusOffset"]));e.features.selectionHasAnchorAndFocus=O;var I=k.isHostMethod(R,"extend");e.features.selectionHasExtend=I;var $="number"==typeof R.rangeCount;e.features.selectionHasRangeCount=$;var H=!1,K=!0;k.areHostMethods(R,["addRange","getRangeAt","removeAllRanges"])&&"number"==typeof R.rangeCount&&e.features.implementsDomRange&&!function(){var e=document.createElement("iframe");D.appendChild(e);var a=A.getIframeDocument(e);a.open(),a.write("<html><head></head><body>12</body></html>"),a.close();var t=A.getIframeWindow(e).getSelection(),n=a.documentElement,o=n.lastChild,i=o.firstChild,r=a.createRange();r.setStart(i,1),r.collapse(!0),t.addRange(r),K=1==t.rangeCount,t.removeAllRanges();
var s=r.cloneRange();r.setStart(i,0),s.setEnd(i,2),t.addRange(r),t.addRange(s),H=2==t.rangeCount,r.detach(),s.detach(),D.removeChild(e)}(),e.features.selectionSupportsMultipleRanges=H,e.features.collapsedNonEditableSelectionsSupported=K;var G,F=!1;D&&k.isHostMethod(D,"createControlRange")&&(G=D.createControlRange(),k.areHostProperties(G,["item","add"])&&(F=!0)),e.features.implementsControlRange=F,y=O?function(e){return e.anchorNode===e.focusNode&&e.anchorOffset===e.focusOffset}:function(e){return e.rangeCount?e.getRangeAt(e.rangeCount-1).collapsed:!1};var U;k.isHostMethod(R,"getRangeAt")?U=function(e,a){try{return e.getRangeAt(a)}catch(t){return null}}:O&&(U=function(a){var t=A.getDocument(a.anchorNode),n=e.createRange(t);return n.setStart(a.anchorNode,a.anchorOffset),n.setEnd(a.focusNode,a.focusOffset),n.collapsed!==this.isCollapsed&&(n.setStart(a.focusNode,a.focusOffset),n.setEnd(a.anchorNode,a.anchorOffset)),n}),e.getSelection=function(e){e=e||window;var a=e[S],t=v(e),o=B?n(e):null;return a?(a.nativeSelection=t,a.docSelection=o,a.refresh(e)):(a=new h(t,o,e),e[S]=a),a},e.getIframeSelection=function(a){return e.getSelection(A.getIframeWindow(a))};var V=h.prototype;if(!L&&O&&k.areHostMethods(R,["removeAllRanges","addRange"])){V.removeAllRanges=function(){this.nativeSelection.removeAllRanges(),r(this)};var _=function(a,t){var n=C.getRangeDocument(t),o=e.createRange(n);o.collapseToPoint(t.endContainer,t.endOffset),a.nativeSelection.addRange(s(o)),a.nativeSelection.extend(t.startContainer,t.startOffset),a.refresh()};V.addRange=$?function(a,t){if(F&&B&&this.docSelection.type==x)f(this,a);else if(t&&I)_(this,a);else{var n;if(H?n=this.rangeCount:(this.removeAllRanges(),n=0),this.nativeSelection.addRange(s(a)),this.rangeCount=this.nativeSelection.rangeCount,this.rangeCount==n+1){if(e.config.checkSelectionRanges){var i=U(this.nativeSelection,this.rangeCount-1);i&&!C.rangesEqual(i,a)&&(a=new T(i))}this._ranges[this.rangeCount-1]=a,o(this,a,W(this.nativeSelection)),this.isCollapsed=y(this)}else this.refresh()}}:function(e,a){a&&I?_(this,e):(this.nativeSelection.addRange(s(e)),this.refresh())},V.setRanges=function(e){if(F&&e.length>1)p(this,e);else{this.removeAllRanges();for(var a=0,t=e.length;t>a;++a)this.addRange(e[a])}}}else{if(!(k.isHostMethod(R,"empty")&&k.isHostMethod(P,"select")&&F&&L))return a.fail("No means of selecting a Range or TextRange was found"),!1;V.removeAllRanges=function(){try{if(this.docSelection.empty(),"None"!=this.docSelection.type){var e;if(this.anchorNode)e=A.getDocument(this.anchorNode);else if(this.docSelection.type==x){var a=this.docSelection.createRange();a.length&&(e=A.getDocument(a.item(0)).body.createTextRange())}if(e){var t=e.body.createTextRange();t.select(),this.docSelection.empty()}}}catch(n){}r(this)},V.addRange=function(e){this.docSelection.type==x?f(this,e):(T.rangeToTextRange(e).select(),this._ranges[0]=e,this.rangeCount=1,this.isCollapsed=this._ranges[0].collapsed,o(this,e,!1))},V.setRanges=function(e){this.removeAllRanges();var a=e.length;a>1?p(this,e):a&&this.addRange(e[0])}}V.getRangeAt=function(e){if(0>e||e>=this.rangeCount)throw new M("INDEX_SIZE_ERR");return this._ranges[e]};var z;if(L)z=function(a){var t;e.isSelectionValid(a.win)?t=a.docSelection.createRange():(t=A.getBody(a.win.document).createTextRange(),t.collapse(!0)),a.docSelection.type==x?u(a):c(t)?m(a,t):r(a)};else if(k.isHostMethod(R,"getRangeAt")&&"number"==typeof R.rangeCount)z=function(a){if(F&&B&&a.docSelection.type==x)u(a);else if(a._ranges.length=a.rangeCount=a.nativeSelection.rangeCount,a.rangeCount){for(var t=0,n=a.rangeCount;n>t;++t)a._ranges[t]=new e.WrappedRange(a.nativeSelection.getRangeAt(t));o(a,a._ranges[a.rangeCount-1],W(a.nativeSelection)),a.isCollapsed=y(a)}else r(a)};else{if(!O||typeof R.isCollapsed!=w||typeof P.collapsed!=w||!e.features.implementsDomRange)return a.fail("No means of obtaining a Range or TextRange from the user's selection was found"),!1;z=function(e){var a,t=e.nativeSelection;t.anchorNode?(a=U(t,0),e._ranges=[a],e.rangeCount=1,i(e),e.isCollapsed=y(e)):r(e)}}V.refresh=function(e){var a=e?this._ranges.slice(0):null;if(z(this),e){var t=a.length;if(t!=this._ranges.length)return!1;for(;t--;)if(!C.rangesEqual(a[t],this._ranges[t]))return!1;return!0}};var j=function(e,a){var t=e.getAllRanges(),n=!1;e.removeAllRanges();for(var o=0,i=t.length;i>o;++o)n||a!==t[o]?e.addRange(t[o]):n=!0;e.rangeCount||r(e)};V.removeRange=F?function(e){if(this.docSelection.type==x){for(var a,t=this.docSelection.createRange(),n=l(e),o=A.getDocument(t.item(0)),i=A.getBody(o).createControlRange(),r=!1,s=0,d=t.length;d>s;++s)a=t.item(s),a!==n||r?i.add(t.item(s)):r=!0;i.select(),u(this)}else j(this,e)}:function(e){j(this,e)};var W;!L&&O&&e.features.implementsDomRange?(W=function(e){var a=!1;return e.anchorNode&&(a=1==A.comparePoints(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset)),a},V.isBackwards=function(){return W(this)}):W=V.isBackwards=function(){return!1},V.toString=function(){for(var e=[],a=0,t=this.rangeCount;t>a;++a)e[a]=""+this._ranges[a];return e.join("")},V.collapse=function(a,t){g(this,a);var n=e.createRange(A.getDocument(a));n.collapseToPoint(a,t),this.removeAllRanges(),this.addRange(n),this.isCollapsed=!0},V.collapseToStart=function(){if(!this.rangeCount)throw new M("INVALID_STATE_ERR");var e=this._ranges[0];this.collapse(e.startContainer,e.startOffset)},V.collapseToEnd=function(){if(!this.rangeCount)throw new M("INVALID_STATE_ERR");var e=this._ranges[this.rangeCount-1];this.collapse(e.endContainer,e.endOffset)},V.selectAllChildren=function(a){g(this,a);var t=e.createRange(A.getDocument(a));t.selectNodeContents(a),this.removeAllRanges(),this.addRange(t)},V.deleteFromDocument=function(){if(F&&B&&this.docSelection.type==x){for(var e,a=this.docSelection.createRange();a.length;)e=a.item(0),a.remove(e),e.parentNode.removeChild(e);this.refresh()}else if(this.rangeCount){var t=this.getAllRanges();this.removeAllRanges();for(var n=0,o=t.length;o>n;++n)t[n].deleteContents();this.addRange(t[o-1])}},V.getAllRanges=function(){return this._ranges.slice(0)},V.setSingleRange=function(e){this.setRanges([e])},V.containsNode=function(e,a){for(var t=0,n=this._ranges.length;n>t;++t)if(this._ranges[t].containsNode(e,a))return!0;return!1},V.toHtml=function(){var e="";if(this.rangeCount){for(var a=C.getRangeDocument(this._ranges[0]).createElement("div"),t=0,n=this._ranges.length;n>t;++t)a.appendChild(this._ranges[t].cloneContents());e=a.innerHTML}return e},V.getName=function(){return"WrappedSelection"},V.inspect=function(){return b(this)},V.detach=function(){this.win[S]=null,this.win=this.anchorNode=this.focusNode=null},h.inspect=b,e.Selection=h,e.selectionPrototype=V,e.addCreateMissingNativeApiListener(function(a){"undefined"==typeof a.getSelection&&(a.getSelection=function(){return e.getSelection(this)}),a=null})});var Base=function(){};Base.extend=function(e,a){var t=Base.prototype.extend;Base._prototyping=!0;var n=new this;t.call(n,e),n.base=function(){},delete Base._prototyping;var o=n.constructor,i=n.constructor=function(){if(!Base._prototyping)if(this._constructing||this.constructor==i)this._constructing=!0,o.apply(this,arguments),delete this._constructing;else if(null!=arguments[0])return(arguments[0].extend||t).call(arguments[0],n)};return i.ancestor=this,i.extend=this.extend,i.forEach=this.forEach,i.implement=this.implement,i.prototype=n,i.toString=this.toString,i.valueOf=function(e){return"object"==e?i:o.valueOf()},t.call(i,a),"function"==typeof i.init&&i.init(),i},Base.prototype={extend:function(e,a){if(arguments.length>1){var t=this[e];if(t&&"function"==typeof a&&(!t.valueOf||t.valueOf()!=a.valueOf())&&/\bbase\b/.test(a)){var n=a.valueOf();a=function(){var e=this.base||Base.prototype.base;this.base=t;var a=n.apply(this,arguments);return this.base=e,a},a.valueOf=function(e){return"object"==e?a:n},a.toString=Base.toString}this[e]=a}else if(e){var o=Base.prototype.extend;Base._prototyping||"function"==typeof this||(o=this.extend||o);for(var i={toSource:null},r=["constructor","toString","valueOf"],s=Base._prototyping?0:1;d=r[s++];)e[d]!=i[d]&&o.call(this,d,e[d]);for(var d in e)i[d]||o.call(this,d,e[d])}return this}},Base=Base.extend({constructor:function(){this.extend(arguments[0])}},{ancestor:Object,version:"1.1",forEach:function(e,a,t){for(var n in e)void 0===this.prototype[n]&&a.call(t,e[n],n,e)},implement:function(){for(var e=0;e<arguments.length;e++)"function"==typeof arguments[e]?arguments[e](this.prototype):this.prototype.extend(arguments[e]);return this},toString:function(){return String(this.valueOf())}}),wysihtml5.browser=function(){function e(e){return+(/ipad|iphone|ipod/.test(e)&&e.match(/ os (\d+).+? like mac os x/)||[,0])[1]}function a(e){return+(e.match(/android (\d+)/)||[,0])[1]}var t=navigator.userAgent,n=document.createElement("div"),o=-1!==t.indexOf("MSIE")&&-1===t.indexOf("Opera"),i=-1!==t.indexOf("Gecko")&&-1===t.indexOf("KHTML"),r=-1!==t.indexOf("AppleWebKit/"),s=-1!==t.indexOf("Chrome/"),d=-1!==t.indexOf("Opera/");return{USER_AGENT:t,supported:function(){var t=this.USER_AGENT.toLowerCase(),o="contentEditable"in n,i=document.execCommand&&document.queryCommandSupported&&document.queryCommandState,r=document.querySelector&&document.querySelectorAll,s=this.isIos()&&e(t)<5||this.isAndroid()&&a(t)<4||-1!==t.indexOf("opera mobi")||-1!==t.indexOf("hpwos/");return o&&i&&r&&!s},isTouchDevice:function(){return this.supportsEvent("touchmove")},isIos:function(){return/ipad|iphone|ipod/i.test(this.USER_AGENT)},isAndroid:function(){return-1!==this.USER_AGENT.indexOf("Android")},supportsSandboxedIframes:function(){return o},throwsMixedContentWarningWhenIframeSrcIsEmpty:function(){return!("querySelector"in document)},displaysCaretInEmptyContentEditableCorrectly:function(){return o},hasCurrentStyleProperty:function(){return"currentStyle"in n},hasHistoryIssue:function(){return i&&"Mac"===navigator.platform.substr(0,3)},insertsLineBreaksOnReturn:function(){return i},supportsPlaceholderAttributeOn:function(e){return"placeholder"in e},supportsEvent:function(e){return"on"+e in n||function(){return n.setAttribute("on"+e,"return;"),"function"==typeof n["on"+e]}()},supportsEventsInIframeCorrectly:function(){return!d},supportsHTML5Tags:function(e){var a=e.createElement("div"),t="<article>foo</article>";return a.innerHTML=t,a.innerHTML.toLowerCase()===t},supportsCommand:function(){var e={formatBlock:o,insertUnorderedList:o||r,insertOrderedList:o||r},a={insertHTML:i};return function(t,n){var o=e[n];if(!o){try{return t.queryCommandSupported(n)}catch(i){}try{return t.queryCommandEnabled(n)}catch(r){return!!a[n]}}return!1}}(),doesAutoLinkingInContentEditable:function(){return o},canDisableAutoLinking:function(){return this.supportsCommand(document,"AutoUrlDetect")},clearsContentEditableCorrectly:function(){return i||d||r},supportsGetAttributeCorrectly:function(){var e=document.createElement("td");return"1"!=e.getAttribute("rowspan")},canSelectImagesInContentEditable:function(){return i||o||d},autoScrollsToCaret:function(){return!r},autoClosesUnclosedTags:function(){var e,a,t=n.cloneNode(!1);return t.innerHTML="<p><div></div>",a=t.innerHTML.toLowerCase(),e="<p></p><div></div>"===a||"<p><div></div></p>"===a,this.autoClosesUnclosedTags=function(){return e},e},supportsNativeGetElementsByClassName:function(){return-1!==String(document.getElementsByClassName).indexOf("[native code]")},supportsSelectionModify:function(){return"getSelection"in window&&"modify"in window.getSelection()},needsSpaceAfterLineBreak:function(){return d},supportsSpeechApiOn:function(e){var a=t.match(/Chrome\/(\d+)/)||[,0];return a[1]>=11&&("onwebkitspeechchange"in e||"speech"in e)},crashesWhenDefineProperty:function(e){return o&&("XMLHttpRequest"===e||"XDomainRequest"===e)},doesAsyncFocus:function(){return o},hasProblemsSettingCaretAfterImg:function(){return o},hasUndoInContextMenu:function(){return i||s||d},hasInsertNodeIssue:function(){return d},hasIframeFocusIssue:function(){return o},createsNestedInvalidMarkupAfterPaste:function(){return r}}}(),wysihtml5.lang.array=function(e){return{contains:function(a){if(e.indexOf)return-1!==e.indexOf(a);for(var t=0,n=e.length;n>t;t++)if(e[t]===a)return!0;return!1},without:function(a){a=wysihtml5.lang.array(a);for(var t=[],n=0,o=e.length;o>n;n++)a.contains(e[n])||t.push(e[n]);return t},get:function(){for(var a=0,t=e.length,n=[];t>a;a++)n.push(e[a]);return n}}},wysihtml5.lang.Dispatcher=Base.extend({on:function(e,a){return this.events=this.events||{},this.events[e]=this.events[e]||[],this.events[e].push(a),this},off:function(e,a){this.events=this.events||{};var t,n,o=0;if(e){for(t=this.events[e]||[],n=[];o<t.length;o++)t[o]!==a&&a&&n.push(t[o]);this.events[e]=n}else this.events={};return this},fire:function(e,a){this.events=this.events||{};for(var t=this.events[e]||[],n=0;n<t.length;n++)t[n].call(this,a);return this},observe:function(){return this.on.apply(this,arguments)},stopObserving:function(){return this.off.apply(this,arguments)}}),wysihtml5.lang.object=function(e){return{merge:function(a){for(var t in a)e[t]=a[t];return this},get:function(){return e},clone:function(){var a,t={};for(a in e)t[a]=e[a];return t},isArray:function(){return"[object Array]"===Object.prototype.toString.call(e)}}},function(){var e=/^\s+/,a=/\s+$/,t=/[&<>"]/g,n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};wysihtml5.lang.string=function(o){return o=String(o),{trim:function(){return o.replace(e,"").replace(a,"")},interpolate:function(e){for(var a in e)o=this.replace("#{"+a+"}").by(e[a]);return o},replace:function(e){return{by:function(a){return o.split(e).join(a)}}},escapeHTML:function(){return o.replace(t,function(e){return n[e]})}}}}(),function(e){function a(e){return i(e)?e:(e===e.ownerDocument.documentElement&&(e=e.ownerDocument.body),r(e))}function t(e){return e.replace(d,function(e,a){var t=(a.match(l)||[])[1]||"",n=m[t];a=a.replace(l,""),a.split(n).length>a.split(t).length&&(a+=t,t="");var o=a,i=a;return a.length>c&&(i=i.substr(0,c)+"..."),"www."===o.substr(0,4)&&(o="http://"+o),'<a href="'+o+'">'+i+"</a>"+t})}function n(e){var a=e._wysihtml5_tempElement;return a||(a=e._wysihtml5_tempElement=e.createElement("div")),a}function o(a){var o=a.parentNode,i=e.lang.string(a.data).escapeHTML(),r=n(o.ownerDocument);for(r.innerHTML="<span></span>"+t(i),r.removeChild(r.firstChild);r.firstChild;)o.insertBefore(r.firstChild,a);o.removeChild(a)}function i(e){for(var a;e.parentNode;){if(e=e.parentNode,a=e.nodeName,s.contains(a))return!0;if("body"===a)return!1}return!1}function r(a){if(!s.contains(a.nodeName)){if(a.nodeType===e.TEXT_NODE&&a.data.match(d))return o(a),void 0;for(var t=e.lang.array(a.childNodes).get(),n=t.length,i=0;n>i;i++)r(t[i]);return a}}var s=e.lang.array(["CODE","PRE","A","SCRIPT","HEAD","TITLE","STYLE"]),d=/((https?:\/\/|www\.)[^\s<]{3,})/gi,l=/([^\w\/\-](,?))$/i,c=100,m={")":"(","]":"[","}":"{"};e.dom.autoLink=a,e.dom.autoLink.URL_REG_EXP=d}(wysihtml5),function(e){var a=e.dom;a.addClass=function(e,t){var n=e.classList;return n?n.add(t):(a.hasClass(e,t)||(e.className+=" "+t),void 0)},a.removeClass=function(e,a){var t=e.classList;return t?t.remove(a):(e.className=e.className.replace(new RegExp("(^|\\s+)"+a+"(\\s+|$)")," "),void 0)},a.hasClass=function(e,a){var t=e.classList;if(t)return t.contains(a);var n=e.className;return n.length>0&&(n==a||new RegExp("(^|\\s)"+a+"(\\s|$)").test(n))}}(wysihtml5),wysihtml5.dom.contains=function(){var e=document.documentElement;return e.contains?function(e,a){return a.nodeType!==wysihtml5.ELEMENT_NODE&&(a=a.parentNode),e!==a&&e.contains(a)}:e.compareDocumentPosition?function(e,a){return!!(16&e.compareDocumentPosition(a))}:void 0}(),wysihtml5.dom.convertToList=function(){function e(e,a){var t=e.createElement("li");return a.appendChild(t),t}function a(e,a){return e.createElement(a)}function t(t,n){if("UL"===t.nodeName||"OL"===t.nodeName||"MENU"===t.nodeName)return t;var o,i,r,s,d,l,c,m,u,f=t.ownerDocument,h=a(f,n),p=t.querySelectorAll("br"),g=p.length;for(u=0;g>u;u++)for(s=p[u];(d=s.parentNode)&&d!==t&&d.lastChild===s;){if("block"===wysihtml5.dom.getStyle("display").from(d)){d.removeChild(s);break}wysihtml5.dom.insert(s).after(s.parentNode)}for(o=wysihtml5.lang.array(t.childNodes).get(),i=o.length,u=0;i>u;u++)m=m||e(f,h),r=o[u],l="block"===wysihtml5.dom.getStyle("display").from(r),c="BR"===r.nodeName,l?(m=m.firstChild?e(f,h):m,m.appendChild(r),m=null):c?m=m.firstChild?null:m:m.appendChild(r);return 0===o.length&&e(f,h),t.parentNode.replaceChild(h,t),h}return t}(),wysihtml5.dom.copyAttributes=function(e){return{from:function(a){return{to:function(t){for(var n,o=0,i=e.length;i>o;o++)n=e[o],"undefined"!=typeof a[n]&&""!==a[n]&&(t[n]=a[n]);return{andTo:arguments.callee}}}}}},function(e){var a=["-webkit-box-sizing","-moz-box-sizing","-ms-box-sizing","box-sizing"],t=function(a){return n(a)?parseInt(e.getStyle("width").from(a),10)<a.offsetWidth:!1},n=function(t){for(var n=0,o=a.length;o>n;n++)if("border-box"===e.getStyle(a[n]).from(t))return a[n]};e.copyStyles=function(n){return{from:function(o){t(o)&&(n=wysihtml5.lang.array(n).without(a));for(var i,r="",s=n.length,d=0;s>d;d++)i=n[d],r+=i+":"+e.getStyle(i).from(o)+";";return{to:function(a){return e.setStyles(r).on(a),{andTo:arguments.callee}}}}}}}(wysihtml5.dom),function(e){e.dom.delegate=function(a,t,n,o){return e.dom.observe(a,n,function(n){for(var i=n.target,r=e.lang.array(a.querySelectorAll(t));i&&i!==a;){if(r.contains(i)){o.call(i,n);break}i=i.parentNode}})}}(wysihtml5),wysihtml5.dom.getAsDom=function(){var e=function(e,a){var t=a.createElement("div");t.style.display="none",a.body.appendChild(t);try{t.innerHTML=e}catch(n){}return a.body.removeChild(t),t},a=function(e){if(!e._wysihtml5_supportsHTML5Tags){for(var a=0,n=t.length;n>a;a++)e.createElement(t[a]);e._wysihtml5_supportsHTML5Tags=!0}},t=["abbr","article","aside","audio","bdi","canvas","command","datalist","details","figcaption","figure","footer","header","hgroup","keygen","mark","meter","nav","output","progress","rp","rt","ruby","svg","section","source","summary","time","track","video","wbr"];return function(t,n){n=n||document;var o;return"object"==typeof t&&t.nodeType?(o=n.createElement("div"),o.appendChild(t)):wysihtml5.browser.supportsHTML5Tags(n)?(o=n.createElement("div"),o.innerHTML=t):(a(n),o=e(t,n)),o}}(),wysihtml5.dom.getParentElement=function(){function e(e,a){return a&&a.length?"string"==typeof a?e===a:wysihtml5.lang.array(a).contains(e):!0}function a(e){return e.nodeType===wysihtml5.ELEMENT_NODE}function t(e,a,t){var n=(e.className||"").match(t)||[];return a?n[n.length-1]===a:!!n.length}function n(a,t,n){for(;n--&&a&&"BODY"!==a.nodeName;){if(e(a.nodeName,t))return a;a=a.parentNode}return null}function o(n,o,i,r,s){for(;s--&&n&&"BODY"!==n.nodeName;){if(a(n)&&e(n.nodeName,o)&&t(n,i,r))return n;n=n.parentNode}return null}return function(e,a,t){return t=t||50,a.className||a.classRegExp?o(e,a.nodeName,a.className,a.classRegExp,t):n(e,a.nodeName,t)}}(),wysihtml5.dom.getStyle=function(){function e(e){return e.replace(t,function(e){return e.charAt(1).toUpperCase()})}var a={"float":"styleFloat"in document.createElement("div").style?"styleFloat":"cssFloat"},t=/\-[a-z]/g;return function(t){return{from:function(n){if(n.nodeType===wysihtml5.ELEMENT_NODE){var o=n.ownerDocument,i=a[t]||e(t),r=n.style,s=n.currentStyle,d=r[i];if(d)return d;if(s)try{return s[i]}catch(l){}var c,m,u=o.defaultView||o.parentWindow,f=("height"===t||"width"===t)&&"TEXTAREA"===n.nodeName;return u.getComputedStyle?(f&&(c=r.overflow,r.overflow="hidden"),m=u.getComputedStyle(n,null).getPropertyValue(t),f&&(r.overflow=c||""),m):void 0}}}}}(),wysihtml5.dom.hasElementWithTagName=function(){function e(e){return e._wysihtml5_identifier||(e._wysihtml5_identifier=t++)}var a={},t=1;return function(t,n){var o=e(t)+":"+n,i=a[o];return i||(i=a[o]=t.getElementsByTagName(n)),i.length>0}}(),function(e){function a(e){return e._wysihtml5_identifier||(e._wysihtml5_identifier=n++)}var t={},n=1;e.dom.hasElementWithClassName=function(n,o){if(!e.browser.supportsNativeGetElementsByClassName())return!!n.querySelector("."+o);var i=a(n)+":"+o,r=t[i];return r||(r=t[i]=n.getElementsByClassName(o)),r.length>0}}(wysihtml5),wysihtml5.dom.insert=function(e){return{after:function(a){a.parentNode.insertBefore(e,a.nextSibling)},before:function(a){a.parentNode.insertBefore(e,a)},into:function(a){a.appendChild(e)}}},wysihtml5.dom.insertCSS=function(e){return e=e.join("\n"),{into:function(a){var t=a.createElement("style");t.type="text/css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(a.createTextNode(e));var n=a.querySelector("head link");if(n)return n.parentNode.insertBefore(t,n),void 0;var o=a.querySelector("head");o&&o.appendChild(t)}}},wysihtml5.dom.observe=function(e,a,t){a="string"==typeof a?[a]:a;for(var n,o,i=0,r=a.length;r>i;i++)o=a[i],e.addEventListener?e.addEventListener(o,t,!1):(n=function(a){"target"in a||(a.target=a.srcElement),a.preventDefault=a.preventDefault||function(){this.returnValue=!1},a.stopPropagation=a.stopPropagation||function(){this.cancelBubble=!0},t.call(e,a)},e.attachEvent("on"+o,n));return{stop:function(){for(var o,i=0,r=a.length;r>i;i++)o=a[i],e.removeEventListener?e.removeEventListener(o,t,!1):e.detachEvent("on"+o,n)}}},wysihtml5.dom.parse=function(){function e(e,t,n,o){wysihtml5.lang.object(m).merge(c).merge(t).get(),n=n||e.ownerDocument||document;var i,r,s,d=n.createDocumentFragment(),l="string"==typeof e;for(i=l?wysihtml5.dom.getAsDom(e,n):e;i.firstChild;)s=i.firstChild,r=a(s,o),i.removeChild(s),r&&d.appendChild(r);return i.innerHTML="",i.appendChild(d),l?wysihtml5.quirks.getCorrectInnerHTML(i):i}function a(e,t){var n,o,i,r=e.nodeType,l=e.childNodes,c=l.length,m=s[r],u=0;if(o=m&&m(e),!o)return null;for(u=0;c>u;u++)i=a(l[u],t),i&&o.appendChild(i);if(t&&o.nodeName.toLowerCase()===d&&(!o.childNodes.length||!o.attributes.length)){for(n=o.ownerDocument.createDocumentFragment();o.firstChild;)n.appendChild(o.firstChild);return n}return o}function t(e){var a,t,o=m.tags,i=e.nodeName.toLowerCase(),r=e.scopeName;if(e._wysihtml5)return null;if(e._wysihtml5=1,"wysihtml5-temp"===e.className)return null;if(r&&"HTML"!=r&&(i=r+":"+i),"outerHTML"in e&&(wysihtml5.browser.autoClosesUnclosedTags()||"P"!==e.nodeName||"</p>"===e.outerHTML.slice(-4).toLowerCase()||(i="div")),i in o){if(a=o[i],!a||a.remove)return null;a="string"==typeof a?{rename_tag:a}:a}else{if(!e.firstChild)return null;a={rename_tag:d}}return t=e.ownerDocument.createElement(a.rename_tag||i),n(e,t,a),e=null,t}function n(e,a,t){var n,i,r,s,d,c,u,f={},g=t.set_class,b=t.add_class,v=t.set_attributes,y=t.check_attributes,w=m.classes,S=0,A=[],k=[],C=[],T=[];if(v&&(f=wysihtml5.lang.object(v).clone()),y)for(d in y)u=h[y[d]],u&&(c=u(o(e,d)),"string"==typeof c&&(f[d]=c));if(g&&A.push(g),b)for(d in b)u=p[b[d]],u&&(s=u(o(e,d)),"string"==typeof s&&A.push(s));for(w["_wysihtml5-temp-placeholder"]=1,T=e.getAttribute("class"),T&&(A=A.concat(T.split(l))),n=A.length;n>S;S++)r=A[S],k.push(r);for(i=k.length;i--;)r=k[i],wysihtml5.lang.array(C).contains(r)||C.unshift(r);C.length&&(f["class"]=C.join(" "));for(d in f)try{a.setAttribute(d,f[d])}catch(M){}f.src&&("undefined"!=typeof f.width&&a.setAttribute("width",f.width),"undefined"!=typeof f.height&&a.setAttribute("height",f.height))}function o(e,a){a=a.toLowerCase();var t=e.nodeName;if("IMG"==t&&"src"==a&&i(e)===!0)return e.src;if(u&&"outerHTML"in e){var n=e.outerHTML.toLowerCase(),o=-1!=n.indexOf(" "+a+"=");return o?e.getAttribute(a):null}return e.getAttribute(a)}function i(e){try{return e.complete&&!e.mozMatchesSelector(":-moz-broken")}catch(a){if(e.complete&&"complete"===e.readyState)return!0}}function r(e){var a=e.nextSibling;if(!a||a.nodeType!==wysihtml5.TEXT_NODE){var t=e.data.replace(f,"");return e.ownerDocument.createTextNode(t)}a.data=e.data+a.data}var s={1:t,3:r},d="span",l=/\s+/,c={tags:{},classes:{}},m={},u=!wysihtml5.browser.supportsGetAttributeCorrectly(),f=/\uFEFF/g,h={url:function(){var e=/^https?:\/\//i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),src:function(){var e=/^(\/|https?:\/\/)/i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),href:function(){var e=/^(\/|https?:\/\/|mailto:)/i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),alt:function(){var e=/[^ a-z0-9_\-]/gi;return function(a){return a?a.replace(e,""):""}}(),numbers:function(){var e=/\D/g;return function(a){return a=(a||"").replace(e,""),a||null}}()},p={align_img:function(){var e={left:"wysiwyg-float-left",right:"wysiwyg-float-right"};return function(a){return e[String(a).toLowerCase()]}}(),align_text:function(){var e={left:"wysiwyg-text-align-left",right:"wysiwyg-text-align-right",center:"wysiwyg-text-align-center",justify:"wysiwyg-text-align-justify"};return function(a){return e[String(a).toLowerCase()]}}(),clear_br:function(){var e={left:"wysiwyg-clear-left",right:"wysiwyg-clear-right",both:"wysiwyg-clear-both",all:"wysiwyg-clear-both"};return function(a){return e[String(a).toLowerCase()]}}(),size_font:function(){var e={1:"wysiwyg-font-size-xx-small",2:"wysiwyg-font-size-small",3:"wysiwyg-font-size-medium",4:"wysiwyg-font-size-large",5:"wysiwyg-font-size-x-large",6:"wysiwyg-font-size-xx-large",7:"wysiwyg-font-size-xx-large","-":"wysiwyg-font-size-smaller","+":"wysiwyg-font-size-larger"};return function(a){return e[String(a).charAt(0)]}}()};return e}(),wysihtml5.dom.removeEmptyTextNodes=function(e){for(var a,t=wysihtml5.lang.array(e.childNodes).get(),n=t.length,o=0;n>o;o++)a=t[o],a.nodeType===wysihtml5.TEXT_NODE&&""===a.data&&a.parentNode.removeChild(a)},wysihtml5.dom.renameElement=function(e,a){for(var t,n=e.ownerDocument.createElement(a);t=e.firstChild;)n.appendChild(t);return wysihtml5.dom.copyAttributes(["align","className"]).from(e).to(n),e.parentNode.replaceChild(n,e),n},wysihtml5.dom.replaceWithChildNodes=function(e){if(e.parentNode){if(!e.firstChild)return e.parentNode.removeChild(e),void 0;for(var a=e.ownerDocument.createDocumentFragment();e.firstChild;)a.appendChild(e.firstChild);e.parentNode.replaceChild(a,e),e=a=null}},function(e){function a(a){return"block"===e.getStyle("display").from(a)}function t(e){return"BR"===e.nodeName}function n(e){var a=e.ownerDocument.createElement("br");e.appendChild(a)}function o(e,o){if(e.nodeName.match(/^(MENU|UL|OL)$/)){var i,r,s,d,l,c,m=e.ownerDocument,u=m.createDocumentFragment(),f=e.previousElementSibling||e.previousSibling;if(o)for(f&&!a(f)&&n(u);c=e.firstElementChild||e.firstChild;){for(r=c.lastChild;i=c.firstChild;)s=i===r,d=s&&!a(i)&&!t(i),u.appendChild(i),d&&n(u);c.parentNode.removeChild(c)}else for(;c=e.firstElementChild||e.firstChild;){if(c.querySelector&&c.querySelector("div, p, ul, ol, menu, blockquote, h1, h2, h3, h4, h5, h6"))for(;i=c.firstChild;)u.appendChild(i);else{for(l=m.createElement("p");i=c.firstChild;)l.appendChild(i);u.appendChild(l)}c.parentNode.removeChild(c)}e.parentNode.replaceChild(u,e)}}e.resolveList=o}(wysihtml5.dom),function(e){var a=document,t=["parent","top","opener","frameElement","frames","localStorage","globalStorage","sessionStorage","indexedDB"],n=["open","close","openDialog","showModalDialog","alert","confirm","prompt","openDatabase","postMessage","XMLHttpRequest","XDomainRequest"],o=["referrer","write","open","close"];e.dom.Sandbox=Base.extend({constructor:function(a,t){this.callback=a||e.EMPTY_FUNCTION,this.config=e.lang.object({}).merge(t).get(),this.iframe=this._createIframe()},insertInto:function(e){"string"==typeof e&&(e=a.getElementById(e)),e.appendChild(this.iframe)},getIframe:function(){return this.iframe},getWindow:function(){this._readyError()},getDocument:function(){this._readyError()},destroy:function(){var e=this.getIframe();e.parentNode.removeChild(e)},_readyError:function(){throw new Error("wysihtml5.Sandbox: Sandbox iframe isn't loaded yet")},_createIframe:function(){var t=this,n=a.createElement("iframe");return n.className="wysihtml5-sandbox",e.dom.setAttributes({security:"restricted",allowtransparency:"true",frameborder:0,width:0,height:0,marginwidth:0,marginheight:0}).on(n),e.browser.throwsMixedContentWarningWhenIframeSrcIsEmpty()&&(n.src="javascript:'<html></html>'"),n.onload=function(){n.onreadystatechange=n.onload=null,t._onLoadIframe(n)},n.onreadystatechange=function(){/loaded|complete/.test(n.readyState)&&(n.onreadystatechange=n.onload=null,t._onLoadIframe(n))},n},_onLoadIframe:function(i){if(e.dom.contains(a.documentElement,i)){var r=this,s=i.contentWindow,d=i.contentWindow.document,l=a.characterSet||a.charset||"utf-8",c=this._getHtml({charset:l,stylesheets:this.config.stylesheets});if(d.open("text/html","replace"),d.write(c),d.close(),this.getWindow=function(){return i.contentWindow},this.getDocument=function(){return i.contentWindow.document},s.onerror=function(e,a,t){throw new Error("wysihtml5.Sandbox: "+e,a,t)},!e.browser.supportsSandboxedIframes()){var m,u;for(m=0,u=t.length;u>m;m++)this._unset(s,t[m]);for(m=0,u=n.length;u>m;m++)this._unset(s,n[m],e.EMPTY_FUNCTION);for(m=0,u=o.length;u>m;m++)this._unset(d,o[m]);this._unset(d,"cookie","",!0)}this.loaded=!0,setTimeout(function(){r.callback(r)},0)}},_getHtml:function(a){var t,n=a.stylesheets,o="",i=0;if(n="string"==typeof n?[n]:n)for(t=n.length;t>i;i++)o+='<link rel="stylesheet" href="'+n[i]+'">';return a.stylesheets=o,e.lang.string('<!DOCTYPE html><html><head><meta charset="#{charset}">#{stylesheets}</head><body></body></html>').interpolate(a)},_unset:function(a,t,n,o){try{a[t]=n}catch(i){}try{a.__defineGetter__(t,function(){return n})}catch(i){}if(o)try{a.__defineSetter__(t,function(){})}catch(i){}if(!e.browser.crashesWhenDefineProperty(t))try{var r={get:function(){return n}};o&&(r.set=function(){}),Object.defineProperty(a,t,r)}catch(i){}}})}(wysihtml5),function(){var e={className:"class"};wysihtml5.dom.setAttributes=function(a){return{on:function(t){for(var n in a)t.setAttribute(e[n]||n,a[n])}}}}(),wysihtml5.dom.setStyles=function(e){return{on:function(a){var t=a.style;if("string"==typeof e)return t.cssText+=";"+e,void 0;for(var n in e)"float"===n?(t.cssFloat=e[n],t.styleFloat=e[n]):t[n]=e[n]}}},function(e){e.simulatePlaceholder=function(a,t,n){var o="placeholder",i=function(){t.hasPlaceholderSet()&&t.clear(),t.placeholderSet=!1,e.removeClass(t.element,o)},r=function(){t.isEmpty()&&(t.placeholderSet=!0,t.setValue(n),e.addClass(t.element,o))};a.on("set_placeholder",r).on("unset_placeholder",i).on("focus:composer",i).on("paste:composer",i).on("blur:composer",r),r()}}(wysihtml5.dom),function(e){var a=document.documentElement;"textContent"in a?(e.setTextContent=function(e,a){e.textContent=a},e.getTextContent=function(e){return e.textContent}):"innerText"in a?(e.setTextContent=function(e,a){e.innerText=a},e.getTextContent=function(e){return e.innerText}):(e.setTextContent=function(e,a){e.nodeValue=a},e.getTextContent=function(e){return e.nodeValue})}(wysihtml5.dom),wysihtml5.quirks.cleanPastedHTML=function(){function e(e,t,n){t=t||a,n=n||e.ownerDocument||document;var o,i,r,s,d,l="string"==typeof e,c=0;o=l?wysihtml5.dom.getAsDom(e,n):e;for(d in t)for(r=o.querySelectorAll(d),i=t[d],s=r.length;s>c;c++)i(r[c]);return r=e=t=null,l?o.innerHTML:o}var a={"a u":wysihtml5.dom.replaceWithChildNodes};return e}(),wysihtml5.quirks.ensureProperClearing=function(){var e=function(){var e=this;setTimeout(function(){var a=e.innerHTML.toLowerCase();("<p>&nbsp;</p>"==a||"<p>&nbsp;</p><p>&nbsp;</p>"==a)&&(e.innerHTML="")},0)};return function(a){wysihtml5.dom.observe(a.element,["cut","keydown"],e)}}(),function(e){var a="%7E";e.quirks.getCorrectInnerHTML=function(t){var n=t.innerHTML;if(-1===n.indexOf(a))return n;var o,i,r,s,d=t.querySelectorAll("[href*='~'], [src*='~']");for(s=0,r=d.length;r>s;s++)o=d[s].href||d[s].src,i=e.lang.string(o).replace("~").by(a),n=e.lang.string(n).replace(i).by(o);return n}}(wysihtml5),function(e){var a="wysihtml5-quirks-redraw";e.quirks.redraw=function(t){e.dom.addClass(t,a),e.dom.removeClass(t,a);try{var n=t.ownerDocument;
n.execCommand("italic",!1,null),n.execCommand("italic",!1,null)}catch(o){}}}(wysihtml5),function(e){function a(e){var a=0;if(e.parentNode)do a+=e.offsetTop||0,e=e.offsetParent;while(e);return a}var t=e.dom;e.Selection=Base.extend({constructor:function(e){window.rangy.init(),this.editor=e,this.composer=e.composer,this.doc=this.composer.doc},getBookmark:function(){var e=this.getRange();return e&&e.cloneRange()},setBookmark:function(e){e&&this.setSelection(e)},setBefore:function(e){var a=rangy.createRange(this.doc);return a.setStartBefore(e),a.setEndBefore(e),this.setSelection(a)},setAfter:function(e){var a=rangy.createRange(this.doc);return a.setStartAfter(e),a.setEndAfter(e),this.setSelection(a)},selectNode:function(a,n){var o=rangy.createRange(this.doc),i=a.nodeType===e.ELEMENT_NODE,r="canHaveHTML"in a?a.canHaveHTML:"IMG"!==a.nodeName,s=i?a.innerHTML:a.data,d=""===s||s===e.INVISIBLE_SPACE,l=t.getStyle("display").from(a),c="block"===l||"list-item"===l;if(d&&i&&r&&!n)try{a.innerHTML=e.INVISIBLE_SPACE}catch(m){}r?o.selectNodeContents(a):o.selectNode(a),r&&d&&i?o.collapse(c):r&&d&&(o.setStartAfter(a),o.setEndAfter(a)),this.setSelection(o)},getSelectedNode:function(e){var a,t;return e&&this.doc.selection&&"Control"===this.doc.selection.type&&(t=this.doc.selection.createRange(),t&&t.length)?t.item(0):(a=this.getSelection(this.doc),a.focusNode===a.anchorNode?a.focusNode:(t=this.getRange(this.doc),t?t.commonAncestorContainer:this.doc.body))},executeAndRestore:function(a,n){var o,i,r,s,d,l=this.doc.body,c=n&&l.scrollTop,m=n&&l.scrollLeft,u="_wysihtml5-temp-placeholder",f='<span class="'+u+'">'+e.INVISIBLE_SPACE+"</span>",h=this.getRange(this.doc);if(!h)return a(l,l),void 0;e.browser.hasInsertNodeIssue()?this.doc.execCommand("insertHTML",!1,f):(s=h.createContextualFragment(f),h.insertNode(s));try{a(h.startContainer,h.endContainer)}catch(p){setTimeout(function(){throw p},0)}o=this.doc.querySelector("."+u),o?(d=rangy.createRange(this.doc),r=o.nextSibling,e.browser.hasInsertNodeIssue()&&r&&"BR"===r.nodeName?(i=this.doc.createTextNode(e.INVISIBLE_SPACE),t.insert(i).after(o),d.setStartBefore(i),d.setEndBefore(i)):(d.selectNode(o),d.deleteContents()),this.setSelection(d)):l.focus(),n&&(l.scrollTop=c,l.scrollLeft=m);try{o.parentNode.removeChild(o)}catch(g){}},executeAndRestoreSimple:function(e){var a,t,n,o,i,r=this.getRange(),s=this.doc.body;if(!r)return e(s,s),void 0;o=r.getNodes([3]),t=o[0]||r.startContainer,n=o[o.length-1]||r.endContainer,i={collapsed:r.collapsed,startContainer:t,startOffset:t===r.startContainer?r.startOffset:0,endContainer:n,endOffset:n===r.endContainer?r.endOffset:n.length};try{e(r.startContainer,r.endContainer)}catch(d){setTimeout(function(){throw d},0)}a=rangy.createRange(this.doc);try{a.setStart(i.startContainer,i.startOffset)}catch(l){}try{a.setEnd(i.endContainer,i.endOffset)}catch(c){}try{this.setSelection(a)}catch(m){}},set:function(e,a){var t=rangy.createRange(this.doc);t.setStart(e,a||0),this.setSelection(t)},insertHTML:function(e){var a=rangy.createRange(this.doc),t=a.createContextualFragment(e),n=t.lastChild;this.insertNode(t),n&&this.setAfter(n)},insertNode:function(e){var a=this.getRange();a&&a.insertNode(e)},surround:function(e){var a=this.getRange();if(a)try{a.surroundContents(e),this.selectNode(e)}catch(t){e.appendChild(a.extractContents()),a.insertNode(e)}},scrollIntoView:function(){var t,n=this.doc,o=5,i=n.documentElement.scrollHeight>n.documentElement.offsetHeight,r=n._wysihtml5ScrollIntoViewElement=n._wysihtml5ScrollIntoViewElement||function(){var a=n.createElement("span");return a.innerHTML=e.INVISIBLE_SPACE,a}();i&&(this.insertNode(r),t=a(r),r.parentNode.removeChild(r),t>=n.body.scrollTop+n.documentElement.offsetHeight-o&&(n.body.scrollTop=t))},selectLine:function(){e.browser.supportsSelectionModify()?this._selectLine_W3C():this.doc.selection&&this._selectLine_MSIE()},_selectLine_W3C:function(){var e=this.doc.defaultView,a=e.getSelection();a.modify("extend","left","lineboundary"),a.modify("extend","right","lineboundary")},_selectLine_MSIE:function(){var e,a,t,n,o,i=this.doc.selection.createRange(),r=i.boundingTop,s=this.doc.body.scrollWidth;if(i.moveToPoint){for(0===r&&(t=this.doc.createElement("span"),this.insertNode(t),r=t.offsetTop,t.parentNode.removeChild(t)),r+=1,n=-10;s>n;n+=2)try{i.moveToPoint(n,r);break}catch(d){}for(e=r,a=this.doc.selection.createRange(),o=s;o>=0;o--)try{a.moveToPoint(o,e);break}catch(l){}i.setEndPoint("EndToEnd",a),i.select()}},getText:function(){var e=this.getSelection();return e?e.toString():""},getNodes:function(e,a){var t=this.getRange();return t?t.getNodes([e],a):[]},getRange:function(){var e=this.getSelection();return e&&e.rangeCount&&e.getRangeAt(0)},getSelection:function(){return rangy.getSelection(this.doc.defaultView||this.doc.parentWindow)},setSelection:function(e){var a=this.doc.defaultView||this.doc.parentWindow,t=rangy.getSelection(a);return t.setSingleRange(e)}})}(wysihtml5),function(e,a){function t(e,a,t){if(!e.className)return!1;var n=e.className.match(t)||[];return n[n.length-1]===a}function n(e,a,t){e.className?(o(e,t),e.className+=" "+a):e.className=a}function o(e,a){e.className&&(e.className=e.className.replace(a,""))}function i(e,a){return e.className.replace(f," ")==a.className.replace(f," ")}function r(e){for(var a=e.parentNode;e.firstChild;)a.insertBefore(e.firstChild,e);a.removeChild(e)}function s(e,a){if(e.attributes.length!=a.attributes.length)return!1;for(var t,n,o,i=0,r=e.attributes.length;r>i;++i)if(t=e.attributes[i],o=t.name,"class"!=o){if(n=a.attributes.getNamedItem(o),t.specified!=n.specified)return!1;if(t.specified&&t.nodeValue!==n.nodeValue)return!1}return!0}function d(e,t){return a.dom.isCharacterDataNode(e)?0==t?!!e.previousSibling:t==e.length?!!e.nextSibling:!0:t>0&&t<e.childNodes.length}function l(e,t,n){var o;if(a.dom.isCharacterDataNode(t)&&(0==n?(n=a.dom.getNodeIndex(t),t=t.parentNode):n==t.length?(n=a.dom.getNodeIndex(t)+1,t=t.parentNode):o=a.dom.splitDataNode(t,n)),!o){o=t.cloneNode(!1),o.id&&o.removeAttribute("id");for(var i;i=t.childNodes[n];)o.appendChild(i);a.dom.insertAfter(o,t)}return t==e?o:l(e,o.parentNode,a.dom.getNodeIndex(o))}function c(a){this.isElementMerge=a.nodeType==e.ELEMENT_NODE,this.firstTextNode=this.isElementMerge?a.lastChild:a,this.textNodes=[this.firstTextNode]}function m(e,a,t,n,o){this.tagNames=e||[u],this.cssClass=a||"",this.similarClassRegExp=t,this.normalize=n,this.attrs=o||[],this.applyToAnyTagName=!1}var u="span",f=/\s+/g;c.prototype={doMerge:function(){for(var e,a,t,n=[],o=0,i=this.textNodes.length;i>o;++o)e=this.textNodes[o],a=e.parentNode,n[o]=e.data,o&&(a.removeChild(e),a.hasChildNodes()||a.parentNode.removeChild(a));return this.firstTextNode.data=t=n.join(""),t},getLength:function(){for(var e=this.textNodes.length,a=0;e--;)a+=this.textNodes[e].length;return a},toString:function(){for(var e=[],a=0,t=this.textNodes.length;t>a;++a)e[a]="'"+this.textNodes[a].data+"'";return"[Merge("+e.join(",")+")]"}},m.prototype={getAncestorWithClass:function(n){for(var o;n;){if(o=this.cssClass?t(n,this.cssClass,this.similarClassRegExp):!0,n.nodeType==e.ELEMENT_NODE&&a.dom.arrayContains(this.tagNames,n.tagName.toLowerCase())&&o)return n;n=n.parentNode}return!1},postApply:function(e,a){for(var t,n,o,i=e[0],r=e[e.length-1],s=[],d=i,l=r,m=0,u=r.length,f=0,h=e.length;h>f;++f)n=e[f],o=this.getAdjacentMergeableTextNode(n.parentNode,!1),o?(t||(t=new c(o),s.push(t)),t.textNodes.push(n),n===i&&(d=t.firstTextNode,m=d.length),n===r&&(l=t.firstTextNode,u=t.getLength())):t=null;var p=this.getAdjacentMergeableTextNode(r.parentNode,!0);if(p&&(t||(t=new c(r),s.push(t)),t.textNodes.push(p)),s.length){for(f=0,h=s.length;h>f;++f)s[f].doMerge();a.setStart(d,m),a.setEnd(l,u)}},getAdjacentMergeableTextNode:function(a,t){var n,o=a.nodeType==e.TEXT_NODE,i=o?a.parentNode:a,r=t?"nextSibling":"previousSibling";if(o){if(n=a[r],n&&n.nodeType==e.TEXT_NODE)return n}else if(n=i[r],n&&this.areElementsMergeable(a,n))return n[t?"firstChild":"lastChild"];return null},areElementsMergeable:function(e,t){return a.dom.arrayContains(this.tagNames,(e.tagName||"").toLowerCase())&&a.dom.arrayContains(this.tagNames,(t.tagName||"").toLowerCase())&&i(e,t)&&s(e,t)},createContainer:function(e){var a=e.createElement(this.tagNames[0]);if(this.cssClass&&(a.className=this.cssClass),this.attrs)for(var t=0;t<this.attrs.length;t++)a.setAttribute(this.attrs[t].name,this.attrs[t].value);return a},applyToTextNode:function(e){var t=e.parentNode;if(1==t.childNodes.length&&a.dom.arrayContains(this.tagNames,t.tagName.toLowerCase())){if(this.cssClass&&n(t,this.cssClass,this.similarClassRegExp),this.attrs)for(var o=0;o<this.attrs.length;o++)t.removeAttribute(this.attrs[o].name),t.setAttribute(this.attrs[o].name,this.attrs[o].value)}else{var i=this.createContainer(a.dom.getDocument(e));if("div"===this.tagNames[0]&&e.nextSibling){var r=e.nextSibling;1===r.nodeType&&"br"===r.nodeName.toLowerCase()&&e.parentNode.removeChild(r)}e.parentNode.insertBefore(i,e),i.appendChild(e)}},isRemovable:function(t){return a.dom.arrayContains(this.tagNames,t.tagName.toLowerCase())&&e.lang.string(t.className).trim()==this.cssClass},undoToTextNode:function(e,a,t){if(!a.containsNode(t)){var n=a.cloneRange();n.selectNode(t),n.isPointInRange(a.endContainer,a.endOffset)&&d(a.endContainer,a.endOffset)&&(l(t,a.endContainer,a.endOffset),a.setEndAfter(t)),n.isPointInRange(a.startContainer,a.startOffset)&&d(a.startContainer,a.startOffset)&&(t=l(t,a.startContainer,a.startOffset))}this.similarClassRegExp&&o(t,this.similarClassRegExp),this.isRemovable(t)&&r(t)},applyToRange:function(a){var t=a.getNodes([e.TEXT_NODE]);if(!t.length)try{var n=this.createContainer(a.endContainer.ownerDocument);return a.surroundContents(n),this.selectNode(a,n),void 0}catch(o){}if(a.splitBoundaries(),t=a.getNodes([e.TEXT_NODE]),t.length){for(var i,r=0,s=t.length;s>r;++r)i=t[r],this.getAncestorWithClass(i)||this.applyToTextNode(i);a.setStart(t[0],0),i=t[t.length-1],a.setEnd(i,i.length),this.normalize&&this.postApply(t,a)}},undoToRange:function(a){var t,n,o=a.getNodes([e.TEXT_NODE]);if(o.length)a.splitBoundaries(),o=a.getNodes([e.TEXT_NODE]);else{var i=a.endContainer.ownerDocument,r=i.createTextNode(e.INVISIBLE_SPACE);a.insertNode(r),a.selectNode(r),o=[r]}for(var s=0,d=o.length;d>s;++s)t=o[s],n=this.getAncestorWithClass(t),n&&this.undoToTextNode(t,a,n);1==d?this.selectNode(a,o[0]):(a.setStart(o[0],0),t=o[o.length-1],a.setEnd(t,t.length),this.normalize&&this.postApply(o,a))},selectNode:function(a,t){var n=t.nodeType===e.ELEMENT_NODE,o="canHaveHTML"in t?t.canHaveHTML:!0,i=n?t.innerHTML:t.data,r=""===i||i===e.INVISIBLE_SPACE;if(r&&n&&o)try{t.innerHTML=e.INVISIBLE_SPACE}catch(s){}a.selectNodeContents(t),r&&n?a.collapse(!1):r&&(a.setStartAfter(t),a.setEndAfter(t))},getTextSelectedByRange:function(e,a){var t=a.cloneRange();t.selectNodeContents(e);var n=t.intersection(a),o=n?n.toString():"";return t.detach(),o},isAppliedToRange:function(a){var t,n=[],o=a.getNodes([e.TEXT_NODE]);if(!o.length)return t=this.getAncestorWithClass(a.startContainer),t?[t]:!1;for(var i,r=0,s=o.length;s>r;++r){if(i=this.getTextSelectedByRange(o[r],a),t=this.getAncestorWithClass(o[r]),""!=i&&!t)return!1;n.push(t)}return n},toggleRange:function(e){this.isAppliedToRange(e)?this.undoToRange(e):this.applyToRange(e)}},e.selection.HTMLApplier=m}(wysihtml5,rangy),wysihtml5.Commands=Base.extend({constructor:function(e){this.editor=e,this.composer=e.composer,this.doc=this.composer.doc},support:function(e){return wysihtml5.browser.supportsCommand(this.doc,e)},exec:function(e,a){var t=wysihtml5.commands[e],n=wysihtml5.lang.array(arguments).get(),o=t&&t.exec,i=null;if(this.editor.fire("beforecommand:composer"),o)n.unshift(this.composer),i=o.apply(t,n);else try{i=this.doc.execCommand(e,!1,a)}catch(r){}return this.editor.fire("aftercommand:composer"),i},state:function(e){var a=wysihtml5.commands[e],t=wysihtml5.lang.array(arguments).get(),n=a&&a.state;if(n)return t.unshift(this.composer),n.apply(a,t);try{return this.doc.queryCommandState(e)}catch(o){return!1}}}),function(e){var a=/(align-(left|center|right)|justify)/g;e.commands.alignment={exec:function(t,n,o){return"justify"===o?e.commands.formatInline.exec(t,n,"div","justify",a):e.commands.formatInline.exec(t,n,"div","align-"+o,a)},state:function(t,n,o){return"justify"===o?e.commands.formatInline.state(t,n,"div","justify",a):e.commands.formatInline.state(t,n,"div","align-"+o,a)}}}(wysihtml5),function(e){var a=/wysiwyg-background-color-[0-9\-]+/g;e.commands.backgroundColor={exec:function(e,t,n,o){var i="wysiwyg-background-color-"+n.r+"-"+n.g+"-"+n.b+"-"+n.a.toString().replace(".","-"),r=document.createElement("style"),s=editor.composer.doc.body,d=s.classList;r.type="text/css",r.innerHTML="."+i+" { background-color: rgba("+n.r+", "+n.g+", "+n.b+", "+n.a+") !important; }",e.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(r);for(var l=0;l<d.length;l++)d[l].match(a)&&s.classList.remove(d[l]);for(l=0;l<o.length;l++)s.setAttribute(o[l].name,o[l].value);s.classList.add(i)},state:function(){}}}(wysihtml5),wysihtml5.commands.bold={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"b")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"b")}},function(e){var a=/wysiwyg-background-color-[0-9\-]+/g;e.commands.clear={exec:function(e){var t=e.doc.body,n=t.classList;t.innerHTML="";for(var o=0;o<n.length;o++)n[o].match(a)&&t.classList.remove(n[o])},state:function(){}}}(wysihtml5),function(e){function a(e,a){for(var t,n,o,r=a.length,s=0;r>s;s++)t=a[s],n=i.getParentElement(t,{nodeName:"code"}),o=i.getTextContent(t),o.match(i.autoLink.URL_REG_EXP)&&!n?n=i.renameElement(t,"code"):i.replaceWithChildNodes(t)}function t(a,t){var r,s,d,l,c,m,u,f,h,p=a.doc,g="_wysihtml5-temp-"+ +new Date,b=/non-matching-class/g,v=0;for(e.commands.formatInline.exec(a,n,o,g,b),s=p.querySelectorAll(o+"."+g),r=s.length;r>v;v++){d=s[v],d.removeAttribute("class");for(h in t)d.setAttribute(h,t[h])}m=d,1===r&&(u=i.getTextContent(d),l=!!d.querySelector("*"),c=""===u||u===e.INVISIBLE_SPACE,!l&&c&&(i.setTextContent(d,t.text||d.href),f=p.createTextNode(" "),a.selection.setAfter(d),i.insert(f).after(d),m=f)),a.selection.setAfter(m)}var n,o="A",i=e.dom;e.commands.createLink={exec:function(e,n,o){var i=this.state(e,n);i?e.selection.executeAndRestore(function(){a(e,i)}):(o="object"==typeof o?o:{href:o},t(e,o))},state:function(a,t){return e.commands.formatInline.state(a,t,"A")}}}(wysihtml5),function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.customFont={exec:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { font-family: '"+o+"', serif; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),function(e){var a=/wysiwyg-font-size-[0-9a-z\-]+/g;e.commands.fontSize={exec:function(t,n,o){return e.commands.formatInline.exec(t,n,"span","wysiwyg-font-size-"+o,a)},state:function(t,n,o){return e.commands.formatInline.state(t,n,"span","wysiwyg-font-size-"+o,a)}}}(wysihtml5),function(e){var a=/wysiwyg-color-[0-9a-z]+/g;e.commands.foreColor={exec:function(t,n,o){return e.commands.formatInline.exec(t,n,"span","wysiwyg-color-"+o,a)},state:function(t,n,o){return e.commands.formatInline.state(t,n,"span","wysiwyg-color-"+o,a)}}}(wysihtml5),function(e){function a(e,a,n){e.className?(t(e,n),e.className+=" "+a):e.className=a}function t(e,a){e.className=e.className.replace(a,"")}function n(a){return a.nodeType===e.TEXT_NODE&&!e.lang.string(a.data).trim()}function o(e){for(var a=e.previousSibling;a&&n(a);)a=a.previousSibling;return a}function i(e){for(var a=e.nextSibling;a&&n(a);)a=a.nextSibling;return a}function r(e){var a=e.ownerDocument,t=i(e),n=o(e);t&&!c(t)&&e.parentNode.insertBefore(a.createElement("br"),t),n&&!c(n)&&e.parentNode.insertBefore(a.createElement("br"),e)}function s(e){var a=i(e),t=o(e);a&&l(a)&&a.parentNode.removeChild(a),t&&l(t)&&t.parentNode.removeChild(t)}function d(e){var a=e.lastChild;a&&l(a)&&a.parentNode.removeChild(a)}function l(e){return"BR"===e.nodeName}function c(e){return l(e)?!0:"block"===h.getStyle("display").from(e)?!0:!1}function m(a,t,n,o){if(o)var i=h.observe(a,"DOMNodeInserted",function(a){var t,n=a.target;n.nodeType===e.ELEMENT_NODE&&(t=h.getStyle("display").from(n),"inline"!==t.substr(0,6)&&(n.className+=" "+o))});a.execCommand(t,!1,n),i&&i.stop()}function u(a,t){a.selection.selectLine(),a.selection.surround(t),s(t),d(t),a.selection.selectNode(t,e.browser.displaysCaretInEmptyContentEditableCorrectly())}function f(a){return!!e.lang.string(a.className).trim()}var h=e.dom,p=["H1","H2","H3","H4","H5","H6","P","BLOCKQUOTE","DIV"];e.commands.formatBlock={exec:function(n,o,i,s,d){var l,c=n.doc,g=this.state(n,o,i,s,d),b=n.config.useLineBreaks,v=b?"DIV":"P";return i="string"==typeof i?i.toUpperCase():i,g?(n.selection.executeAndRestoreSimple(function(){d&&t(g,d);var e=f(g);e||!b&&"P"!==i?h.renameElement(g,"P"===i?"DIV":v):(r(g),h.replaceWithChildNodes(g))}),void 0):(null===i||e.lang.array(p).contains(i))&&(l=n.selection.getSelectedNode(),g=h.getParentElement(l,{nodeName:p}))?(n.selection.executeAndRestore(function(){i&&(g=h.renameElement(g,i)),s&&a(g,s,d)}),void 0):n.commands.support(o)?(m(c,o,i||v,s),void 0):(g=c.createElement(i||v),s&&(g.className=s),u(n,g),void 0)},state:function(e,a,t,n,o){t="string"==typeof t?t.toUpperCase():t;var i=e.selection.getSelectedNode();return h.getParentElement(i,{nodeName:t,className:n,classRegExp:o})}}}(wysihtml5),function(e){function a(e){var a=n[e];return a?[e.toLowerCase(),a.toLowerCase()]:[e.toLowerCase()]}function t(t,n,i,r){var s=t+":"+n;return o[s]||(o[s]=new e.selection.HTMLApplier(a(t),n,i,!0,r)),o[s]}var n={strong:"b",em:"i",b:"strong",i:"em"},o={};e.commands.formatInline={exec:function(e,a,n,o,i,r){var s=e.selection.getRange();return s?(t(n,o,i,r).toggleRange(s),e.selection.setSelection(s),void 0):!1},state:function(a,o,i,r,s,d){var l,c=a.doc,m=n[i]||i;return e.dom.hasElementWithTagName(c,i)||e.dom.hasElementWithTagName(c,m)?r&&!e.dom.hasElementWithClassName(c,r)?!1:(l=a.selection.getRange(),l?t(i,r,s,d).isAppliedToRange(l):!1):!1}}}(wysihtml5),function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.googleFont={exec:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { font-family: '"+o+"', serif; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),function(e){var a=/wysiwyg-highlight-color-[0-9\-]+/g;e.commands.highlightColor={exec:function(t,n,o,i){var r="wysiwyg-highlight-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-"),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { background-color: rgba("+o.r+", "+o.g+", "+o.b+", "+o.a+"); }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-highlight-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-");return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),wysihtml5.commands.insertHTML={exec:function(e,a,t){e.commands.support(a)?e.doc.execCommand(a,!1,t):e.selection.insertHTML(t)},state:function(){return!1}},function(e){var a="IMG";e.commands.insertImage={exec:function(t,n,o){o="object"==typeof o?o:{src:o};var i,r,s=t.doc,d=this.state(t);if(d)return t.selection.setBefore(d),r=d.parentNode,r.removeChild(d),e.dom.removeEmptyTextNodes(r),"A"!==r.nodeName||r.firstChild||(t.selection.setAfter(r),r.parentNode.removeChild(r)),e.quirks.redraw(t.element),void 0;d=s.createElement(a);for(var l in o)d.setAttribute("className"===l?"class":l,o[l]);t.selection.insertNode(d),e.browser.hasProblemsSettingCaretAfterImg()?(i=s.createTextNode(e.INVISIBLE_SPACE),t.selection.insertNode(i),t.selection.setAfter(i)):t.selection.setAfter(d)},state:function(t){var n,o,i,r=t.doc;return e.dom.hasElementWithTagName(r,a)?(n=t.selection.getSelectedNode())?n.nodeName===a?n:n.nodeType!==e.ELEMENT_NODE?!1:(o=t.selection.getText(),(o=e.lang.string(o).trim())?!1:(i=t.selection.getNodes(e.ELEMENT_NODE,function(e){return"IMG"===e.nodeName}),1!==i.length?!1:i[0])):!1:!1}}}(wysihtml5),function(e){var a="<br>"+(e.browser.needsSpaceAfterLineBreak()?" ":"");e.commands.insertLineBreak={exec:function(t,n){t.commands.support(n)?(t.doc.execCommand(n,!1,null),e.browser.autoScrollsToCaret()||t.selection.scrollIntoView()):t.commands.exec("insertHTML",a)},state:function(){return!1}}}(wysihtml5),wysihtml5.commands.insertOrderedList={exec:function(e,a){var t,n,o=e.doc,i=e.selection.getSelectedNode(),r=wysihtml5.dom.getParentElement(i,{nodeName:"OL"}),s=wysihtml5.dom.getParentElement(i,{nodeName:"UL"}),d="_wysihtml5-temp-"+(new Date).getTime();return r||s||!e.commands.support(a)?(r?e.selection.executeAndRestore(function(){wysihtml5.dom.resolveList(r,e.config.useLineBreaks)}):s?e.selection.executeAndRestore(function(){wysihtml5.dom.renameElement(s,"ol")}):(e.commands.exec("formatBlock","div",d),n=o.querySelector("."+d),t=""===n.innerHTML||n.innerHTML===wysihtml5.INVISIBLE_SPACE||"<br>"===n.innerHTML,e.selection.executeAndRestore(function(){r=wysihtml5.dom.convertToList(n,"ol")}),t&&e.selection.selectNode(r.querySelector("li"),!0)),void 0):(o.execCommand(a,!1,null),void 0)},state:function(e){var a=e.selection.getSelectedNode();return wysihtml5.dom.getParentElement(a,{nodeName:"OL"})}},wysihtml5.commands.insertUnorderedList={exec:function(e,a){var t,n,o=e.doc,i=e.selection.getSelectedNode(),r=wysihtml5.dom.getParentElement(i,{nodeName:"UL"}),s=wysihtml5.dom.getParentElement(i,{nodeName:"OL"}),d="_wysihtml5-temp-"+(new Date).getTime();return r||s||!e.commands.support(a)?(r?e.selection.executeAndRestore(function(){wysihtml5.dom.resolveList(r,e.config.useLineBreaks)}):s?e.selection.executeAndRestore(function(){wysihtml5.dom.renameElement(s,"ul")}):(e.commands.exec("formatBlock","div",d),n=o.querySelector("."+d),t=""===n.innerHTML||n.innerHTML===wysihtml5.INVISIBLE_SPACE||"<br>"===n.innerHTML,e.selection.executeAndRestore(function(){r=wysihtml5.dom.convertToList(n,"ul")}),t&&e.selection.selectNode(r.querySelector("li"),!0)),void 0):(o.execCommand(a,!1,null),void 0)},state:function(e){var a=e.selection.getSelectedNode();return wysihtml5.dom.getParentElement(a,{nodeName:"UL"})}},wysihtml5.commands.italic={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"i")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"i")}},function(e){var a="wysiwyg-text-align-center",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyCenter={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-left",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyLeft={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-right",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyRight={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-justify",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyFull={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a=/wysiwyg-line-height-[0-9\-]+/g;e.commands.lineHeight={exec:function(t,n,o,i){return e.commands.formatInline.exec(t,n,"span","wysiwyg-line-height-"+o,a,i)},state:function(t,n,o,i){return e.commands.formatInline.state(t,n,"span","wysiwyg-line-height-"+o,a,i)}}}(wysihtml5),wysihtml5.commands.redo={exec:function(e){return e.undoManager.redo()},state:function(){return!1}},function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.standardFont={exec:function(t,n,o,i,r){var s="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),d=document.createElement("style");return d.type="text/css",d.innerHTML="."+s+" { font-family: "+i+"; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(d),e.commands.formatInline.exec(t,n,"span",s,a,r)},state:function(t,n,o,i,r){var s="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",s,a,r)}}}(wysihtml5),function(e){var a=/wysiwyg-text-color-[0-9\-]+/g;e.commands.textColor={exec:function(t,n,o,i){var r="wysiwyg-text-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-"),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { color: rgba("+o.r+", "+o.g+", "+o.b+", "+o.a+"); }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-text-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-");return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),wysihtml5.commands.underline={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"u")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"u")}},wysihtml5.commands.undo={exec:function(e){return e.undoManager.undo()},state:function(){return!1}},function(e){function a(e){for(var a;a=e.querySelector("._wysihtml5-temp");)a.parentNode.removeChild(a)}var t=90,n=89,o=8,i=46,r=25,s="data-wysihtml5-selection-node",d="data-wysihtml5-selection-offset",l='<span id="_wysihtml5-undo" class="_wysihtml5-temp">'+e.INVISIBLE_SPACE+"</span>",c='<span id="_wysihtml5-redo" class="_wysihtml5-temp">'+e.INVISIBLE_SPACE+"</span>",m=e.dom;e.UndoManager=e.lang.Dispatcher.extend({constructor:function(e){this.editor=e,this.composer=e.composer,this.element=this.composer.element,this.position=0,this.historyStr=[],this.historyDom=[],this.transact(),this._observe()},_observe:function(){var r,s=this,d=this.composer.sandbox.getDocument();if(m.observe(this.element,"keydown",function(e){if(!e.altKey&&(e.ctrlKey||e.metaKey)){var a=e.keyCode,o=a===t&&!e.shiftKey,i=a===t&&e.shiftKey||a===n;o?(s.undo(),e.preventDefault()):i&&(s.redo(),e.preventDefault())}}),m.observe(this.element,"keydown",function(e){var a=e.keyCode;a!==r&&(r=a,(a===o||a===i)&&s.transact())}),e.browser.hasUndoInContextMenu()){var u,f,h=function(){a(d),clearInterval(u)};m.observe(this.element,"contextmenu",function(){h(),s.composer.selection.executeAndRestoreSimple(function(){s.element.lastChild&&s.composer.selection.setAfter(s.element.lastChild),d.execCommand("insertHTML",!1,l),d.execCommand("insertHTML",!1,c),d.execCommand("undo",!1,null)}),u=setInterval(function(){d.getElementById("_wysihtml5-redo")?(h(),s.redo()):d.getElementById("_wysihtml5-undo")||(h(),s.undo())},400),f||(f=!0,m.observe(document,"mousedown",h),m.observe(d,["mousedown","paste","cut","copy"],h))})}this.editor.on("newword:composer",function(){s.transact()}).on("beforecommand:composer",function(){s.transact()})},transact:function(){var a=this.historyStr[this.position-1],t=this.composer.getValue();if(t!==a){var n=this.historyStr.length=this.historyDom.length=this.position;n>r&&(this.historyStr.shift(),this.historyDom.shift(),this.position--),this.position++;var o,i,l=this.composer.selection.getRange(),c=l.startContainer||this.element,m=l.startOffset||0;c.nodeType===e.ELEMENT_NODE?o=c:(o=c.parentNode,i=this.getChildNodeIndex(o,c)),o.setAttribute(d,m),"undefined"!=typeof i&&o.setAttribute(s,i);var u=this.element.cloneNode(!!t);this.historyDom.push(u),this.historyStr.push(t),o.removeAttribute(d),o.removeAttribute(s)}},undo:function(){this.transact(),this.undoPossible()&&(this.set(this.historyDom[--this.position-1]),this.editor.fire("undo:composer"))},redo:function(){this.redoPossible()&&(this.set(this.historyDom[++this.position-1]),this.editor.fire("redo:composer"))},undoPossible:function(){return this.position>1},redoPossible:function(){return this.position<this.historyStr.length},set:function(e){this.element.innerHTML="";for(var a=0,t=e.childNodes,n=e.childNodes.length;n>a;a++)this.element.appendChild(t[a].cloneNode(!0));var o,i,r;e.hasAttribute(d)?(o=e.getAttribute(d),r=e.getAttribute(s),i=this.element):(i=this.element.querySelector("["+d+"]")||this.element,o=i.getAttribute(d),r=i.getAttribute(s),i.removeAttribute(d),i.removeAttribute(s)),null!==r&&(i=this.getChildNodeByIndex(i,+r)),this.composer.selection.set(i,o)},getChildNodeIndex:function(e,a){for(var t=0,n=e.childNodes,o=n.length;o>t;t++)if(n[t]===a)return t},getChildNodeByIndex:function(e,a){return e.childNodes[a]}})}(wysihtml5),wysihtml5.views.View=Base.extend({constructor:function(e,a,t){this.parent=e,this.element=a,this.config=t,this._observeViewChange()},_observeViewChange:function(){var e=this;this.parent.on("beforeload",function(){e.parent.on("change_view",function(a){a===e.name?(e.parent.currentView=e,e.show(),setTimeout(function(){e.focus()},0)):e.hide()})})},focus:function(){if(this.element.ownerDocument.querySelector(":focus")!==this.element)try{this.element.focus()}catch(e){}},hide:function(){this.element.style.display="none"},show:function(){this.element.style.display=""},disable:function(){this.element.setAttribute("disabled","disabled")},enable:function(){this.element.removeAttribute("disabled")}}),function(e){var a=e.dom,t=e.browser;e.views.Composer=e.views.View.extend({name:"composer",CARET_HACK:"<br>",constructor:function(e,a,t){this.base(e,a,t),this.textarea=this.parent.textarea,this._initSandbox()},clear:function(){this.element.innerHTML=t.displaysCaretInEmptyContentEditableCorrectly()?"":this.CARET_HACK},getValue:function(a){var t=this.isEmpty()?"":e.quirks.getCorrectInnerHTML(this.element);return a&&(t=this.parent.parse(t)),t},setValue:function(e,a){a&&(e=this.parent.parse(e));try{this.element.innerHTML=e}catch(t){this.element.innerText=e}},show:function(){this.iframe.style.display=this._displayStyle||"",this.textarea.element.disabled||(this.disable(),this.enable())},hide:function(){this._displayStyle=a.getStyle("display").from(this.iframe),"none"===this._displayStyle&&(this._displayStyle=null),this.iframe.style.display="none"},disable:function(){this.parent.fire("disable:composer"),this.element.removeAttribute("contentEditable")},enable:function(){this.parent.fire("enable:composer"),this.element.setAttribute("contentEditable","true")},focus:function(a){e.browser.doesAsyncFocus()&&this.hasPlaceholderSet()&&this.clear(),this.base();var t=this.element.lastChild;a&&t&&("BR"===t.nodeName?this.selection.setBefore(this.element.lastChild):this.selection.setAfter(this.element.lastChild))},getTextContent:function(){return a.getTextContent(this.element)},hasPlaceholderSet:function(){return this.getTextContent()==this.textarea.element.getAttribute("placeholder")&&this.placeholderSet},isEmpty:function(){var e=this.element.innerHTML.toLowerCase();return""===e||"<br>"===e||"<p></p>"===e||"<p><br></p>"===e||this.hasPlaceholderSet()},_initSandbox:function(){var e=this;this.sandbox=new a.Sandbox(function(){e._create()},{stylesheets:this.config.stylesheets}),this.iframe=this.sandbox.getIframe();var t=this.textarea.element;if(a.insert(this.iframe).after(t),t.form){var n=document.createElement("input");n.type="hidden",n.name="_wysihtml5_mode",n.value=1,a.insert(n).after(t)}},_create:function(){var n=this;this.doc=this.sandbox.getDocument(),this.element=this.doc.body,this.textarea=this.parent.textarea,this.element.innerHTML=this.textarea.getValue(!0),this.selection=new e.Selection(this.parent),this.commands=new e.Commands(this.parent),a.copyAttributes(["className","spellcheck","title","lang","dir","accessKey"]).from(this.textarea.element).to(this.element),a.addClass(this.element,this.config.composerClassName),this.config.style&&this.style(),this.observe();
var o=this.config.name;o&&(a.addClass(this.element,o),a.addClass(this.iframe,o)),this.enable(),this.textarea.element.disabled&&this.disable();var i="string"==typeof this.config.placeholder?this.config.placeholder:this.textarea.element.getAttribute("placeholder");i&&a.simulatePlaceholder(this.parent,this,i),this.commands.exec("styleWithCSS",!1),this._initAutoLinking(),this._initObjectResizing(),this._initUndoManager(),this._initLineBreaking(),!this.textarea.element.hasAttribute("autofocus")&&document.querySelector(":focus")!=this.textarea.element||t.isIos()||setTimeout(function(){n.focus(!0)},100),t.clearsContentEditableCorrectly()||e.quirks.ensureProperClearing(this),this.initSync&&this.config.sync&&this.initSync(),this.textarea.hide(),this.parent.fire("beforeload").fire("load")},_initAutoLinking:function(){var n=this,o=t.canDisableAutoLinking(),i=t.doesAutoLinkingInContentEditable();if(o&&this.commands.exec("autoUrlDetect",!1),this.config.autoLink){(!i||i&&o)&&(this.parent.on("newword:composer",function(){a.getTextContent(n.element).match(a.autoLink.URL_REG_EXP)&&n.selection.executeAndRestore(function(e,t){a.autoLink(t.parentNode)})}),a.observe(this.element,"blur",function(){a.autoLink(n.element)}));var r=this.sandbox.getDocument().getElementsByTagName("a"),s=a.autoLink.URL_REG_EXP,d=function(t){var n=e.lang.string(a.getTextContent(t)).trim();return"www."===n.substr(0,4)&&(n="http://"+n),n};a.observe(this.element,"keydown",function(e){if(r.length){var t,o=n.selection.getSelectedNode(e.target.ownerDocument),i=a.getParentElement(o,{nodeName:"A"},4);i&&(t=d(i),setTimeout(function(){var e=d(i);e!==t&&e.match(s)&&i.setAttribute("href",e)},0))}})}},_initObjectResizing:function(){if(this.commands.exec("enableObjectResizing",!0),t.supportsEvent("resizeend")){var n=["width","height"],o=n.length,i=this.element;a.observe(i,"resizeend",function(a){var t,r=a.target||a.srcElement,s=r.style,d=0;if("IMG"===r.nodeName){for(;o>d;d++)t=n[d],s[t]&&(r.setAttribute(t,parseInt(s[t],10)),s[t]="");e.quirks.redraw(i)}})}},_initUndoManager:function(){this.undoManager=new e.UndoManager(this.parent)},_initLineBreaking:function(){function n(e){var t=a.getParentElement(e,{nodeName:["P","DIV"]},2);t&&o.selection.executeAndRestore(function(){o.config.useLineBreaks?a.replaceWithChildNodes(t):"P"!==t.nodeName&&a.renameElement(t,"p")})}var o=this,i=["LI","P","H1","H2","H3","H4","H5","H6"],r=["UL","OL","MENU"];this.config.useLineBreaks||a.observe(this.element,["focus","keydown"],function(){if(o.isEmpty()){var e=o.doc.createElement("P");o.element.innerHTML="",o.element.appendChild(e),t.displaysCaretInEmptyContentEditableCorrectly()?o.selection.selectNode(e,!0):(e.innerHTML="<br>",o.selection.setBefore(e.firstChild))}}),t.createsNestedInvalidMarkupAfterPaste()&&a.observe(this.element,"paste",function(){var a=o.doc.createTextNode(e.INVISIBLE_SPACE);o.selection.insertNode(a)}),a.observe(this.doc,"keydown",function(t){var s=t.keyCode;if(!t.shiftKey&&(s===e.ENTER_KEY||s===e.BACKSPACE_KEY)){var d=a.getParentElement(o.selection.getSelectedNode(),{nodeName:i},4);return d?(setTimeout(function(){var t,i=o.selection.getSelectedNode();if("LI"===d.nodeName){if(!i)return;t=a.getParentElement(i,{nodeName:r},2),t||n(i)}s===e.ENTER_KEY&&d.nodeName.match(/^H[1-6]$/)&&n(i)},0),void 0):(o.config.useLineBreaks&&s===e.ENTER_KEY&&!e.browser.insertsLineBreaksOnReturn()&&(o.commands.exec("insertLineBreak"),t.preventDefault()),void 0)}})}})}(wysihtml5),function(e){var a=e.dom,t=document,n=window,o=t.createElement("div"),i=["background-color","color","cursor","font-family","font-size","font-style","font-variant","font-weight","line-height","letter-spacing","text-align","text-decoration","text-indent","text-rendering","word-break","word-wrap","word-spacing"],r=["background-color","border-collapse","border-bottom-color","border-bottom-style","border-bottom-width","border-left-color","border-left-style","border-left-width","border-right-color","border-right-style","border-right-width","border-top-color","border-top-style","border-top-width","clear","display","float","margin-bottom","margin-left","margin-right","margin-top","outline-color","outline-offset","outline-width","outline-style","padding-left","padding-right","padding-top","padding-bottom","position","top","left","right","bottom","z-index","vertical-align","text-align","-webkit-box-sizing","-moz-box-sizing","-ms-box-sizing","box-sizing","-webkit-box-shadow","-moz-box-shadow","-ms-box-shadow","box-shadow","-webkit-border-top-right-radius","-moz-border-radius-topright","border-top-right-radius","-webkit-border-bottom-right-radius","-moz-border-radius-bottomright","border-bottom-right-radius","-webkit-border-bottom-left-radius","-moz-border-radius-bottomleft","border-bottom-left-radius","-webkit-border-top-left-radius","-moz-border-radius-topleft","border-top-left-radius","width","height"],s=["html                 { height: 100%; }","body                 { height: 100%; padding: 1px 0 0 0; margin: -1px 0 0 0; }","body > p:first-child { margin-top: 0; }","._wysihtml5-temp     { display: none; }",e.browser.isGecko?"body.placeholder { color: graytext !important; }":"body.placeholder { color: #a9a9a9 !important; }","img:-moz-broken      { -moz-force-broken-image-icon: 1; height: 24px; width: 24px; }"],d=function(e){if(e.setActive)try{e.setActive()}catch(o){}else{var i=e.style,r=t.documentElement.scrollTop||t.body.scrollTop,s=t.documentElement.scrollLeft||t.body.scrollLeft,d={position:i.position,top:i.top,left:i.left,WebkitUserSelect:i.WebkitUserSelect};a.setStyles({position:"absolute",top:"-99999px",left:"-99999px",WebkitUserSelect:"none"}).on(e),e.focus(),a.setStyles(d).on(e),n.scrollTo&&n.scrollTo(s,r)}};e.views.Composer.prototype.style=function(){var n,l=this,c=t.querySelector(":focus"),m=this.textarea.element,u=m.hasAttribute("placeholder"),f=u&&m.getAttribute("placeholder"),h=m.style.display,p=m.disabled;this.focusStylesHost=o.cloneNode(!1),this.blurStylesHost=o.cloneNode(!1),this.disabledStylesHost=o.cloneNode(!1),u&&m.removeAttribute("placeholder"),m===c&&m.blur(),m.disabled=!1,m.style.display=n="none",(m.getAttribute("rows")&&"auto"===a.getStyle("height").from(m)||m.getAttribute("cols")&&"auto"===a.getStyle("width").from(m))&&(m.style.display=n=h),a.copyStyles(r).from(m).to(this.iframe).andTo(this.blurStylesHost),a.copyStyles(i).from(m).to(this.element).andTo(this.blurStylesHost),a.insertCSS(s).into(this.element.ownerDocument),m.disabled=!0,a.copyStyles(r).from(m).to(this.disabledStylesHost),a.copyStyles(i).from(m).to(this.disabledStylesHost),m.disabled=p,m.style.display=h,d(m),m.style.display=n,a.copyStyles(r).from(m).to(this.focusStylesHost),a.copyStyles(i).from(m).to(this.focusStylesHost),m.style.display=h,a.copyStyles(["display"]).from(m).to(this.iframe);var g=e.lang.array(r).without(["display"]);return c?c.focus():m.blur(),u&&m.setAttribute("placeholder",f),this.parent.on("focus:composer",function(){a.copyStyles(g).from(l.focusStylesHost).to(l.iframe),a.copyStyles(i).from(l.focusStylesHost).to(l.element)}),this.parent.on("blur:composer",function(){a.copyStyles(g).from(l.blurStylesHost).to(l.iframe),a.copyStyles(i).from(l.blurStylesHost).to(l.element)}),this.parent.observe("disable:composer",function(){a.copyStyles(g).from(l.disabledStylesHost).to(l.iframe),a.copyStyles(i).from(l.disabledStylesHost).to(l.element)}),this.parent.observe("enable:composer",function(){a.copyStyles(g).from(l.blurStylesHost).to(l.iframe),a.copyStyles(i).from(l.blurStylesHost).to(l.element)}),this}}(wysihtml5),function(e){var a=e.dom,t=e.browser,n={66:"bold",73:"italic",85:"underline"};e.views.Composer.prototype.observe=function(){var o=this,i=this.getValue(),r=this.sandbox.getIframe(),s=this.element,d=t.supportsEventsInIframeCorrectly()?s:this.sandbox.getWindow(),l=["drop","paste"];a.observe(r,"DOMNodeRemoved",function(){clearInterval(c),o.parent.fire("destroy:composer")});var c=setInterval(function(){a.contains(document.documentElement,r)||(clearInterval(c),o.parent.fire("destroy:composer"))},250);a.observe(d,"focus",function(){o.parent.fire("focus").fire("focus:composer"),setTimeout(function(){i=o.getValue()},0)}),a.observe(d,"blur",function(){i!==o.getValue()&&o.parent.fire("change").fire("change:composer"),o.parent.fire("blur").fire("blur:composer")}),a.observe(s,"dragenter",function(){o.parent.fire("unset_placeholder")}),a.observe(s,l,function(){setTimeout(function(){o.parent.fire("paste").fire("paste:composer")},0)}),a.observe(s,"keyup",function(a){var t=a.keyCode;(t===e.SPACE_KEY||t===e.ENTER_KEY)&&o.parent.fire("newword:composer")}),this.parent.on("paste:composer",function(){setTimeout(function(){o.parent.fire("newword:composer")},0)}),t.canSelectImagesInContentEditable()||a.observe(s,"mousedown",function(e){var a=e.target;"IMG"===a.nodeName&&(o.selection.selectNode(a),e.preventDefault())}),t.hasHistoryIssue()&&t.supportsSelectionModify()&&a.observe(s,"keydown",function(e){if(e.metaKey||e.ctrlKey){var a=e.keyCode,t=s.ownerDocument.defaultView,n=t.getSelection();(37===a||39===a)&&(37===a&&(n.modify("extend","left","lineboundary"),e.shiftKey||n.collapseToStart()),39===a&&(n.modify("extend","right","lineboundary"),e.shiftKey||n.collapseToEnd()),e.preventDefault())}}),a.observe(s,"keydown",function(e){var a=e.keyCode,t=n[a];(e.ctrlKey||e.metaKey)&&!e.altKey&&t&&(o.commands.exec(t),e.preventDefault())}),a.observe(s,"keydown",function(a){var t,n=o.selection.getSelectedNode(!0),i=a.keyCode;!n||"IMG"!==n.nodeName||i!==e.BACKSPACE_KEY&&i!==e.DELETE_KEY||(t=n.parentNode,t.removeChild(n),"A"!==t.nodeName||t.firstChild||t.parentNode.removeChild(t),setTimeout(function(){e.quirks.redraw(s)},0),a.preventDefault())}),t.hasIframeFocusIssue()&&(a.observe(this.iframe,"focus",function(){setTimeout(function(){o.doc.querySelector(":focus")!==o.element&&o.focus()},0)}),a.observe(this.element,"blur",function(){setTimeout(function(){o.selection.getSelection().removeAllRanges()},0)}));var m={IMG:"Image: ",A:"Link: "};a.observe(s,"mouseover",function(e){var a,t=e.target,n=t.nodeName;if("A"===n||"IMG"===n){var o=t.hasAttribute("title");o||(a=m[n]+(t.getAttribute("href")||t.getAttribute("src")),t.setAttribute("title",a))}})}}(wysihtml5),function(e){var a=400;e.views.Synchronizer=Base.extend({constructor:function(e,a,t){this.editor=e,this.textarea=a,this.composer=t,this._observe()},fromComposerToTextarea:function(a){this.textarea.setValue(e.lang.string(this.composer.getValue()).trim(),a)},fromTextareaToComposer:function(e){var a=this.textarea.getValue();a?this.composer.setValue(a,e):(this.composer.clear(),this.editor.fire("set_placeholder"))},sync:function(e){"textarea"===this.editor.currentView.name?this.fromTextareaToComposer(e):this.fromComposerToTextarea(e)},_observe:function(){var t,n=this,o=this.textarea.element.form,i=function(){t=setInterval(function(){n.fromComposerToTextarea()},a)},r=function(){clearInterval(t),t=null};i(),o&&(e.dom.observe(o,"submit",function(){n.sync(!0)}),e.dom.observe(o,"reset",function(){setTimeout(function(){n.fromTextareaToComposer()},0)})),this.editor.on("change_view",function(e){"composer"!==e||t?"textarea"===e&&(n.fromComposerToTextarea(!0),r()):(n.fromTextareaToComposer(!0),i())}),this.editor.on("destroy:composer",r)}})}(wysihtml5),wysihtml5.views.Textarea=wysihtml5.views.View.extend({name:"textarea",constructor:function(e,a,t){this.base(e,a,t),this._observe()},clear:function(){this.element.value=""},getValue:function(e){var a=this.isEmpty()?"":this.element.value;return e&&(a=this.parent.parse(a)),a},setValue:function(e,a){a&&(e=this.parent.parse(e)),this.element.value=e},hasPlaceholderSet:function(){var e=wysihtml5.browser.supportsPlaceholderAttributeOn(this.element),a=this.element.getAttribute("placeholder")||null,t=this.element.value,n=!t;return e&&n||t===a},isEmpty:function(){return!wysihtml5.lang.string(this.element.value).trim()||this.hasPlaceholderSet()},_observe:function(){var e=this.element,a=this.parent,t={focusin:"focus",focusout:"blur"},n=wysihtml5.browser.supportsEvent("focusin")?["focusin","focusout","change"]:["focus","blur","change"];a.on("beforeload",function(){wysihtml5.dom.observe(e,n,function(e){var n=t[e.type]||e.type;a.fire(n).fire(n+":textarea")}),wysihtml5.dom.observe(e,["paste","drop"],function(){setTimeout(function(){a.fire("paste").fire("paste:textarea")},0)})})}}),function(e){var a=e.dom,t="wysihtml5-command-dialog-opened",n="input, select, textarea",o="[data-wysihtml5-dialog-field]",i="data-wysihtml5-dialog-field";e.toolbar.Dialog=e.lang.Dispatcher.extend({constructor:function(e,a){this.link=e,this.container=a},_observe:function(){if(!this._observed){var o=this,i=function(e){var a=o._serialize();a==o.elementToChange?o.fire("edit",a):o.fire("save",a),o.hide(),e.preventDefault(),e.stopPropagation()};a.observe(o.link,"click",function(){a.hasClass(o.link,t)&&setTimeout(function(){o.hide()},0)}),a.observe(this.container,"keydown",function(a){var t=a.keyCode;t===e.ENTER_KEY&&i(a),t===e.ESCAPE_KEY&&(o.fire("cancel"),o.hide())}),a.delegate(this.container,"[data-wysihtml5-dialog-action=save]","click",i),a.delegate(this.container,"[data-wysihtml5-dialog-action=cancel]","click",function(e){o.fire("cancel"),o.hide(),e.preventDefault(),e.stopPropagation()});for(var r=this.container.querySelectorAll(n),s=0,d=r.length,l=function(){clearInterval(o.interval)};d>s;s++)a.observe(r[s],"change",l);this._observed=!0}},_serialize:function(){for(var e=this.elementToChange||{},a=this.container.querySelectorAll(o),t=a.length,n=0;t>n;n++)e[a[n].getAttribute(i)]=a[n].value;return e},_interpolate:function(e){for(var a,t,n,r=document.querySelector(":focus"),s=this.container.querySelectorAll(o),d=s.length,l=0;d>l;l++)a=s[l],a!==r&&(e&&"hidden"===a.type||(t=a.getAttribute(i),n=this.elementToChange?this.elementToChange[t]||"":a.defaultValue,a.value=n))},show:function(e){if(!a.hasClass(this.link,t)){var o=this,i=this.container.querySelector(n);if(this.elementToChange=e,this._observe(),this._interpolate(),e&&(this.interval=setInterval(function(){o._interpolate(!0)},500)),a.addClass(this.link,t),this.container.style.display="",this.fire("show"),i&&!e)try{i.focus()}catch(r){}}},hide:function(){clearInterval(this.interval),this.elementToChange=null,a.removeClass(this.link,t),this.container.style.display="none",this.fire("hide")}})}(wysihtml5),function(e){var a=e.dom,t={position:"relative"},n={left:0,margin:0,opacity:0,overflow:"hidden",padding:0,position:"absolute",top:0,zIndex:1},o={cursor:"inherit",fontSize:"50px",height:"50px",marginTop:"-25px",outline:0,padding:0,position:"absolute",right:"-4px",top:"50%"},i={"x-webkit-speech":"",speech:""};e.toolbar.Speech=function(r,s){var d=document.createElement("input");if(!e.browser.supportsSpeechApiOn(d))return s.style.display="none",void 0;var l=r.editor.textarea.element.getAttribute("lang");l&&(i.lang=l);var c=document.createElement("div");e.lang.object(n).merge({width:s.offsetWidth+"px",height:s.offsetHeight+"px"}),a.insert(d).into(c),a.insert(c).into(s),a.setStyles(o).on(d),a.setAttributes(i).on(d),a.setStyles(n).on(c),a.setStyles(t).on(s);var m="onwebkitspeechchange"in d?"webkitspeechchange":"speechchange";a.observe(d,m,function(){r.execCommand("insertText",d.value),d.value=""}),a.observe(d,"click",function(e){a.hasClass(s,"wysihtml5-command-disabled")&&e.preventDefault(),e.stopPropagation()})}}(wysihtml5),function(e){var a="wysihtml5-command-disabled",t="wysihtml5-commands-disabled",n="wysihtml5-command-active",o="wysihtml5-action-active",i=e.dom;e.toolbar.Toolbar=Base.extend({constructor:function(a,t){this.editor=a,this.container="string"==typeof t?document.getElementById(t):t,this.composer=a.composer,this._getLinks("command"),this._getLinks("action"),this._observe(),this.show();for(var n=this.container.querySelectorAll("[data-wysihtml5-command=insertSpeech]"),o=n.length,i=0;o>i;i++)new e.toolbar.Speech(this,n[i])},_getLinks:function(a){for(var t,n,o,i,r,s=this[a+"Links"]=e.lang.array(this.container.querySelectorAll("[data-wysihtml5-"+a+"]")).get(),d=s.length,l=0,c=this[a+"Mapping"]={};d>l;l++)t=s[l],o=t.getAttribute("data-wysihtml5-"+a),i=t.getAttribute("data-wysihtml5-"+a+"-value"),n=this.container.querySelector("[data-wysihtml5-"+a+"-group='"+o+"']"),r=this._getDialog(t,o),c[o+":"+i]={link:t,group:n,name:o,value:i,dialog:r,state:!1}},_getDialog:function(a,t){var n,o,i=this,r=this.container.querySelector("[data-wysihtml5-dialog='"+t+"']");return r&&(n=new e.toolbar.Dialog(a,r),n.on("show",function(){o=i.composer.selection.getBookmark(),i.editor.fire("show:dialog",{command:t,dialogContainer:r,commandLink:a})}),n.on("save",function(e){o&&i.composer.selection.setBookmark(o),i._execCommand(t,e),i.editor.fire("save:dialog",{command:t,dialogContainer:r,commandLink:a})}),n.on("cancel",function(){i.editor.focus(!1),i.editor.fire("cancel:dialog",{command:t,dialogContainer:r,commandLink:a})})),n},execCommand:function(e,a){if(!this.commandsDisabled){var t=this.commandMapping[e+":"+a];t&&t.dialog&&!t.state?t.dialog.show():this._execCommand(e,a)}},_execCommand:function(e,a){this.editor.focus(!1),this.composer.commands.exec(e,a),this._updateLinkStates()},execAction:function(e){var a=this.editor;"change_view"===e&&(a.currentView===a.textarea?a.fire("change_view","composer"):a.fire("change_view","textarea"))},_observe:function(){for(var e=this,a=this.editor,n=this.container,o=this.commandLinks.concat(this.actionLinks),r=o.length,s=0;r>s;s++)"A"===o[s].nodeName?i.setAttributes({href:"javascript:;",unselectable:"on"}).on(o[s]):i.setAttributes({unselectable:"on"}).on(o[s]);i.delegate(n,"[data-wysihtml5-command], [data-wysihtml5-action]","mousedown",function(e){e.preventDefault()}),i.delegate(n,"[data-wysihtml5-command]","click",function(a){var t=this,n=t.getAttribute("data-wysihtml5-command"),o=t.getAttribute("data-wysihtml5-command-value");e.execCommand(n,o),a.preventDefault()}),i.delegate(n,"[data-wysihtml5-action]","click",function(a){var t=this.getAttribute("data-wysihtml5-action");e.execAction(t),a.preventDefault()}),a.on("focus:composer",function(){e.bookmark=null,clearInterval(e.interval),e.interval=setInterval(function(){e._updateLinkStates()},500)}),a.on("blur:composer",function(){clearInterval(e.interval)}),a.on("destroy:composer",function(){clearInterval(e.interval)}),a.on("change_view",function(a){setTimeout(function(){e.commandsDisabled="composer"!==a,e._updateLinkStates(),e.commandsDisabled?i.addClass(n,t):i.removeClass(n,t)},0)})},_updateLinkStates:function(){var t,r,s,d,l=this.commandMapping,c=this.actionMapping;for(t in l)d=l[t],this.commandsDisabled?(r=!1,i.removeClass(d.link,n),d.group&&i.removeClass(d.group,n),d.dialog&&d.dialog.hide()):(r=this.composer.commands.state(d.name,d.value),e.lang.object(r).isArray()&&(r=1===r.length?r[0]:!0),i.removeClass(d.link,a),d.group&&i.removeClass(d.group,a)),d.state!==r&&(d.state=r,r?(i.addClass(d.link,n),d.group&&i.addClass(d.group,n),d.dialog&&("object"==typeof r?d.dialog.show(r):d.dialog.hide())):(i.removeClass(d.link,n),d.group&&i.removeClass(d.group,n),d.dialog&&d.dialog.hide()));for(t in c)s=c[t],"change_view"===s.name&&(s.state=this.editor.currentView===this.editor.textarea,s.state?i.addClass(s.link,o):i.removeClass(s.link,o))},show:function(){this.container.style.display=""},hide:function(){this.container.style.display="none"}})}(wysihtml5),function(e){var a,t={name:a,style:!0,toolbar:a,autoLink:!0,parserRules:{tags:{br:{},span:{},div:{},p:{}},classes:{}},parser:e.dom.parse,composerClassName:"wysihtml5-editor",bodyClassName:"wysihtml5-supported",useLineBreaks:!0,stylesheets:[],placeholderText:a,supportTouchDevices:!0,cleanUp:!0};e.Editor=e.lang.Dispatcher.extend({constructor:function(a,n){if(this.textareaElement="string"==typeof a?document.getElementById(a):a,this.config=e.lang.object({}).merge(t).merge(n).get(),this.textarea=new e.views.Textarea(this,this.textareaElement,this.config),this.currentView=this.textarea,this._isCompatible=e.browser.supported(),!this._isCompatible||!this.config.supportTouchDevices&&e.browser.isTouchDevice()){var o=this;return setTimeout(function(){o.fire("beforeload").fire("load")},0),void 0}e.dom.addClass(document.body,this.config.bodyClassName),this.composer=new e.views.Composer(this,this.textareaElement,this.config),this.currentView=this.composer,"function"==typeof this.config.parser&&this._initParser(),this.on("beforeload",function(){this.synchronizer=new e.views.Synchronizer(this,this.textarea,this.composer),this.config.toolbar&&(this.toolbar=new e.toolbar.Toolbar(this,this.config.toolbar))});try{console.log("Heya! This page is using wysihtml5 for rich text editing. Check out https://github.com/xing/wysihtml5")}catch(i){}},isCompatible:function(){return this._isCompatible},clear:function(){return this.currentView.clear(),this},getValue:function(e){return this.currentView.getValue(e)},setValue:function(e,a){return this.fire("unset_placeholder"),e?(this.currentView.setValue(e,a),this):this.clear()},focus:function(e){return this.currentView.focus(e),this},disable:function(){return this.currentView.disable(),this},enable:function(){return this.currentView.enable(),this},isEmpty:function(){return this.currentView.isEmpty()},hasPlaceholderSet:function(){return this.currentView.hasPlaceholderSet()},parse:function(a){var t=this.config.parser(a,this.config.parserRules,this.composer.sandbox.getDocument(),this.config.cleanUp);return"object"==typeof a&&e.quirks.redraw(a),t},_initParser:function(){this.on("paste:composer",function(){var a=!0,t=this;t.composer.selection.executeAndRestore(function(){e.quirks.cleanPastedHTML(t.composer.element),t.parse(t.composer.element)},a)})}})}(wysihtml5),!function(e,a){"use strict";var t={alignment:function(){return"<li><div class='alignment'></div></li>"},font:function(){return"<li><div class='font-picker'></div></li>"},"font-size":function(){return"<li><div class='font-size-picker'></div></li>"},"line-height":function(e){return"<li><div class='line-height btn-group'><button type='button' class='btn btn-default btn-sm dropdown-toggle'data-toggle='dropdown' data-wysihtml5-command-value='1'><i class='glyphicon glyphicon-text-height'></i><span class='caret'></span></button><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command-value='1' tabindex='-1'>"+e.line_height.single+"</a></li><li><a data-wysihtml5-command-value='1-15' tabindex='-1'>1.15</a></li><li><a data-wysihtml5-command-value='1-5' tabindex='-1'>1.5</a></li><li><a data-wysihtml5-command-value='2' tabindex='-1'>"+e.line_height.double+"</a></li></ul></div></li>"},"text-color":function(){return"<li><input class='text-color' type='color'></li>"},"highlight-color":function(){return"<li><input class='highlight-color' type='color'></li>"},"background-color":function(){return"<li><input class='background-color' type='color'></li>"},clear:function(){return"<li><a class='clear btn btn-sm btn-default' data-wysihtml5-command='clear' title='Clear' tabindex='-1'><span class='glyphicon glyphicon-file'></span></a></li>"},"font-styles":function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+t+" btn-default' data-toggle='dropdown' href='#'><i class='glyphicon glyphicon-font'></i>&nbsp;<span class='current-font'>"+e.font_styles.normal+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div' tabindex='-1'>"+e.font_styles.normal+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1' tabindex='-1'>"+e.font_styles.h1+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2' tabindex='-1'>"+e.font_styles.h2+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3' tabindex='-1'>"+e.font_styles.h3+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>"+e.font_styles.h4+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h5'>"+e.font_styles.h5+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h6'>"+e.font_styles.h6+"</a></li></ul></li>"},emphasis:function(){return"<li><div class='emphasis'><div></li>"},lists:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='btn-group'><a class='btn "+t+" btn-default' data-wysihtml5-command='insertUnorderedList' title='"+e.lists.unordered+"' tabindex='-1'><i class='glyphicon glyphicon-list'></i></a><a class='btn "+t+" btn-default' data-wysihtml5-command='insertOrderedList' title='"+e.lists.ordered+"' tabindex='-1'><i class='glyphicon glyphicon-th-list'></i></a><a class='btn "+t+" btn-default' data-wysihtml5-command='Outdent' title='"+e.lists.outdent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-right'></i></a><a class='btn -"+t+" btn-default' data-wysihtml5-command='Indent' title='"+e.lists.indent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-left'></i></a></div></li>"},link:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='bootstrap-wysihtml5-insert-link-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+e.link.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-link-url form-control'><label class='checkbox'> <input type='checkbox' class='bootstrap-wysihtml5-insert-link-target' checked>"+e.link.target+"</label></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+e.link.cancel+"</button><button href='#' class='btn btn-primary' data-dismiss='modal'>"+e.link.insert+"</button></div></div></div></div><a class='btn "+t+" btn-default' data-wysihtml5-command='createLink' title='"+e.link.insert+"' tabindex='-1'><i class='glyphicon glyphicon-share'></i></a></li>"},image:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='bootstrap-wysihtml5-insert-image-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+e.image.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-image-url form-control'></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+e.image.cancel+"</button><button class='btn btn-primary' data-dismiss='modal'>"+e.image.insert+"</button></div></div></div></div><a class='btn "+t+" btn-default' data-wysihtml5-command='insertImage' title='"+e.image.insert+"' tabindex='-1'><i class='glyphicon glyphicon-picture'></i></a></li>"},html:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='btn-group'><a class='btn "+t+" btn-default' data-wysihtml5-action='change_view' title='"+e.html.edit+"' tabindex='-1'><i class='glyphicon glyphicon-pencil'></i></a></div></li>"},color:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+t+" btn-default' data-toggle='dropdown' href='#' tabindex='-1'><span class='current-color'>"+e.colours.black+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu'><li><div class='wysihtml5-colors' data-wysihtml5-command-value='black'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='black'>"+e.colours.black+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='silver'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='silver'>"+e.colours.silver+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='gray'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='gray'>"+e.colours.gray+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='maroon'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='maroon'>"+e.colours.maroon+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='red'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='red'>"+e.colours.red+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='purple'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='purple'>"+e.colours.purple+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='green'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='green'>"+e.colours.green+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='olive'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='olive'>"+e.colours.olive+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='navy'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='navy'>"+e.colours.navy+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='blue'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='blue'>"+e.colours.blue+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='orange'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='orange'>"+e.colours.orange+"</a></li></ul></li>"}},n=function(e,a,n){return t[e](a,n)},o=function(a,n){this.el=a;var o=n||r;for(var i in o.customTemplates)t[i]=o.customTemplates[i];this.toolbar=this.createToolbar(a,o),this.editor=this.createEditor(n),window.editor=this.editor,e(window).trigger("editorLoaded"),e("iframe.wysihtml5-sandbox").each(function(a,t){e(t.contentWindow).off("focus.wysihtml5").on({"focus.wysihtml5":function(){e("li.dropdown").removeClass("open")}})})};o.prototype={constructor:o,createEditor:function(t){t=t||{},t=e.extend(!0,{},t),t.toolbar=this.toolbar[0];var n=new a.Editor(this.el[0],t);if(t&&t.events)for(var o in t.events)n.on(o,t.events[o]);return n},createToolbar:function(a,t){var o=this,i=e("<ul/>",{"class":"wysihtml5-toolbar",style:"display:none"}),d=t.locale||r.locale||"en";for(var l in r){var c=!1;void 0!==t[l]?t[l]===!0&&(c=!0):c=r[l],c===!0&&(i.append(n(l,s[d],t)),"html"===l&&this.initHtml(i),"link"===l&&this.initInsertLink(i),"image"===l&&this.initInsertImage(i),"alignment"===l&&this.initAlignment(i),"clear"===l&&this.initClear(i),"font"===l&&this.initFont(i),"font-size"===l&&this.initFontSize(i),"emphasis"===l&&this.initEmphasis(i),"text-color"===l&&this.initColorPicker(i,{elem:".text-color",type:"text",color:"#000",command:"textColor",attribute:"data-text-color"}),"highlight-color"===l&&this.initColorPicker(i,{elem:".highlight-color",type:"highlight",color:"#fff",command:"highlightColor",attribute:"data-highlight-color"}),"background-color"===l&&this.initColorPicker(i,{elem:".background-color",type:"background",color:"#fff",command:"backgroundColor",attribute:"data-background-color"}))}if(t.toolbar)for(l in t.toolbar)i.append(t.toolbar[l]);return i.find("a[data-wysihtml5-command='formatBlock']").click(function(a){var t=a.target||a.srcElement,n=e(t);o.toolbar.find(".current-font").text(n.html())}),i.find("a[data-wysihtml5-command='foreColor']").click(function(a){var t=a.target||a.srcElement,n=e(t);o.toolbar.find(".current-color").text(n.html())}),i.find(".line-height").on("shown.bs.dropdown",function(a){var t=e(a.target),n=t.find("button").data("wysihtml5-command-value");setTimeout(function(){t.find("a[data-wysihtml5-command-value='"+n+"']").focus()},0)}),i.find(".line-height a").click(function(a){var t=a.target||a.srcElement,n=e(t),r=n.data("wysihtml5-command-value");i.find(".line-height button").data("wysihtml5-command-value",r),o.editor.composer.commands.exec("lineHeight",r,[{name:"data-line-height",value:r}])}),this.el.before(i),i},initHtml:function(e){var a="a[data-wysihtml5-action='change_view']";
e.find(a).click(function(){e.find("a.btn").not(a).toggleClass("disabled")})},initInsertImage:function(a){var t,n=this,o=a.find(".bootstrap-wysihtml5-insert-image-modal"),i=o.find(".bootstrap-wysihtml5-insert-image-url"),r=o.find(".btn-primary"),s=i.val(),d=function(){var e=i.val();i.val(s),n.editor.currentView.element.focus(),t&&(n.editor.composer.selection.setBookmark(t),t=null),n.editor.composer.commands.exec("insertImage",e)};i.keypress(function(e){13==e.which&&(d(),o.modal("hide"))}),r.click(d),o.on("shown",function(){i.focus()}),o.on("hide",function(){n.editor.currentView.element.focus()}),a.find("a[data-wysihtml5-command=insertImage]").click(function(){var a=e(this).hasClass("wysihtml5-command-active");return a?!0:(n.editor.currentView.element.focus(!1),t=n.editor.composer.selection.getBookmark(),o.appendTo("body").modal("show"),o.on("click.dismiss.modal",'[data-dismiss="modal"]',function(e){e.stopPropagation()}),!1)})},initInsertLink:function(a){var t,n=this,o=a.find(".bootstrap-wysihtml5-insert-link-modal"),i=o.find(".bootstrap-wysihtml5-insert-link-url"),r=o.find(".bootstrap-wysihtml5-insert-link-target"),s=o.find(".btn-primary"),d=i.val(),l=function(){var e=i.val();i.val(d),n.editor.currentView.element.focus(),t&&(n.editor.composer.selection.setBookmark(t),t=null);var a=r.prop("checked");n.editor.composer.commands.exec("createLink",{href:e,target:a?"_blank":"_self",rel:a?"nofollow":""})};i.keypress(function(e){13==e.which&&(l(),o.modal("hide"))}),s.click(l),o.on("shown",function(){i.focus()}),o.on("hide",function(){n.editor.currentView.element.focus()}),a.find("a[data-wysihtml5-command=createLink]").click(function(){var a=e(this).hasClass("wysihtml5-command-active");return a?!0:(n.editor.currentView.element.focus(!1),t=n.editor.composer.selection.getBookmark(),o.appendTo("body").modal("show"),o.on("click.dismiss.modal",'[data-dismiss="modal"]',function(e){e.stopPropagation()}),!1)})},initAlignment:function(e){e.find(".alignment").alignment()},initClear:function(e){e.find(".clear").on("click",function(){var a=tinycolor("#fff"),t=a.toRgb();e.find(".font-picker").data("plugin_fontPicker").reset(),e.find(".font-size-picker").data("plugin_fontSizePicker").reset(),e.find(".emphasis").data("plugin_fontStyle").reset(),e.find(".alignment").data("plugin_alignment").reset(),e.find(".line-height a[data-wysihtml5-command-value='1']").trigger("click"),e.find(".text-color").spectrum("set","#000"),e.find(".highlight-color").spectrum("set","#fff"),e.find(".background-color").spectrum("set","#fff"),self.editor.composer.commands.exec("backgroundColor",t,[{name:"data-background-color",value:a.toRgbString()}])})},initFont:function(a){e(window).on("editorLoaded",function(){a.find(".font-picker").data("plugin_fontPicker").setContentDoc(self.editor.composer.iframe.contentDocument)}),a.find(".font-picker").fontPicker({}).on("standardFontSelected",function(e,a,t){self.editor.composer.commands.exec("standardFont",a,t,[{name:"data-standard-font",value:a},{name:"data-standard-font-family",value:t}]),self.editor.focus()}).on("googleFontSelected",function(e,a){self.editor.composer.commands.exec("googleFont",a,[{name:"data-google-font",value:a}]),self.editor.focus()}).on("customFontSelected",function(e,a,t){self.editor.composer.commands.exec("customFont",a,[{name:"data-custom-font",value:a},{name:"data-custom-font-url",value:t}]),self.editor.focus()})},initFontSize:function(e){e.find(".font-size-picker").fontSizePicker().on("sizeChanged",function(e,a){self.editor.composer.commands.exec("fontSize",a),self.editor.focus()})},initEmphasis:function(e){e.find(".emphasis").fontStyle()},initColorPicker:function(e,a){e.find(a.elem).spectrum({cancelText:"Cancel",chooseText:"Apply",clickoutFiresChange:!0,color:a.color,preferredFormat:"hex",showAlpha:!0,showInput:!0,type:a.type,change:function(e){var t=e.toRgb();self.editor.composer.commands.exec(a.command,t,[{name:a.attribute,value:e.toRgbString()}]),self.editor.focus()}})}};var i={resetDefaults:function(){e.fn.wysihtml5.defaultOptions=e.extend(!0,{},e.fn.wysihtml5.defaultOptionsCache)},bypassDefaults:function(a){return this.each(function(){var t=e(this);t.data("wysihtml5",new o(t,a))})},shallowExtend:function(a){var t=e.extend({},e.fn.wysihtml5.defaultOptions,a||{},e(this).data()),n=this;return i.bypassDefaults.apply(n,[t])},deepExtend:function(a){var t=e.extend(!0,{},e.fn.wysihtml5.defaultOptions,a||{}),n=this;return i.bypassDefaults.apply(n,[t])},init:function(e){var a=this;return i.shallowExtend.apply(a,[e])}};e.fn.wysihtml5=function(a){return i[a]?i[a].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof a&&a?(e.error("Method "+a+" does not exist on jQuery.wysihtml5"),void 0):i.init.apply(this,arguments)},e.fn.wysihtml5.Constructor=o;var r=e.fn.wysihtml5.defaultOptions={font:!0,"font-size":!0,emphasis:!0,alignment:!0,"line-height":!0,"highlight-color":!0,"text-color":!0,"background-color":!0,clear:!0,color:!1,"font-styles":!1,html:!1,image:!1,link:!1,lists:!1,size:"sm",events:{},parserRules:{classes:{"wysiwyg-color-silver":1,"wysiwyg-color-gray":1,"wysiwyg-color-white":1,"wysiwyg-color-maroon":1,"wysiwyg-color-red":1,"wysiwyg-color-purple":1,"wysiwyg-color-fuchsia":1,"wysiwyg-color-green":1,"wysiwyg-color-lime":1,"wysiwyg-color-olive":1,"wysiwyg-color-yellow":1,"wysiwyg-color-navy":1,"wysiwyg-color-blue":1,"wysiwyg-color-teal":1,"wysiwyg-color-aqua":1,"wysiwyg-color-orange":1,"align-left":1,"align-center":1,"align-right":1,justify:1},tags:{b:{},i:{},br:{},ol:{},ul:{},li:{},h1:{},h2:{},h3:{},h4:{},h5:{},h6:{},blockquote:{},u:1,img:{check_attributes:{width:"numbers",alt:"alt",src:"url",height:"numbers"}},a:{check_attributes:{href:"url",target:"alt",rel:"alt"}},span:1,div:1,code:1,pre:1}},stylesheets:["./css/bootstrap3-wysiwyg5-color.css"],locale:"en"};"undefined"==typeof e.fn.wysihtml5.defaultOptionsCache&&(e.fn.wysihtml5.defaultOptionsCache=e.extend(!0,{},e.fn.wysihtml5.defaultOptions));var s=e.fn.wysihtml5.locale={en:{font_styles:{normal:"Normal text",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",h5:"Heading 5",h6:"Heading 6"},emphasis:{bold:"Bold",italic:"Italic",underline:"Underline"},lists:{unordered:"Unordered list",ordered:"Ordered list",outdent:"Outdent",indent:"Indent"},link:{insert:"Insert link",cancel:"Cancel",target:"Open link in new window"},image:{insert:"Insert image",cancel:"Cancel"},html:{edit:"Edit HTML"},colours:{black:"Black",silver:"Silver",gray:"Grey",maroon:"Maroon",red:"Red",purple:"Purple",green:"Green",olive:"Olive",navy:"Navy",blue:"Blue",orange:"Orange"},line_height:{single:"Single","double":"Double"}}}}(window.jQuery,window.wysihtml5),!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function e(e,n){var u=null,f=null;$(n).wysihtml5({stylesheets:e.stylesheets}),o=$(".font-picker"),i=$(".background-color"),r=$(".text-color"),s=$(".highlight-color"),l=$("#editable").data("wysihtml5").editor,e.$on("loadAdditionalParams",function(e,t){m=!0,d=t,l.setValue(t.data),t.background&&(u=tinycolor(t.background),f=u.toRgb(),i.spectrum("set",u),l.composer.commands.exec("backgroundColor",f,[{name:"data-background-color",value:u.toRgbString()}])),a()}),e.$on("collectAdditionalParams",function(){u=l.composer.doc.body.getAttribute("data-background-color"),e.$parent.setAdditionalParam("data",l.getValue()),e.$parent.setAdditionalParam("background",u?u:"")}),l.on("load",function(){c=!0,t(),a()})}function a(){var e,a,t,n,i;c&&m&&$.each($("<div/>").html(d.data).find("span").addBack(),function(){t=$(this).attr("data-standard-font"),n=$(this).attr("data-google-font"),i=$(this).attr("data-custom-font"),e=$(this).attr("data-text-color"),a=$(this).attr("data-highlight-color"),t&&l.composer.commands.exec("standardFont",t,$(this).attr("data-standard-font-family")),n&&(o.data("plugin_fontPicker").addGoogleFont(n,!1),l.composer.commands.exec("googleFont",n)),i&&(RiseVision.Common.Utilities.loadCustomFont(i,$(this).attr("data-custom-font-url"),l.composer.iframe.contentDocument),l.composer.commands.exec("customFont",i,$(this).attr("data-custom-font-url"))),e&&(r.spectrum("set",e),l.composer.commands.exec("textColor",r.spectrum("get").toRgb())),a&&(s.spectrum("set",a),l.composer.commands.exec("highlightColor",s.spectrum("get").toRgb()))})}function t(){var e=null,a=null,t=!1,i=!1,d=!1,c="",m="",u="",f="",h="",p="",g=$(".emphasis"),b=$(".font-size-picker"),v=$(".alignment");$(".font-picker").on("show.bfhselectbox",function(){n()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){n()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){n()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){n(),e=l.composer.selection.getSelectedNode(),e&&3===e.nodeType&&(a=e.parentNode,a&&1===a.nodeType&&("body"!==a.tagName.toLowerCase()?(t="bold"===window.getComputedStyle(a,null).getPropertyValue("font-weight")?!0:!1,i="italic"===window.getComputedStyle(a,null).getPropertyValue("font-style")?!0:!1,d=-1!==window.getComputedStyle(a,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,g.data("plugin_fontStyle").setStyles({bold:t,italic:i,underline:d}),c=window.getComputedStyle(a,null).getPropertyValue("font-family"),c&&o.data("plugin_fontPicker").setFont(c),m=window.getComputedStyle(a,null).getPropertyValue("font-size"),m&&b.data("plugin_fontSizePicker").setFontSize(m),u=window.getComputedStyle(a,null).getPropertyValue("text-align"),u=-1===$.inArray(u,["left","center","right","justify"])?"left":u,u&&v.data("plugin_alignment").setAlignment(u),f=$(a).data("line-height")?$(a).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",f),h=window.getComputedStyle(a,null).getPropertyValue("color"),p=window.getComputedStyle(a,null).getPropertyValue("background-color"),h&&r.spectrum("set",h),p&&s.spectrum("set",p)):(o.data("plugin_fontPicker").reset(),b.data("plugin_fontSizePicker").reset(),g.data("plugin_fontStyle").reset(),v.data("plugin_alignment").reset(),$(".line-height button").data("wysihtml5-command-value","1"),r.spectrum("set","#000"),s.spectrum("set","#fff"))))})}function n(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var o,i,r,s,d,l=null,c=!1,m=!1;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:e}})}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,a){var t="font-family:"+a.font.family+"; ",n="color: "+(a.color?a.color:a.forecolor)+"; ",o="font-size: "+(-1===a.size.indexOf("px")?a.size+"px; ":a.size+"; "),i="font-weight: "+(a.bold?"bold":"normal")+"; ",r="font-style: "+(a.italic?"italic":"normal")+"; ",s="text-decoration: "+(a.underline?"underline":"none")+"; ",d="background-color: "+(a.highlightColor?a.highlightColor:a.backcolor)+"; ";return"."+e+" {"+t+n+o+i+r+s+d+"}"}function a(e){for(var a=document.createElement("style"),t=0,n=e.length;n>t;t++)a.appendChild(document.createTextNode(e[t]));document.head.appendChild(a)}function t(t,i){t.forEach(function(t){t.class&&t.fontSetting&&a([e(t.class,t.fontSetting)]),t.fontSetting.font.type&&("custom"===t.fontSetting.font.type&&t.fontSetting.font.family&&t.fontSetting.font.url?n(t.fontSetting.font.family,t.fontSetting.font.url,i):"google"===t.fontSetting.font.type&&t.fontSetting.font.family&&o(t.fontSetting.font.family,i))})}function n(e,a,t){var n=null,o="font-family: "+e+"; src: url('"+a+"');";t=t||document,n=t.styleSheets[0],null!==n&&n.addRule("@font-face",o)}function o(e,a){var t=document.createElement("link");a=a||document,t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","https://fonts.googleapis.com/css?family="+e.split(",")[0]),null!==t&&a.getElementsByTagName("head")[0].appendChild(t)}function i(e){for(var a=e.length,t=[],n=0;a>n;n++)t[n]=new Image,t[n].src=e[n]}function r(e){for(var a,t=window.location.search.substring(1),n=t.split("&"),o=0;o<n.length;o++)if(a=n[o].split("="),a[0]==e)return decodeURIComponent(a[1]);return""}return{getQueryParameter:r,getFontCssStyle:e,addCSSRules:a,loadFonts:t,loadCustomFont:n,loadGoogleFont:o,preloadImages:i}}(),angular.module("risevision.widget.text.config",[]).constant("stylesheets","../dist/css/editor.min.css"),angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.text.settings",["risevision.common.i18n","risevision.widget.text.config","risevision.widget.common","risevision.widget.common.scroll-setting","risevision.widget.common.tooltip","risevision.widget.common.widget-button-toolbar","risevision.widget.common.wysihtml5"]),angular.module("risevision.widget.text.settings").controller("textSettingsController",["$scope","stylesheets",function(e,a){e.stylesheets=[a]}]).value("defaultSettings",{params:{},additionalParams:{data:"",background:"",scroll:{}}});
//# sourceMappingURL=data:application/json;base64,
