!function(t,e,n,i){"use strict";function o(e,n){this.element=e,this.page=t(e).find(".page"),this.options=t.extend({},l,n),this._defaults=l,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",l={by:"continuous",speed:"medium",pause:5,click:!1,minimumMovement:3};o.prototype={init:function(){function e(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(l),TweenLite.killDelayedCallsTo(a)}var n,o,s=this,l=null,a=null,r=t(this.element).outerHeight(!0),c=r,u=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){c=t(s.element).scrollTop()+r,s.tween.progress(t(s.element).scrollTop()/u).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,o=this.page.outerHeight(!0)/t(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,o=Math.abs((this.page.outerHeight(!0)-t(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){e()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(e(),t(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,o,{scrollTop:u,ease:Linear.easeNone,delay:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=c&&(s.tween.pause(),c+=r,TweenLite.delayedCall(s.options.pause,a=function(){s.tween.resume()}))}:i,onComplete:function(){TweenLite.delayedCall(s.options.pause,l=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(c=r),t(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){t(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>t(this.element).height()},destroy:function(){t(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},o.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall(this.options.pause,this.calculateProgress)))},o.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},o.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},t.fn.autoScroll=function(e){return this.each(function(){t.data(this,"plugin_"+s)||t.data(this,"plugin_"+s,new o(this,e))})}}(jQuery,window,document);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function t(t,e){var n="font-family:"+e.font.family+"; ",i="color: "+(e.color?e.color:e.forecolor)+"; ",o="font-size: "+(-1===e.size.indexOf("px")?e.size+"px; ":e.size+"; "),s="font-weight: "+(e.bold?"bold":"normal")+"; ",l="font-style: "+(e.italic?"italic":"normal")+"; ",a="text-decoration: "+(e.underline?"underline":"none")+"; ",r="background-color: "+(e.highlightColor?e.highlightColor:e.backcolor)+"; ";return"."+t+" {"+n+i+o+s+l+a+r+"}"}function e(t){for(var e=document.createElement("style"),n=0,i=t.length;i>n;n++)e.appendChild(document.createTextNode(t[n]));document.head.appendChild(e)}function n(n,s){n.forEach(function(n){n.class&&n.fontSetting&&e([t(n.class,n.fontSetting)]),n.fontSetting.font.type&&("custom"===n.fontSetting.font.type&&n.fontSetting.font.family&&n.fontSetting.font.url?i(n.fontSetting.font.family,n.fontSetting.font.url,s):"google"===n.fontSetting.font.type&&n.fontSetting.font.family&&o(n.fontSetting.font.family,s))})}function i(t,e,n){var i=null,o="font-family: "+t+"; src: url('"+e+"');";n=n||document,i=n.styleSheets[0],null!==i&&i.addRule("@font-face",o)}function o(t,e){var n=document.createElement("link");e=e||document,n.setAttribute("rel","stylesheet"),n.setAttribute("type","text/css"),n.setAttribute("href","https://fonts.googleapis.com/css?family="+t.split(",")[0]),null!==n&&e.getElementsByTagName("head")[0].appendChild(n)}function s(t){for(var e=t.length,n=[],i=0;e>i;i++)n[i]=new Image,n[i].src=t[i]}function l(t){for(var e,n=window.location.search.substring(1),i=n.split("&"),o=0;o<i.length;o++)if(e=i[o].split("="),e[0]==t)return decodeURIComponent(e[1]);return""}return{getQueryParameter:l,getFontCssStyle:t,addCSSRules:e,loadFonts:n,loadCustomFont:i,loadGoogleFont:o,preloadImages:s}}();var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-13"]),_gaq.push(["_trackPageview"]),function(){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(t,e)}();var RiseVision=RiseVision||{};RiseVision.Text={},RiseVision.Text=function(t){"use strict";function e(){var t=0,e=[],n=[];document.querySelector(".page").innerHTML=u.data,$.each($("<div/>").html(u.data).find("span").addBack(),function(){for(n=i(this),t=0;t<n.length;t++)e.push(n[t])}),g.addCSSRules(e),$("#container").autoScroll(u.scroll).on("done",function(){s()}),o()}function n(t){return".wysiwyg-font-family-"+t.replace(/ /g,"-").toLowerCase()+" { font-family: '"+t+"'; }"}function i(t){var e=[],i=$(t).attr("data-google-font"),o=$(t).attr("data-custom-font");return i&&(g.loadGoogleFont(i),e.push(n(i))),o&&(g.loadCustomFont(o,$(t).attr("data-custom-font-url")),e.push(n(o))),e}function o(){t.rpc.call("","rsevent_ready",null,p.getString("id"),!0,!0,!0,!0,!0)}function s(){t.rpc.call("","rsevent_done",null,p.getString("id"))}function l(t){u=JSON.parse(JSON.stringify(t)),u.width=p.getInt("rsW"),u.height=p.getInt("rsH"),document.getElementById("container").style.width=u.width+"px",document.getElementById("container").style.height=u.height+"px",e()}function a(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").play()}function r(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").pause()}function c(){r()}var u=null,p=new t.Prefs,g=RiseVision.Common.Utilities;return{pause:r,play:a,setAdditionalParams:l,stop:c}}(gadgets),function(t,e){"use strict";function n(t,e){var n,i="",o="";Array.isArray(t)&&t.length>0&&Array.isArray(e)&&e.length>0&&("companyId"===t[0]&&(i=e[0]),"displayId"===t[1]&&(o=e[1]?e[1]:"preview"),"additionalParams"===t[2]&&(n=JSON.parse(e[2]),RiseVision.Text.setAdditionalParams(n)))}function i(){RiseVision.Text.play()}function o(){RiseVision.Text.pause()}function s(){RiseVision.Text.stop()}var l=new e.Prefs,a=l.getString("id");t.oncontextmenu=function(){return!1},document.body.onmousedown=function(){return!1},a&&""!==a&&(e.rpc.register("rscmd_play_"+a,i),e.rpc.register("rscmd_pause_"+a,o),e.rpc.register("rscmd_stop_"+a,s),e.rpc.register("rsparam_set_"+a,n),e.rpc.call("","rsparam_get",null,a,["companyId","displayId","additionalParams"]))}(window,gadgets);
//# sourceMappingURL=data:application/json;base64,
