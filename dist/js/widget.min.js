!function(e,t,n,o){"use strict";function i(t,n){this.element=t,this.page=e(t).find(".page"),this.options=e.extend({},r,n),this._defaults=r,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",r={by:"continuous",speed:"medium",pause:5,click:!1,minimumMovement:3};i.prototype={init:function(){function t(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(r),TweenLite.killDelayedCallsTo(a)}var n,i,s=this,r=null,a=null,l=e(this.element).outerHeight(!0),c=l,u=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){c=e(s.element).scrollTop()+l,s.tween.progress(e(s.element).scrollTop()/u).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,i=this.page.outerHeight(!0)/e(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,i=Math.abs((this.page.outerHeight(!0)-e(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){t()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(t(),e(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,i,{scrollTop:u,ease:Linear.easeNone,delay:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=c&&(s.tween.pause(),c+=l,TweenLite.delayedCall(s.options.pause,a=function(){s.tween.resume()}))}:o,onComplete:function(){TweenLite.delayedCall(s.options.pause,r=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(c=l),e(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){e(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>e(this.element).height()},destroy:function(){e(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},i.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall(this.options.pause,this.calculateProgress)))},i.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},i.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},e.fn.autoScroll=function(t){return this.each(function(){e.data(this,"plugin_"+s)||e.data(this,"plugin_"+s,new i(this,t))})}}(jQuery,window,document);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,t){var n="font-family: "+decodeURIComponent(t.font.family).replace(/'/g,"")+"; ",o="color: "+(t.color?t.color:t.forecolor)+"; ",i="font-size: "+(-1===t.size.indexOf("px")?t.size+"px; ":t.size+"; "),s="font-weight: "+(t.bold?"bold":"normal")+"; ",r="font-style: "+(t.italic?"italic":"normal")+"; ",a="text-decoration: "+(t.underline?"underline":"none")+"; ",l="background-color: "+(t.highlightColor?t.highlightColor:t.backcolor)+";";return"."+e+" {"+n+o+i+s+r+a+l+"}"}function t(e){for(var t=document.createElement("style"),n=0,o=e.length;o>n;n++)t.appendChild(document.createTextNode(e[n]));document.head.appendChild(t)}function n(n,s){function r(){s&&"function"==typeof s&&s()}function a(){r()}var l=null,c=[],u=[],p=[];if(!n||0===n.length)return r(),void 0;n.forEach(function(n){n.class&&n.fontStyle&&t([e(n.class,n.fontStyle)])});for(var g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"google"===n[g].fontStyle.font.type&&(l=n[g].fontStyle.font.family.split(",")[0],l=l.replace(/'/g,""),c.push(l));for(g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"custom"===n[g].fontStyle.font.type&&(u.push(decodeURIComponent(n[g].fontStyle.font.family).replace(/'/g,"")),p.push(n[g].fontStyle.font.url.replace(/'/g,"\\'")));if(0===c.length&&0===u.length)r();else{for(var d=0;d<u.length;d+=1)o(u[d],p[d]);c.length>0?i(c,a):r()}}function o(e,t,n){var o=null,i="font-family: "+e+"; src: url('"+t+"');";n=n||document,o=n.styleSheets[0],null!==o&&o.addRule("@font-face",i)}function i(e,t){WebFont.load({google:{families:e},active:function(){t&&"function"==typeof t&&t()},inactive:function(){t&&"function"==typeof t&&t()},timeout:2e3})}function s(e){var t=document.createElement("script");t.src=e,document.body.appendChild(t)}function r(e){for(var t=e.length,n=[],o=0;t>o;o++)n[o]=new Image,n[o].src=e[o]}function a(e){return l(e,window.location.search.substring(1))}function l(e,t){for(var n,o=t.split("&"),i=0;i<o.length;i++)if(n=o[i].split("="),n[0]==e)return decodeURIComponent(n[1]);return""}function c(e){var t=/(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})/,n=t.exec(e);return n?new Date(+n[1],+n[2]-1,+n[3],+n[4],+n[5]):void 0}function u(e){var t="";switch(e){case 404:t="The file does not exist or cannot be accessed.";break;case 507:t="There is not enough disk space to save the file on Rise Cache.";break;default:t="There was a problem retrieving the file from Rise Cache."}return t}function p(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent}function g(e,t){var n=new XMLHttpRequest;if(e&&t&&"function"==typeof t){n.open("HEAD",e+"?cb="+(new Date).getTime(),!1);try{n.send(),t(n.status>=200&&n.status<304)}catch(o){t(!1)}}}function d(){var e=25,t=navigator.userAgent.match(/Chrome\/(\S+)/),n=t?t[1]:0;return n&&(n=parseInt(n.substring(0,n.indexOf("."))),e>=n)?!0:!1}function f(e,t){return/^(?:f|ht)tps?\:\/\//.test(e)||(e=(t?"https://":"http://")+e),e}return{addProtocol:f,getQueryParameter:a,getQueryStringParameter:l,getFontCssStyle:e,addCSSRules:t,loadFonts:n,loadCustomFont:o,loadGoogleFonts:i,loadScript:s,preloadImages:r,getRiseCacheErrorMessage:u,unescapeHTML:p,hasInternetConnection:g,isLegacy:d,getDateObjectFromPlayerVersionString:c}}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function e(e,t){var o=null;e.event?(o=e,o.file_url&&(o.file_format=n(o.file_url)),o.company_id=l,o.display_id=a,c&&(o.version=c),t(o)):t(o)}function t(){var e=new Date,t=e.getUTCFullYear(),n=e.getUTCMonth()+1,o=e.getUTCDate();return 10>n&&(n="0"+n),10>o&&(o="0"+o),""+t+n+o}function n(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function o(e){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:t(),rows:[{insertId:""}]},o=JSON.parse(JSON.stringify(n));return o.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),o.rows[0].json=JSON.parse(JSON.stringify(e)),o.rows[0].json.ts=(new Date).toISOString(),o}function i(t,n){e(n,function(e){null!==e&&RiseVision.Common.Logger.log(t,e)})}function s(e,t){l=e,a=t}function r(e){c=e}var a="",l="",c=null;return{getInsertData:o,getFileFormat:n,logEvent:i,setIds:s,setVersion:r}}(),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-c<358e4?e({}):(t.open("POST",i,!0),t.onloadend=function(){var n={};try{n=JSON.parse(t.response)}catch(o){console.warn("Can't refresh logger token - ",o.message)}e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return r&&l===e}function o(o,i){function p(t){var n,r,a=new XMLHttpRequest;r=s.replace("TABLE_ID",o),c=t.refreshedAt||c,u=t.token||u,n=e.getInsertData(i),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+u),i.cb&&"function"==typeof i.cb&&(a.onloadend=function(){i.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!o||!i||i.hasOwnProperty("event")&&!i.event||i.hasOwnProperty("event")&&n(i.event)))return r=!0,l=i.event,setTimeout(function(){r=!1},a),t(p)}var i="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",c=0,u="";return{log:o}}(RiseVision.Common.LoggerUtils);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-13"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();var RiseVision=RiseVision||{};RiseVision.Text={},RiseVision.Text=function(e,t){"use strict";function n(e,n){function o(){n&&"function"==typeof n&&n()}Array.isArray(e)&&e.length>0?t.load({google:{families:e},timeout:2e3,active:function(){o()},inactive:function(){console.warn("No google fonts were loaded"),o()},fontinactive:function(e){s({event:"error",event_details:"Google font not loaded",error_details:e})}}):o()}function o(){document.querySelector(".page").innerHTML=g.data,n(g.googleFonts,function(){$.each(g.customFonts.fonts,function(e,t){f.loadCustomFont(t.family.replace(/'/g,""),t.url.replace(/'/g,"\\'"))}),$("#container").autoScroll(g.scroll).on("done",function(){a()}),r()})}function i(){return"text_events"}function s(e){RiseVision.Common.LoggerUtils.logEvent(i(),e)}function r(){e.rpc.call("","rsevent_ready",null,d.getString("id"),!0,!0,!0,!0,!0)}function a(){e.rpc.call("","rsevent_done",null,d.getString("id")),s({event:"done"})}function l(e){g=JSON.parse(JSON.stringify(e)),g.width=d.getInt("rsW"),g.height=d.getInt("rsH"),document.getElementById("container").style.width=g.width+"px",document.getElementById("container").style.height=g.height+"px",o()}function c(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").play(),s({event:"play"})}function u(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").pause()}function p(){u()}var g=null,d=new e.Prefs,f=RiseVision.Common.Utilities;return{pause:u,play:c,setAdditionalParams:l,stop:p}}(gadgets,WebFont),function(e,t){"use strict";function n(e,t){var n,o="",i="";Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(o=t[0]),"displayId"===e[1]&&(i=t[1]?t[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(o,i),"additionalParams"===e[2]&&(n=JSON.parse(t[2]),RiseVision.Text.setAdditionalParams(n)))}function o(){RiseVision.Text.play()}function i(){RiseVision.Text.pause()}function s(){RiseVision.Text.stop()}var r=new t.Prefs,a=r.getString("id");e.oncontextmenu=function(){return!1},document.body.onmousedown=function(){return!1},a&&""!==a&&(t.rpc.register("rscmd_play_"+a,o),t.rpc.register("rscmd_pause_"+a,i),t.rpc.register("rscmd_stop_"+a,s),t.rpc.register("rsparam_set_"+a,n),t.rpc.call("","rsparam_get",null,a,["companyId","displayId","additionalParams"]))}(window,gadgets);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
